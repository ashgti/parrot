O = ${o}
RM_F = ${rm_f}

INC=include/parrot

H_FILES = $(INC)/config.h $(INC)/exceptions.h $(INC)/io.h $(INC)/op.h \
$(INC)/register.h $(INC)/string.h $(INC)/events.h $(INC)/interpreter.h \
$(INC)/memory.h $(INC)/parrot.h $(INC)/stacks.h $(INC)/packfile.h \
$(INC)/global_setup.h $(INC)/vtable.h $(INC)/oplib/core_ops.h \
$(INC)/runops_cores.h $(INC)/trace.h $(INC)/oplib/vtable_ops.h \
$(INC)/pmc.h $(INC)/resources.h

O_FILES = global_setup$(O) interpreter$(O) parrot$(O) register$(O) \
core_ops$(O) memory$(O) packfile$(O) stacks$(O) string$(O) encoding$(O) \
chartype$(O) runops_cores$(O) trace$(O) vtable_ops$(O) classes/intclass$(O) \
encodings/singlebyte$(O) encodings/utf8$(O) encodings/utf16$(O) \
encodings/utf32$(O) chartypes/unicode$(O) chartypes/usascii$(O) resources$(O)

#DO NOT ADD C COMPILER FLAGS HERE
#Add them in Configure.pl--look for the
#comment 'ADD C COMPILER FLAGS HERE'
CFLAGS = ${ccflags} ${cc_debug}

C_LIBS = ${libs}

CC = ${cc}
LD = ${ld}
PERL = ${perl}
TEST_PROG = test_prog${exe}
PDUMP = pdump${exe}

.c$(O):
	$(CC) $(CFLAGS) -o $@ -c $<

all : $(TEST_PROG) $(PDUMP) examples/assembly/mops${exe}

#XXX This target is not portable to Win32

shared: libparrot.so

libparrot.so: $(O_FILES)
	$(CC) -shared $(C_LIBS) -o $@ $(O_FILES)

$(TEST_PROG): test_main$(O) $(O_FILES) Parrot/OpLib/core.pm
	$(CC) $(CFLAGS) -o $(TEST_PROG) $(O_FILES) test_main$(O) $(C_LIBS)

$(PDUMP): pdump$(O) $(O_FILES)
	$(CC) $(CFLAGS) -o $(PDUMP) $(O_FILES) pdump$(O) $(C_LIBS)

test_main$(O): $(H_FILES)

examples/assembly/mops.pbc: examples/assembly/mops.pasm assemble.pl
	cd examples/assembly; make mops.pbc PERL=$(PERL)

Parrot/OpLib/core.pm: core.ops ops2pm.pl
	$(PERL) ops2pm.pl core.ops

Parrot/OpLib/vtable.pm: vtable.ops ops2pm.pl
	$(PERL) ops2pm.pl vtabls.ops

examples/assembly/mops.c: examples/assembly/mops.pbc pbc2c.pl
	$(PERL) pbc2c.pl examples/assembly/mops.pbc > examples/assembly/mops.c

examples/assembly/mops${exe}: examples/assembly/mops$(O) $(O_FILES)
	$(CC) $(CFLAGS) -o examples/assembly/mops${exe} examples/assembly/mops$(O) $(O_FILES) $(C_LIBS)

global_setup$(O): $(H_FILES)

resources$(O): $(H_FILES)

string$(O): $(H_FILES)

chartype$(O): $(H_FILES)

encoding$(O): $(H_FILES)

chartype/usascii$(O): $(H_FILES)

chartype/unicode$(O): $(H_FILES)

encoding/singlebyte$(O): $(H_FILES)

encoding/utf8$(O): $(H_FILES)

encoding/utf16$(O): $(H_FILES)

encoding/utf32$(O): $(H_FILES)

classes/intclass$(O): $(H_FILES)

interpreter$(O): interpreter.c $(H_FILES)

memory$(O): $(H_FILES)

packfile$(O): $(H_FILES)

parrot$(O): $(H_FILES)

register$(O): $(H_FILES)

stacks$(O): $(H_FILES)

core_ops$(O): $(H_FILES) core_ops.c

core_ops.c $(INC)/oplib/core_ops.h: core.ops ops2c.pl
	$(PERL) ops2c.pl core.ops

vtable.ops: make_vtable_ops.pl
	$(PERL) make_vtable_ops.pl > vtable.ops

vtable_ops.c $(INC)/oplib/vtable_ops.h: vtable.ops ops2c.pl
	$(PERL) ops2c.pl vtable.ops

$(INC)/config.h: Configure.pl config_h.in
	$(PERL) Configure.pl

$(INC)/vtable.h: vtable.tbl vtable_h.pl
	$(PERL) vtable_h.pl

docs: docs/.dummy

docs/.dummy:
	cd docs; make

clean:
	$(RM_F) *$(O) *.s core_ops.c $(TEST_PROG) $(PDISASM) $(PDUMP)
	$(RM_F) $(INC)/vtable.h
	$(RM_F) $(INC)/oplib/core_ops.h
	$(RM_F) $(INC)/oplib/vtable_ops.h vtable_ops.c vtable.ops
	$(RM_F) $(TEST_PROG) $(PDISASM) $(PDUMP)
	$(RM_F) examples/assembly/mops$(EXE) examples/assembly/mops.c
	$(RM_F) examples/assembly/mops$(O) examples/assembly/mops.pbc
	$(RM_F) Parrot/OpLib/core.pm
	cd docs; make clean

distclean:
	perl -MExtUtils::Manifest=filecheck -le '$ExtUtils::Manifest::Quiet=1;unlink $_ for filecheck()'

test: $(TEST_PROG) assemble.pl .test_dummy

.test_dummy:
	$(PERL) t/harness

update:
	cvs -q update -dP

