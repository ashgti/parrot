O = ${o}

INC=include/parrot
H_FILES = $(INC)/config.h $(INC)/exceptions.h $(INC)/io.h $(INC)/op.h $(INC)/register.h $(INC)/string.h $(INC)/events.h $(INC)/interpreter.h $(INC)/memory.h $(INC)/parrot.h $(INC)/stacks.h $(INC)/packfile.h $(INC)/bytecode.h $(INC)/global_setup.h

O_FILES = global_setup$(O) interpreter$(O) parrot$(O) register$(O) basic_opcodes$(O) memory$(O) packfile$(O) bytecode$(O) string$(O) strnative$(O)

#DO NOT ADD C COMPILER FLAGS HERE
#Add them in Configure.pl--look for the
#comment 'ADD C COMPILER FLAGS HERE'
CFLAGS = ${ccflags} ${cc_debug}

C_LIBS = ${libs}

CC = ${cc}
LD = ${ld}
PERL = ${perl}
TEST_PROG = test_prog${exe}
PDUMP = pdump${exe}

.c.o:
	$(CC) $(CFLAGS) -o $@ -c $<

all : $(TEST_PROG) $(PDUMP)

#XXX This target is not portable to Win32
shared: libparrot.so
libparrot.so: $(O_FILES)
	$(CC) -shared $(C_LIBS) -o $@ $(O_FILES)

$(TEST_PROG): test_main$(O) $(O_FILES)
	$(CC) $(CFLAGS) -o $(TEST_PROG) $(O_FILES) test_main$(O) $(C_LIBS)

$(PDUMP): pdump$(O) $(O_FILES)
	$(CC) $(CFLAGS) -o $(PDUMP) $(O_FILES) pdump$(O) $(C_LIBS)

test_main$(O): $(H_FILES)

global_setup$(O): $(H_FILES)

string$(O): $(H_FILES)

strnative$(O): $(H_FILES)

$(INC)/interp_guts.h: opcode_table build_interp_starter.pl
	$(PERL) build_interp_starter.pl

interpreter$(O): interpreter.c $(H_FILES) $(INC)/interp_guts.h

memory$(O): $(H_FILES)

bytecode$(O): $(H_FILES)

packfile$(0): $(H_FILES)

parrot$(O): $(H_FILES)

register$(O): $(H_FILES)

basic_opcodes$(O): $(H_FILES) basic_opcodes.c

basic_opcodes.c: basic_opcodes.ops process_opfunc.pl $(INC)/interp_guts.h
	$(PERL) process_opfunc.pl basic_opcodes.ops

$(INC)/op.h: opcode_table make_op_header.pl
	$(PERL) make_op_header.pl opcode_table > $(INC)/op.h

config.h: Configure.pl config_h.in
	$(PERL) Configure.pl

clean:
	rm -f *$(O) *.s basic_opcodes.c $(INC)/interp_guts.h $(INC)/op.h $(TEST_PROG)

test:
	$(PERL) t/harness

