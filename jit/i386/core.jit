;
;   i386.jit 
;

Parrot_noop: \x90

Parrot_set_i_ic: \xc7 \x05 &IR1 *IC2

Parrot_set_i_i: \x8b \x0d &IR2 \x89 \x0d &IR1

Parrot_set_n_nc: \xdd \x05 &NC2 \xdd \x1d &NR1

Parrot_mul_i_i_i: \xa1 &IR2 \x0f \xaf \x05 &IR3 \xa3 &IR1

Parrot_sub_i_i_i: \xa1 &IR2 \x2b \x05 &IR3 \xa3 &IR1

Parrot_iton_n_i: \xdb \x05 &IR2 \xdd \x1d &NR1

Parrot_div_n_n_n: \xdd \x05 &NR2 \xdd \x05 &NR3 \xde \xf9 \xdd \x1d &NR1

Parrot_sub_n_n_n: \xdd \x05 &NR2 \xdd \x05 &NR3 \xde \xe9 \xdd \x1d &NR1

Parrot_print_sc: \xc7 \x05 &TI1 \x01 \x00 \x00 \x00 S(WRITE,3, A&TI1 V&SCbufstart1 V*SCstrlen1)

Parrot_if_i_ic: \xa1 &IR1 \x3d \x00 \x00 \x00 \x00 \x0f \x85 *JIC2

; or change %eip ?
Parrot_branch_ic: \xe9 *JIC1

; I'm not quite sure if this's ok

Parrot_time_n: S(GETTIMEOFDAY, 2, V&TI0 V&TI2) \xdb\x05 &TI0 \xdb\x05 &TI1 \xdd\x05 &CF0 \xde\xf9\xde\xc1\xdd\x1d &NR1

Parrot_end: \xc9\xc3

; OK, I really dislike these ones

; I'm sure there is a faster way (that's what we are searching, right?)

Parrot_print_ic: \x68 &TC15 \x68\x00\x00\x00\x00\x8d\x5c\x24\x04\x83\x2b\x01\xa1 &IC1 \x6a\x0a\x89\xe1\x83\x41\x04\x01\x83\xf8\x0a\x7c\x0f\x99\xf7\x39\x83\x2b\x01\x8b\x0b\x80\xc2\x30\x88\x11\xe2\xe6\x83\x2b\x01\x8b\x0b\x04\x30\x88\x01\x89\xe1\x83\x41\x04\x01\x8b\x49\x04 \x89 \x0d &TI0 \x8b \x0b \x89 \x0d &TI1 \xc7 \x05 &TI2 \x01 \x00 \x00 \x00 S(WRITE,3, A&TI2 A&TI1 A&TI0) 

Parrot_print_i: \x68 &TC15 \x68\x00\x00\x00\x00\x8d\x5c\x24\x04\x83\x2b\x01\xa1 &IR1 \x6a\x0a\x89\xe1\x83\x41\x04\x01\x83\xf8\x0a\x7c\x0f\x99\xf7\x39\x83\x2b\x01\x8b\x0b\x80\xc2\x30\x88\x11\xe2\xe6\x83\x2b\x01\x8b\x0b\x04\x30\x88\x01\x89\xe1\x83\x41\x04\x01\x8b\x49\x04 \x89 \x0d &TI0 \x8b \x0b \x89 \x0d &TI1 \xc7 \x05 &TI2 \x01 \x00 \x00 \x00 S(WRITE,3, A&TI2 A&TI1 A&TI0) 

; call printf and fflush(stdout)
Parrot_print_n: \x83 \xec \x0c \xdd \x05 &NR1 \xdd \x1c \x24 \x68 &CC0 \xe8 &L0 

