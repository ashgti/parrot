/*
Copyright (C) 2008, The Perl Foundation.
$Id$

=head1 NAME

src/dynpmc/mdx.pmc - MDx wrapper of libcrypto (libssl)

=head1 DESCRIPTION

See L<www.openssl.org>

=head2 Methods

=over 4

=cut

*/

#include <openssl/mdx.h>

pmclass MDx
    dynpmc
    need_ext
    group digest_group {

/*

=item C<void init()>

=cut

*/
    void init() {
#ifndef OPENSSL_NO_MDx
        MDx_CTX *c = mem_allocate_zeroed_typed(MDx_CTX);
        PMC_data(SELF) = c;
        PObj_custom_mark_destroy_SETALL(SELF);
#else
        real_exception(interp, NULL, ILL_INHERIT,
            "MDx is disabled");
#endif
    }

/*

=item C<void mark()>

=cut

*/
    void mark() {
#ifndef OPENSSL_NO_MDx
        if (PMC_data(SELF))
            pobject_lives(INTERP, (PObj *)PMC_data(SELF));
#endif
    }

/*

=item C<void destroy()>

=cut

*/
    void destroy() {
#ifndef OPENSSL_NO_MDx
        MDx_CTX *c = PMC_data_typed(SELF, MDx_CTX *);
        if (c) {
            mem_sys_free(c);
            PMC_data(SELF) = NULL;
        }
#endif
    }

/*

=item C<PMC* clone()>

=cut

*/
    PMC* clone() {
#ifndef OPENSSL_NO_MDx
        PMC *retval = pmc_new_noinit(INTERP, SELF->vtable->base_type);
        MDx_CTX *c = mem_allocate_zeroed_typed(MDx_CTX);
        memcpy(c, PMC_data(SELF), sizeof (MDx_CTX));
        PMC_data(retval) = c;
        PObj_custom_mark_destroy_SETALL(retval);
        return retval;
#else
        return NULL;
#endif
    }


/*

=back

=head2 Specific Methods

=over 4

=item C<void MDx_Init()>

=cut

*/
    METHOD void MDx_Init() {
#ifndef OPENSSL_NO_MDx
        MDx_CTX *c = PMC_data_typed(SELF, MDx_CTX *);
        (void)MDx_Init(c);
#endif
    }

/*

=item C<void MDx_Update(STRING *buf)>

=cut

*/
    METHOD void MDx_Update(STRING *buf) {
#ifndef OPENSSL_NO_MDx
        MDx_CTX *c = PMC_data_typed(SELF, MDx_CTX *);
        (void)MDx_Update(c, (unsigned char *)buf->strstart, buf->bufused);
#endif
    }

/*

=item C<STRING* MDx_Final()>

=cut

*/
    METHOD STRING* MDx_Final() {
#ifndef OPENSSL_NO_MDx
        unsigned char digest[MDx_DIGEST_LENGTH];
        MDx_CTX *c = PMC_data_typed(SELF, MDx_CTX *);
        STRING *retval;
        (void)MDx_Final(digest, c);
        retval = string_from_cstring(INTERP, (char *)digest, MDx_DIGEST_LENGTH);
        RETURN(STRING *retval);
#else
        return NULL;
#endif
    }

}

/*

=back

=head1 AUTHORS

Francois Perrad

=cut

*/

/*
 * Local variables:
 *   c-file-style: "parrot"
 * End:
 * vim: expandtab shiftwidth=4:
 */
