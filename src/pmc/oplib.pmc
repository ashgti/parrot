#include "parrot/parrot.h"

static PMC *OPLIB_PMC_INSTANCE;
pmclass OpLib {
    void class_init() {
        OPLIB_PMC_INSTANCE = NULL;
    }

    VTABLE void *get_pointer() {
        return OPLIB_PMC_INSTANCE;
    }

    VTABLE void set_pointer(void *ptr) {
        OPLIB_PMC_INSTANCE = (PMC *)ptr;
    }

    VTABLE PMC *get_pmc_keyed_string(STRING *name) {
        PMC * const family = pmc_new(INTERP, enum_class_OpFamily);
        VTABLE_set_string_native(INTERP, name);
        if (!VTABLE_elements(INTERP, family))
            return PMCNULL;
        return family;
    }

    VTABLE PMC *get_pmc_keyed_int(INTVAL value) {
        PMC * const op = pmc_new(INTERP, enum_class_Opcode)
        VTABLE_set_integer_native(INTERP, op, value);
        return op;
    }

    VTABLE INTVAL get_integer() {
        return interp->op_lib->op_count;
    }
}
