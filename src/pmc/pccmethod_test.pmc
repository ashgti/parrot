/*
Copyright (C) 2001-2007, The Perl Foundation.
$Id$

=head1 NAME

src/pmc/pmethod_test.pmc - PCCMETHOD_Test PMC

=cut

*/

#include "parrot/parrot.h"

pmclass PCCMETHOD_Test need_ext does hash {


    METHOD void test_method()
    {
        UNUSED(SELF);
        PIO_printf(interp, "test_method\n");
    }

    PCCMETHOD test_method0(int a1)
    {
        UNUSED(SELF);
        PIO_printf(interp, "test_method0\n");
        PIO_printf(interp, "%d\n", a1);
    }

    PCCMETHOD test_method1(int a1, int a2, int a3, int a4, int a5, int a6)
    {
        UNUSED(SELF);
        PIO_printf(interp, "test_method1\n");
        PIO_printf(interp, "%d,%d,%d,%d,%d,%d\n", a1, a2, a3, a4, a5, a6);
    }

    PCCMETHOD test_method2(int a1 :optional, int a1o :opt_flag,
                           PMC *slurpy_pos :slurpy)
    {
        STRING *kevin = string_from_literal(interp, "KEVIN");
        UNUSED(SELF);
        PIO_printf(interp, "test_method2\n");
        PIO_printf(interp, "%d, %d, %Ss %Ss\n", a1, a1o,
            VTABLE_name(interp, slurpy_pos),
            VTABLE_get_repr(interp,slurpy_pos));

        PCCRETURN(int 1000, STRING *kevin);
    }

    PCCMETHOD test_method3(PMC *a1 :named["a1name"], PMC *a2  :named["a2name"])
    {
        UNUSED(SELF);
        PIO_printf(interp, "test_method3\n");
        PIO_printf(interp, "%Ps, %Ps\n", a1, a2);
    }

    PCCMETHOD test_method4(int george :optional, int g_f :opt_flag,
            PMC *slurpy_pos :slurpy, PMC *slurpy_named :slurpy :named)
    {
        UNUSED(SELF);
        UNUSED(george);
        UNUSED(g_f);
        UNUSED(slurpy_pos);
        UNUSED(slurpy_named);
        PIO_printf(interp, "test_method4\n");
    }
}

/*
 * Local variables:
 *   c-file-style: "parrot"
 * End:
 * vim: expandtab shiftwidth=4:
 */
