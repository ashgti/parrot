/*
Copyright (C) 2001-2007, The Perl Foundation.
$Id$

=head1 NAME

src/pmc/metaattribute.pmc - Attribute metadata

=head1 DESCRIPTION

Implements a single class attribute for the MetaClass.

=head2 Functions

=over 4

=cut

*/

#include "parrot/parrot.h"
#define PARROT_METAATTRIBUTE(o) ((Parrot_MetaAttribute *) PMC_data(o))

typedef struct Parrot_MetaAttribute {
    STRING *name;
    STRING *type;
} Parrot_MetaAttribute;


pmclass MetaAttribute need_ext {

/*

=item C<void init()>

Initializes the class flags.

=item C<void init_pmc(PMC *init)>

The actual class creation code, called from C<newclass> opcode. The C<init>
argument is not a PMC* but the C<classname> STRING.

=cut

*/

    void init() {
        Parrot_MetaAttribute *attr = NULL;

        /* Custom DOD mark and destory. */
        PObj_custom_mark_SET(SELF);
        PObj_active_destroy_SET(SELF);

        /* Set up the attribute. */
        attr = mem_sys_allocate_zeroed(sizeof(Parrot_MetaAttribute));
        PMC_data(SELF) = attr;
    }

    void init_pmc(PMC* args) {
        SELF.init();
    }

/*

=item C<void destroy()>

Free the class's attribute array, if any. Also used by ParrotObjects.

=cut

*/
    void destroy() {
            mem_sys_free(PMC_data(SELF));
    }

/*

=item C<void destroy()>

Mark any referenced strings and PMCs.

=cut

*/
    void mark() {
        Parrot_MetaAttribute *attr = PARROT_METAATTRIBUTE(SELF);
        if (attr->name)
            pobject_lives(interp, (PObj*)attr->name);
        if (attr->type)
            pobject_lives(interp, (PObj*)attr->type);
    }

/*

=item C<PMC* clone()>

Creates a copy of the attribute metadata.

=cut

*/
    PMC* clone() {
        PMC *cloned = pmc_new(interp, enum_class_MetaAttribute);
        Parrot_MetaAttribute *attr = PARROT_METAATTRIBUTE(SELF);
        Parrot_MetaAttribute *attr_clone = PARROT_METAATTRIBUTE(cloned);
        attr_clone->name = attr->name;
        attr_clone->type = attr->type;
        return cloned;
    }

/*

=item C<void name(PMC *name)>

Name attribute accessor/mutator.

=cut

*/
    PCCMETHOD void name(STRING *name :optional, int got_name :opt_flag) {
        Parrot_MetaAttribute *attr = PARROT_METAATTRIBUTE(SELF);
        STRING *name_attr = NULL;

        if (got_name) {
            attr->name = name;
        }

        name_attr = attr->name;
        PCCRETURN(STRING *name_attr);
    }

/*

=item C<void type(PMC *type)>

Type attribute accessor.

=cut

*/
    PCCMETHOD void type(STRING *type :optional, int got_type :opt_flag) {
        Parrot_MetaAttribute *attr = PARROT_METAATTRIBUTE(SELF);
        STRING *type_string = NULL;

        if (got_type) {
            attr->type = type;
        }

        type_string = attr->type;
        PCCRETURN(STRING *type_string);
    }
}

/*

=back

=head1 SEE ALSO

F<docs/pdds/pdd15_objects.pod>.

=cut

*/

/*
 * Local variables:
 *   c-file-style: "parrot"
 * End:
 * vim: expandtab shiftwidth=4:
 */
