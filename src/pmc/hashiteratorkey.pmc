/*
Copyright (C) 2001-2009, Parrot Foundation.
$Id$

=head1 NAME

src/pmc/hashiteratorkey.pmc - accessor for single value during hash iteration.

=head1 DESCRIPTION

Single (key,value) pair.


=head1 Methods

=over 4

=cut

*/

pmclass HashIteratorKey no_ro auto_attrs {
    ATTR Hash        *parrot_hash; /* Underlying parrot's hash */
    ATTR HashBucket  *bucket;      /* Current bucket from HashItertor */

/*

=item C<get_pmc()>

Get "key".

=cut

*/
    VTABLE PMC* get_pmc() {
        return PMCNULL;
    }

    VTABLE INTVAL get_integer() {
        return -1;
    }

    VTABLE STRING* get_string() {
        Parrot_HashIteratorKey_attributes *attrs =
                PARROT_HASHITERATORKEY(SELF);

        if (attrs->parrot_hash) {
            switch (attrs->parrot_hash->key_type) {
                case Hash_key_type_int:
                    return Parrot_str_from_int(INTERP, (INTVAL)attrs->bucket->key);

                case Hash_key_type_STRING:
                    return (STRING*)attrs->bucket->key;

                case Hash_key_type_PMC:
                    return VTABLE_get_string(INTERP, (PMC *)attrs->bucket->key);

                default:
                    break;
            }
        }

        /* Horribly die? */
        return NULL;
    }



}

/*

=back

=cut

*/

/*
 * Local variables:
 *   c-file-style: "parrot"
 * End:
 * vim: expandtab shiftwidth=4:
 */

