/*
Copyright: 2001-2005 The Perl Foundation.  All Rights Reserved.
$Id$

=head1 NAME

src/classes/os.pmc - Files and Directories PMC

=head1 DESCRIPTION

C<os> is a singleton class which provides access to the system
files and directories.

=head2 Methods

=over 4

=cut

*/

#include "parrot/parrot.h"

static PMC * OS_PMC;
pmclass OS singleton {

/*

=item C<void* get_pointer()>

=item C<void set_pointer(void *ptr)>

These two functions are part of the singleton creation interface. For more
information see F<src/pmc.c>.

=cut

*/

    void* get_pointer() {
        return OS_PMC;
    }

    void set_pointer(void* ptr) {
        OS_PMC = (PMC*) ptr;
    }


/*

=item C<char* cwd()>

=cut

*/

    METHOD STRING* cwd() {
        STRING *scwd;
        char * cwd = getcwd(NULL, 0);
        if (cwd) {
            scwd = string_from_cstring(interpreter, cwd, strlen(cwd));
            mem_sys_free(cwd);
            return scwd;
        } else {
            /* XXX RAISE EXCEPTION (check errno)
               The getcwd() function will fail if:

               [EACCES]           
               Read or search permission was denied for a component
               of the pathname.

               [EINVAL]
               The size argument is zero.

               [ENOENT]
               A component of the pathname no longer exists.

               [ENOMEM]
               Insufficient memory is available.

               [ERANGE]
               The size argument is greater than zero but smaller
               than the length of the pathname plus 1.
            */

        }
    }


/*

=item C<void cd(char *path)>

=cut

*/

    METHOD void cd(STRING *path) {
        int error;
        char *cpath = string_to_cstring(interpreter, path);
        error = chdir(cpath);
        string_cstring_free(cpath);
        if (error) {
            /* XXX Check errno:

            [ENOTDIR]
            A component of the path prefix is not a directory.

            [ENAMETOOLONG]
            A component of a pathname exceeded {NAME_MAX} charac-
            ters, or an entire path name exceeded {PATH_MAX} char-
            acters.
            
            [ENOENT]
            The named directory does not exist.

            [ELOOP]
            Too many symbolic links were encountered in translat-
            ing the pathname.

            [EACCES]
            Search permission is denied for any component of the
            path name.

            [EFAULT]
            Path points outside the process's allocated address
            space.

            [EIO]
            An I/O error occurred while reading from or writing to
            the file system.
            */
        }
    }
}
/*

=back

=head1 SEE ALS0

   man chdir(2), getcwd(3)

=cut

*/

/*
 * Local variables:
 * c-indentation-style: bsd
 * c-basic-offset: 4
 * indent-tabs-mode: nil
 * End:
 *
 * vim: expandtab shiftwidth=4:
*/
