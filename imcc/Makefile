# Manually generated by programmer 

# Visual C++
#CC = cl
DEBUG = -g
# GCC
#CC = gcc -efence -Wall -pedantic
CC = gcc -Wall -pedantic
YACC = bison -v -y
LEX = flex
LIBS =
#LIBS = -lefence
#LIBS = -ll -ly

HEADERS = imc.h imcparser.h stacks.h cfg.h instructions.h cfg.h debug.h

default :
	$(MAKE) imcc

clean :
	rm -f core
	rm -f *.o
	rm -f imcparser.output
	rm -f imcc

imcparser.c : imcc.y
	$(YACC) -d -o imcparser.c imcc.y

imclexer.c : imcc.l $(HEADERS) 
	$(LEX) imcc.l

imcparser.o : imcparser.c $(HEADERS)
	$(CC) $(DEBUG) -c imcparser.c

imclexer.o : imclexer.c $(HEADERS)
	$(CC) $(DEBUG) -c imclexer.c

sym.o : sym.c $(HEADERS)
	$(CC) $(DEBUG) -c sym.c

type.o : type.c $(HEADERS)
	$(CC) $(DEBUG) -c type.c

imc.o : imc.c $(HEADERS)
	$(CC) $(DEBUG) -c imc.c
	
stacks.o: stacks.c $(HEADERS)
	$(CC) $(DEBUG) -c stacks.c

symreg.o: symreg.c $(HEADERS)
	$(CC) $(DEBUG) -c symreg.c

instructions.o: instructions.c $(HEADERS)
	$(CC) $(DEBUG) -c instructions.c

cfg.o: cfg.c $(HEADERS)
	$(CC) $(DEBUG) -c cfg.c

debug.o: debug.c $(HEADERS)
	$(CC) $(DEBUG) -c debug.c

imcc : imcparser.o imclexer.o imc.o stacks.o symreg.o instructions.o cfg.o debug.o
	$(CC) $(DEBUG) -o imcc imc.o imcparser.o imclexer.o stacks.o symreg.o instructions.o cfg.o debug.o $(LIBS)

