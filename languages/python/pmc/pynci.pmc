/*
Copyright (C) 2001-2003, The Perl Foundation.
$Id$

=head1 NAME

pmc/nci.pmc - Python Native Call Interface Functions

=head1 DESCRIPTION

Extends Parrot's NCI to include attributes, implemented as properties.

=head2 Methods

=over 4

=cut

*/

#include "parrot/parrot.h"

pmclass PyNCI extends NCI extends PyFunc dynpmc group python_group {

/*

=item C<PMC* get_attr_str(STRING *name)>

Return attribute named C<name>.

=cut

*/

    PMC* get_attr_str(STRING* idx) {
        return VTABLE_getprop(INTERP, SELF, idx);
    }

/*

=item C<void *invoke(void *next)>

Calls the associated C function, returning C<*next>.

XXX Due to different calling schemes (object in P2 vs P5)
the inherited NCI.invoke() can't be used. --leo

=cut

*/

    void* invoke (void * next) {
        Parrot_csub_t func = (Parrot_csub_t)D2FPTR(PMC_data(SELF));
        func(INTERP, SELF);
        return next;
    }
}

/*

=back

=head1 SEE ALSO

F<docs/pdds/pdd03_calling_conventions.pod>.

=head1 HISTORY

Initial revision by sean 2002/08/04.

=cut

*/

/*
 * Local variables:
 *   c-file-style: "parrot"
 * End:
 * vim: expandtab shiftwidth=4:
 */
