/*
Copyright: 2005 The Perl Foundation.  All Rights Reserved.
$Id: luanil.pmc $

=head1 NAME

classes/luanil.pmc - Lua Nil

=head1 DESCRIPTION

C<LuaNil> extends C<Python None> to provide a class with the behaviour of
the Lua C<Nil> value.

=head2 Overloaded Methods

=over 4

=cut

*/

#include "parrot/parrot.h"

static STRING *string_representation;
static PMC *Lua_Nil;

pmclass LuaNil 
    singleton 
    extends None 
    dynpmc 
    group lua_group 
    hll Lua {

/* Class initialization. Caches constant strings that will be used later.
*/
    void class_init() {
        if (pass) {
            string_representation = const_string(INTERP, "nil");
        }
    }

/*

=item C<STRING* name()>

Return the string "nil".

=cut

*/
    STRING* name () {
        return string_representation;
    }
  
/*

=item C<STRING* get_string ()>

Return the string "nil".

=cut

*/
    STRING* get_string () {
        return string_representation;
    }
  
/*

=item C<STRING* get_repr ()>

Return the string "nil".

=cut

*/
    STRING* get_repr () {
        return string_representation;
    }
  
/*

=item C<void* get_pointer()>

=item C<void set_pointer(void *ptr)>

These two functions are part of the singleton creation interface. For more
information see F<src/pmc.c>.

=cut

*/
    void* get_pointer() {
        return Lua_Nil;
    }

    void set_pointer(void* ptr) {
        Lua_Nil = (PMC*)ptr;
    }
  
}
  
/*

=back

=head1 AUTHORS

Original code by Klaas-Jan Stol.

=cut

*/

