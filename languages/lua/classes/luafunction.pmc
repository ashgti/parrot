/*
Copyright: 2005 The Perl Foundation.  All Rights Reserved.
$Id: luafunction.pmc $

=head1 NAME

classes/luafunction.pmc - Lua Function

=head1 DESCRIPTION

C<LuaFunction> extends C<Parrot Closure> to provide a class with the behaviour
of the Lua C<Function> type.

=head2 Overloaded Methods

=over 4

=cut

*/

#include "parrot/parrot.h"

static STRING *luafunction_name;

pmclass LuaFunction 
    extends Closure
    does sub 
    dynpmc 
    group lua_group 
    hll Lua maps Sub {

/* Class initialization. Caches constant strings that will be used later.
*/
    void class_init() {
        if (pass) {
            luafunction_name = const_string(INTERP, "function");
        }
    }
  
/*

=item C<STRING* name()>

Return the string "function".

=cut

*/
    STRING* name () {
        return luafunction_name;
    }

/*

=item C<STRING* get_string()>

=cut

*/
    STRING* get_string () {
        return Parrot_sprintf_c(INTERP, "function: %08X", SELF);
    }

/*

=item C<INTVAL get_bool()>

In Lua, both C<nil> and C<false> make a condition false; any other values 
makes it true.

So return always true. 

=cut

*/
    INTVAL get_bool () {
        return 1;
    }
}

/*

=back

=head1 AUTHORS

Francois Perrad

=cut

*/
