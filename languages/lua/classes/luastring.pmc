/*
Copyright: 2005 The Perl Foundation.  All Rights Reserved.
$Id: luastring.pmc $

=head1 NAME

classes/luastring.pmc - Lua String

=head1 DESCRIPTION

C<LuaString> extends C<String> to provide a class with the behaviour of
the Lua C<String> type.

=head2 Overloaded Methods

=over 4

=cut

*/

#include "parrot/parrot.h"

static STRING *luastring_name;

pmclass LuaString 
    extends String
    does string 
    dynpmc 
    group lua_group 
    hll Lua maps String {

/* Class initialization. Caches constant strings that will be used later.
*/
    void class_init() {
        if (pass) {
            luastring_name = const_string(INTERP, "string");
        }
    }
  
/*

=item C<STRING* name()>

Return the string "string".

=cut

*/
    STRING* name () {
        return luastring_name;
    }

/*

=item C<INTVAL get_bool()>

In Lua, both C<nil> and C<false> make a condition false; any other values 
makes it true.

So return always true. 

=cut

*/
    INTVAL get_bool () {
        return 1;
    }
  
}

/*

=back

=head1 AUTHORS

Original code by Klaas-Jan Stol.

=cut

*/

