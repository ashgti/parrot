/*
Copyright: 2005 The Perl Foundation.  All Rights Reserved.
$Id$

=head1 NAME

classes/luauserdata.pmc - Lua Userdata

=head1 DESCRIPTION

C<LuaUserdata> extends C<String> to provide a class with the behaviour of
the Lua C<Userdata> type.

=head2 Overloaded Methods

=over 4

=cut

*/

#include "parrot/parrot.h"

static STRING *luauserdata_name;

pmclass LuaUserdata 
    extends String
    dynpmc 
    group lua_group 
    hll Lua {

/* Class initialization. Caches constant strings that will be used later.
*/
    void class_init() {
        if (pass) {
            luauserdata_name = const_string(INTERP, "userdata");
        }
    }

/*

=item C<STRING* name()>

Return the string "userdata".

=cut

*/
    STRING* name () {
        return luauserdata_name;
    }

/*

=item C<STRING* get_string()>

=cut

*/
    STRING* get_string () {
        return Parrot_sprintf_c(INTERP, "userdata: %08X", SELF);
    }

/*

=item C<INTVAL get_bool()>

In Lua, both C<nil> and C<false> make a condition false; any other values 
makes it true.

So return always true. 

=cut

*/
    INTVAL get_bool () {
        return 1;
    }

}

/*

=back

=head1 AUTHORS

Francois Perrad.

=cut

*/
