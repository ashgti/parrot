# Copyright (C) 2006-2007, The Perl Foundation.
# $Id$

=head1 NAME

src/dumplex.tg - a grammar for testing lexico

=head1 DESCRIPTION

Just print node.

Used by F<languages/lua/test_lex.pir>.

=cut

grammar Lua::DumpLex is TGE::Grammar;

transform past (ROOT) :language('PIR') {
    $P0 = node['token']

    .local pmc iter
    iter = new .Iterator, $P0
    iter = 0

L1:
    unless iter, L2
    shift $P0, iter

    $I0 = defined $P0['Name']
    unless $I0 goto L3
    $P1 = $P0['Name']
    tree.get('past', $P1, 'Lua::TestLex::Name')

L3:
    $I0 = defined $P0['String']
    unless $I0 goto L4
    $P1 = $P0['String']
    tree.get('past', $P1, 'Lua::TestLex::String')

L4:
    $I0 = defined $P0['Number']
    unless $I0 goto L5
    $P1 = $P0['Number']
    tree.get('past', $P1, 'Lua::TestLex::Number')

L5:
    $I0 = defined $P0['punctuator']
    unless $I0 goto L6
    $P1 = $P0['punctuator']
    tree.get('past', $P1, 'Lua::TestLex::punctuator')

L6:
    $I0 = defined $P0['keyword']
    unless $I0 goto L7
    $P1 = $P0['keyword']
    tree.get('past', $P1, 'Lua::TestLex::keyword')

L7:
    $I0 = defined $P0['ws']
    unless $I0 goto L8
    $P1 = $P0['ws']
    tree.get('past', $P1, 'Lua::TestLex::ws')

L8:
    goto L1
L2:
    .return (node)
}

transform past (Lua::TestLex::keyword) :language('PIR') {
    print "keyword:\t"
    print node
    print "\n"
}

transform past (Lua::TestLex::punctuator) :language('PIR') {
    print "punct:\t"
    print node
    print "\n"
}

transform past (Lua::TestLex::Name) :language('PIR') {
    print "Name:\t"
    print node
    print "\n"
}

transform past (Lua::TestLex::String) :language('PIR') {
    $I0 = defined node['quoted_literal']
    unless $I0 goto L1
    $P0 = node['quoted_literal']
    print "String:\t"
    print $P0
    print "\n"
    goto L2
L1:
    $I0 = defined node['long_string']
    unless $I0 goto L2
    $P0 = node['long_string']
    print "LongString:\t"
    print $P0
    print "\n"
L2:
}

transform past (Lua::TestLex::Number) :language('PIR') {
    print "Number:\t"
    print node
    print "\n"
}

transform past (Lua::TestLex::ws) :language('PIR') {
    print "ws\n"
}

=head1 AUTHOR

Francois Perrad

=cut

