# Copyright (C) 2006-2007, The Perl Foundation.
# $Id$

=head1 NAME

src/lua51_testlex.pg - a grammar for testing lexico

=head1 DESCRIPTION

This grammar allows to test the lexico part of Lua::Grammar.

So, it just defines some top rules, the rules that we want to test are
imported from the whole Lua grammar.

 TOP ::= {token}
 token ::= Name | keyword | String | Number | punctuator
 keyword ::= 'and' | 'break' | 'do' | 'elseif' | 'else' | 'end' | 'false'
           | 'for' | 'function' | 'if' | 'in' | 'local' | 'nil' | 'not'
           | 'or' | 'repeat' | 'return' | 'then' | 'true' | 'until' | 'while'
 punctuator ::= '+' | '-' | '#' | '*' | '/' | '%' | '^' | '...' | '..' | '.'
              | '<=' | '<' | '>=' | '>' | '==' | '~=' | '='
              | ',' | ';' | ':' | '(' | ')' | '{' | '}' | '[' | ']'

Used by F<languages/lua/test_lex.pir>.

=cut

grammar Lua::TestLex

rule TOP {
        <token>* [ $ | <die>]
}

rule token {
        | <Name>
        | <keyword>
        | <String>
        | <Number>
        | <punctuator>
}

token keyword {
        | and
        | break
        | do
        | elseif
        | else
        | end
        | false
        | for
        | function
        | if
        | in
        | local
        | nil
        | not
        | or
        | repeat
        | return
        | then
        | true
        | until
        | while
}

token punctuator {
        | \+
        | \-
        | \#
        | \*
        | \/
        | \%
        | \^
        | \.\.\.
        | \.\.
        | \.
        | \<\=
        | \<
        | \>\=
        | \>
        | \=\=
        | \~\=
        | \=
        | \,
        | \;
        | \:
        | \(
        | \)
        | \{
        | \}
        | \[
        | \]
}

=head1 AUTHOR

Francois Perrad

=cut

