RM_F    = @rm_f@
PERL    = @perl@
PARROT  = ..@slash@..@slash@parrot@exe@
PBC_MERGE = ..@slash@..@slash@pbc_merge@exe@

C_BUILTIN = src@slash@builtin
R_BUILTIN = runtime@slash@builtin
BUILD     = $(PERL) @build_dir@@slash@tools@slash@build@slash@dynpmc.pl
DESTDIR   = @build_dir@@slash@runtime@slash@parrot@slash@dynext
O         = @o@
PMCDIR    = src@slash@pmc
CLASSDIR  = src@slash@class
LOAD_EXT  = @load_ext@

PMCS = \
 tclobject \
 tclstring \
 tclint \
 tclfloat \
 tcllist \
 tclarray

GENERATED_INLINES = \
 $(C_BUILTIN)@slash@eof.pir \
 $(C_BUILTIN)@slash@exit.pir \
 $(C_BUILTIN)@slash@incr.pir \
 $(C_BUILTIN)@slash@join.pir \
 $(C_BUILTIN)@slash@llength.pir \
 $(C_BUILTIN)@slash@pwd.pir \
 $(C_BUILTIN)@slash@time.pir \
 $(C_BUILTIN)@slash@while.pir

DEPS = \
$(R_BUILTIN)@slash@after.pir \
$(R_BUILTIN)@slash@append.pir \
$(R_BUILTIN)@slash@array.pir \
$(C_BUILTIN)@slash@auto_execok.pir \
$(C_BUILTIN)@slash@auto_load.pir \
$(R_BUILTIN)@slash@binary.pir \
$(C_BUILTIN)@slash@break.pir \
$(R_BUILTIN)@slash@catch.pir \
$(C_BUILTIN)@slash@cd.pir \
$(C_BUILTIN)@slash@close.pir \
$(R_BUILTIN)@slash@concat.pir \
$(C_BUILTIN)@slash@continue.pir \
$(R_BUILTIN)@slash@error.pir \
$(R_BUILTIN)@slash@eval.pir \
$(C_BUILTIN)@slash@exec.pir \
$(R_BUILTIN)@slash@expr.pir \
$(C_BUILTIN)@slash@fconfigure.pir \
$(R_BUILTIN)@slash@file.pir \
$(C_BUILTIN)@slash@flush.pir \
$(C_BUILTIN)@slash@for.pir \
$(R_BUILTIN)@slash@foreach.pir \
$(R_BUILTIN)@slash@format.pir \
$(R_BUILTIN)@slash@gets.pir \
$(C_BUILTIN)@slash@glob.pir \
$(R_BUILTIN)@slash@global.pir \
$(R_BUILTIN)@slash@if.pir \
$(R_BUILTIN)@slash@info.pir \
$(R_BUILTIN)@slash@inline.pir \
$(C_BUILTIN)@slash@interp.pir \
$(R_BUILTIN)@slash@lappend.pir \
$(R_BUILTIN)@slash@lassign.pir \
$(R_BUILTIN)@slash@lindex.pir \
$(R_BUILTIN)@slash@linsert.pir \
$(R_BUILTIN)@slash@list.pir \
$(R_BUILTIN)@slash@lrange.pir \
$(R_BUILTIN)@slash@lrepeat.pir \
$(C_BUILTIN)@slash@lsearch.pir \
$(R_BUILTIN)@slash@lset.pir \
$(R_BUILTIN)@slash@lsort.pir \
$(R_BUILTIN)@slash@namespace.pir \
$(R_BUILTIN)@slash@open.pir \
$(C_BUILTIN)@slash@package.pir \
$(R_BUILTIN)@slash@parray.pir \
$(R_BUILTIN)@slash@proc.pir \
$(R_BUILTIN)@slash@puts.pir \
$(R_BUILTIN)@slash@regexp.pir \
$(C_BUILTIN)@slash@regsub.pir \
$(R_BUILTIN)@slash@rename.pir \
$(C_BUILTIN)@slash@return.pir \
$(R_BUILTIN)@slash@set.pir \
$(R_BUILTIN)@slash@source.pir \
$(R_BUILTIN)@slash@split.pir \
$(R_BUILTIN)@slash@string.pir \
$(R_BUILTIN)@slash@switch.pir \
$(C_BUILTIN)@slash@trace.pir \
$(R_BUILTIN)@slash@unknown.pir \
$(R_BUILTIN)@slash@unset.pir \
$(R_BUILTIN)@slash@uplevel.pir \
$(R_BUILTIN)@slash@upvar.pir \
$(C_BUILTIN)@slash@variable.pir \
runtime@slash@conversions.pir \
runtime@slash@expression.pir \
runtime@slash@list.pir \
runtime@slash@list_to_string.pir \
runtime@slash@string_to_list.pir \
runtime@slash@string.pir \
runtime@slash@variables.pir \
src@slash@compiler.pir \
src@slash@macros.pir \
src@slash@parser.pir \
src@slash@returncodes.pir \
src@slash@tcl.p6r \
src@slash@template@slash@tcllib.template

all: tcl.pbc

tcl.pbc: $(PARROT) pmcs runtime@slash@tcllib.pbc src@slash@tclsh.pir
	$(PARROT) --output=tcl.pbc src@slash@tclsh.pir

$(GENERATED_INLINES) : tools@slash@gen_inline.pl

.SUFFIXES : .pir .tmt

.tmt.pir :
	$(PERL) tools@slash@gen_inline.pl $< > $@

PBCS = \
runtime@slash@tcllib_temp.pbc \
$(CLASSDIR)@slash@tclbinaryops.pbc \
$(CLASSDIR)@slash@tclcommand.pbc \
$(CLASSDIR)@slash@tclcommandlist.pbc \
$(CLASSDIR)@slash@tclconst.pbc \
$(CLASSDIR)@slash@tclfunc.pbc \
$(CLASSDIR)@slash@tclops.pbc \
$(CLASSDIR)@slash@tclvar.pbc \
$(CLASSDIR)@slash@tclword.pbc

runtime@slash@tcllib.pbc: $(PBC_MERGE) $(PBCS)
	$(PBC_MERGE) -o runtime@slash@tcllib.pbc $(PBCS)

pmcs:
	@cd $(PMCDIR) && $(BUILD) generate $(PMCS)
	@cd $(PMCDIR) && $(BUILD) compile $(PMCS)
	@cd $(PMCDIR) && $(BUILD) linklibs $(PMCS)
	@cd $(PMCDIR) && $(BUILD) copy "--destination=$(DESTDIR)" $(PMCS)

runtime@slash@tcllib.pir: $(GENERATED_INLINES) $(DEPS) tools@slash@gen_lib.pl
	$(PERL) tools@slash@gen_lib.pl src@slash@template@slash@tcllib.template > runtime@slash@tcllib.pir

runtime@slash@tcllib_temp.pbc: $(PARROT) runtime@slash@tcllib.pir
	$(PARROT) --output=runtime@slash@tcllib_temp.pbc runtime@slash@tcllib.pir

$(CLASSDIR)@slash@tclbinaryops.pbc: $(PARROT) $(CLASSDIR)@slash@tclbinaryops.pir
	$(PARROT) --output=$(CLASSDIR)@slash@tclbinaryops.pbc $(CLASSDIR)@slash@tclbinaryops.pir

$(CLASSDIR)@slash@tclcommand.pbc: $(PARROT) $(CLASSDIR)@slash@tclcommand.pir
	$(PARROT) --output=$(CLASSDIR)@slash@tclcommand.pbc $(CLASSDIR)@slash@tclcommand.pir

$(CLASSDIR)@slash@tclcommandlist.pbc: $(PARROT) $(CLASSDIR)@slash@tclcommandlist.pir
	$(PARROT) --output=$(CLASSDIR)@slash@tclcommandlist.pbc $(CLASSDIR)@slash@tclcommandlist.pir

$(CLASSDIR)@slash@tclconst.pbc: $(PARROT) $(CLASSDIR)@slash@tclconst.pir
	$(PARROT) --output=$(CLASSDIR)@slash@tclconst.pbc $(CLASSDIR)@slash@tclconst.pir

$(CLASSDIR)@slash@tclfunc.pbc: $(PARROT) $(CLASSDIR)@slash@tclfunc.pir
	$(PARROT) --output=$(CLASSDIR)@slash@tclfunc.pbc $(CLASSDIR)@slash@tclfunc.pir

$(CLASSDIR)@slash@tclops.pbc: $(PARROT) $(CLASSDIR)@slash@tclops.pir
	$(PARROT) --output=$(CLASSDIR)@slash@tclops.pbc $(CLASSDIR)@slash@tclops.pir

$(CLASSDIR)@slash@tclvar.pbc: $(PARROT) $(CLASSDIR)@slash@tclvar.pir
	$(PARROT) --output=$(CLASSDIR)@slash@tclvar.pbc $(CLASSDIR)@slash@tclvar.pir

$(CLASSDIR)@slash@tclword.pbc: $(PARROT) $(CLASSDIR)@slash@tclword.pir
	$(PARROT) --output=$(CLASSDIR)@slash@tclword.pbc $(CLASSDIR)@slash@tclword.pir

tclsh: $(PARROT) tcl.pbc
	$(PARROT) --gc-debug tcl.pbc

test:	tcl.pbc
	$(PERL) t@slash@harness

tcl-test: t_tcl
	$(PERL) t@slash@harness t_tcl@slash@*.t

t_tcl:
	$(PERL) tools@slash@tcl-test.pl

devtest:
	cd t && $(PERL) -e 'use Test::Harness qw($$verbose runtests) ; $$Test::Harness::verbose=1;runtests(glob("*.t"))' && cd ..

CLEANERS = \
runtime@slash@tcllib.pir \
tcl.pbc \
"runtime@slash@*.pbc" \
"$(CLASSDIR)@slash@*.pbc" \
"$(PMCDIR)@slash@pmc_*.h" \
"$(PMCDIR)@slash@*_group.h" \
"$(PMCDIR)@slash@*$(LOAD_EXT)" \
"$(PMCDIR)@slash@*.dump" \
#CONDITIONED_LINE(ld_parrot_exe_def):"$(PMCDIR)@slash@*.def" \
"$(PMCDIR)@slash@*.c" \
"$(PMCDIR)@slash@*$(O)" \
"t@slash@*.pir" \
"t@slash@*.tcl" \
$(GENERATED_INLINES)

clean:
	$(RM_F) $(CLEANERS)

distclean: clean
	$(RM_F) Makefile

