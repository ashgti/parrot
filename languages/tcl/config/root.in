RM_F    = @rm_f@
PERL    = @perl@
PARROT  = ../../parrot@exe@
PBC_MERGE = ../../pbc_merge@exe@

C_BUILTIN = src/builtin
R_BUILTIN = runtime/builtin
BUILD     = $(PERL) @build_dir@/tools/build/dynpmc.pl
DESTDIR   = @build_dir@/runtime/parrot/dynext
O         = @o@
PMCDIR    = src/pmc
CLASSDIR  = src/class
LOAD_EXT  = @load_ext@

PGE_DIR  = ../../compilers/pge
TGE_DIR  = ../../compilers/tge

PMCS = \
 tclobject \
 tclstring \
 tclint \
 tclfloat \
 tcllist \
 tclarray

GENERATED_INLINES = \
 $(C_BUILTIN)/eof.pir \
 $(C_BUILTIN)/exit.pir \
 $(C_BUILTIN)/incr.pir \
 $(C_BUILTIN)/join.pir \
 $(C_BUILTIN)/llength.pir \
 $(C_BUILTIN)/pwd.pir \
 $(C_BUILTIN)/time.pir \
 $(C_BUILTIN)/while.pir

DEPS = \
$(R_BUILTIN)/after.pir \
$(R_BUILTIN)/append.pir \
$(R_BUILTIN)/array.pir \
$(C_BUILTIN)/auto_execok.pir \
$(C_BUILTIN)/auto_load.pir \
$(R_BUILTIN)/binary.pir \
$(C_BUILTIN)/break.pir \
$(R_BUILTIN)/catch.pir \
$(C_BUILTIN)/cd.pir \
$(C_BUILTIN)/close.pir \
$(R_BUILTIN)/concat.pir \
$(C_BUILTIN)/continue.pir \
$(R_BUILTIN)/error.pir \
$(R_BUILTIN)/eval.pir \
$(C_BUILTIN)/exec.pir \
$(R_BUILTIN)/expr.pir \
$(C_BUILTIN)/fconfigure.pir \
$(R_BUILTIN)/file.pir \
$(C_BUILTIN)/flush.pir \
$(C_BUILTIN)/for.pir \
$(R_BUILTIN)/foreach.pir \
$(R_BUILTIN)/format.pir \
$(R_BUILTIN)/gets.pir \
$(C_BUILTIN)/glob.pir \
$(R_BUILTIN)/global.pir \
$(R_BUILTIN)/if.pir \
$(R_BUILTIN)/info.pir \
$(R_BUILTIN)/inline.pir \
$(C_BUILTIN)/interp.pir \
$(R_BUILTIN)/lappend.pir \
$(R_BUILTIN)/lassign.pir \
$(R_BUILTIN)/lindex.pir \
$(R_BUILTIN)/linsert.pir \
$(R_BUILTIN)/list.pir \
$(R_BUILTIN)/lrange.pir \
$(R_BUILTIN)/lrepeat.pir \
$(C_BUILTIN)/lsearch.pir \
$(R_BUILTIN)/lset.pir \
$(R_BUILTIN)/lsort.pir \
$(R_BUILTIN)/namespace.pir \
$(R_BUILTIN)/open.pir \
$(C_BUILTIN)/package.pir \
$(R_BUILTIN)/parray.pir \
$(R_BUILTIN)/proc.pir \
$(R_BUILTIN)/puts.pir \
$(R_BUILTIN)/regexp.pir \
$(C_BUILTIN)/regsub.pir \
$(R_BUILTIN)/rename.pir \
$(C_BUILTIN)/return.pir \
$(R_BUILTIN)/set.pir \
$(R_BUILTIN)/source.pir \
$(R_BUILTIN)/split.pir \
$(R_BUILTIN)/string.pir \
$(R_BUILTIN)/switch.pir \
$(C_BUILTIN)/trace.pir \
$(R_BUILTIN)/unknown.pir \
$(R_BUILTIN)/unset.pir \
$(R_BUILTIN)/uplevel.pir \
$(R_BUILTIN)/upvar.pir \
$(C_BUILTIN)/variable.pir \
runtime/conversions.pir \
runtime/expression.pir \
runtime/list.pir \
runtime/list_to_string.pir \
runtime/string_to_list.pir \
runtime/string.pir \
runtime/variables.pir \
src/compiler.pir \
src/macros.pir \
src/parser.pir \
src/returncodes.pir \
src/tcl_expr_optok.pir \
src/tcl_expr.pir


all: tcl.pbc

tcl.pbc: $(PARROT) pmcs runtime/tcllib.pbc src/tclsh.pir
	$(PARROT) --output=tcl.pbc src/tclsh.pir

$(GENERATED_INLINES) : tools/gen_inline.pl

.SUFFIXES : .pir .tmt .pg .tg

.tmt.pir :
	$(PERL) tools/gen_inline.pl $< > $@

.tg.pir : 
	$(PARROT) $(TGE_DIR)/tgc.pir --output=$@ $<

.pg.pir :
	$(PARROT) $(PGE_DIR)/pgc.pir --output=$@ $<

PBCS = \
runtime/tcllib_temp.pbc \
$(CLASSDIR)/tclbinaryops.pbc \
$(CLASSDIR)/tclcommand.pbc \
$(CLASSDIR)/tclcommandlist.pbc \
$(CLASSDIR)/tclconst.pbc \
$(CLASSDIR)/tclfunc.pbc \
$(CLASSDIR)/tclops.pbc \
$(CLASSDIR)/tclvar.pbc \
$(CLASSDIR)/tclword.pbc

runtime/tcllib.pbc: $(PBC_MERGE) $(PBCS)
	$(PBC_MERGE) -o runtime/tcllib.pbc $(PBCS)

pmcs:
	@cd $(PMCDIR) && $(BUILD) generate $(PMCS)
	@cd $(PMCDIR) && $(BUILD) compile $(PMCS)
	@cd $(PMCDIR) && $(BUILD) linklibs $(PMCS)
	@cd $(PMCDIR) && $(BUILD) copy "--destination=$(DESTDIR)" $(PMCS)

runtime/builtins.pir: $(GENERATED_INLINES) $(DEPS) tools/gen_builtins.pl
	$(PERL) tools/gen_builtins.pl > runtime/builtins.pir

runtime/tcllib_temp.pbc: $(PARROT) runtime/builtins.pir
	$(PARROT) --output=runtime/tcllib_temp.pbc runtime/tcllib.pir

$(CLASSDIR)/tclbinaryops.pbc: $(PARROT) $(CLASSDIR)/tclbinaryops.pir
	$(PARROT) --output=$(CLASSDIR)/tclbinaryops.pbc $(CLASSDIR)/tclbinaryops.pir

$(CLASSDIR)/tclcommand.pbc: $(PARROT) $(CLASSDIR)/tclcommand.pir
	$(PARROT) --output=$(CLASSDIR)/tclcommand.pbc $(CLASSDIR)/tclcommand.pir

$(CLASSDIR)/tclcommandlist.pbc: $(PARROT) $(CLASSDIR)/tclcommandlist.pir
	$(PARROT) --output=$(CLASSDIR)/tclcommandlist.pbc $(CLASSDIR)/tclcommandlist.pir

$(CLASSDIR)/tclconst.pbc: $(PARROT) $(CLASSDIR)/tclconst.pir
	$(PARROT) --output=$(CLASSDIR)/tclconst.pbc $(CLASSDIR)/tclconst.pir

$(CLASSDIR)/tclfunc.pbc: $(PARROT) $(CLASSDIR)/tclfunc.pir
	$(PARROT) --output=$(CLASSDIR)/tclfunc.pbc $(CLASSDIR)/tclfunc.pir

$(CLASSDIR)/tclops.pbc: $(PARROT) $(CLASSDIR)/tclops.pir
	$(PARROT) --output=$(CLASSDIR)/tclops.pbc $(CLASSDIR)/tclops.pir

$(CLASSDIR)/tclvar.pbc: $(PARROT) $(CLASSDIR)/tclvar.pir
	$(PARROT) --output=$(CLASSDIR)/tclvar.pbc $(CLASSDIR)/tclvar.pir

$(CLASSDIR)/tclword.pbc: $(PARROT) $(CLASSDIR)/tclword.pir
	$(PARROT) --output=$(CLASSDIR)/tclword.pbc $(CLASSDIR)/tclword.pir

tclsh: $(PARROT) tcl.pbc
	$(PARROT) --gc-debug tcl.pbc

test:	tcl.pbc
	$(PERL) t/harness

tcl-test: t_tcl
	$(PERL) tools/tcl_harness.pl

t_tcl:
	$(PERL) tools/tcl-test.pl

devtest:
	cd t && $(PERL) -e 'use Test::Harness qw($$verbose runtests) ; $$Test::Harness::verbose=1;runtests(glob("*.t"))' && cd ..

CLEANERS = \
tcl.pbc \
runtime/builtins.pir \
"runtime/*.pbc" \
"$(CLASSDIR)/*.pbc" \
"$(PMCDIR)/pmc_*.h" \
"$(PMCDIR)/*_group.h" \
"$(PMCDIR)/*$(LOAD_EXT)" \
"$(PMCDIR)/*.dump" \
#CONDITIONED_LINE(ld_parrot_exe_def):"$(PMCDIR)/*.def" \
"$(PMCDIR)/*.c" \
"$(PMCDIR)/*$(O)" \
"t/*.pir" \
"t/*.tcl" \
$(GENERATED_INLINES)

clean:
	$(RM_F) $(CLEANERS)

distclean: clean
	$(RM_F) Makefile

