/* TclFloat.pmc
 *  Copyright: 2001-2003 The Perl Foundation.  All Rights Reserved.
 *  CVS Info
 *     $Id$
 *  Overview:
 *     These are the vtable functions for the TclFloat base class
 *  Data Structure and Algorithms:
 *  History:
 *  Notes:
 *  References:
 */

#include "parrot/parrot.h"

pmclass TclFloat extends TclObject extends Float dynpmc group tcl_group {

    STRING* get_string () {
        char* buff = mem_sys_allocate(80);
        int buflen,checklen;
        int check_flag;

        STRING* s;
#ifdef HAS_SNPRINTF
        snprintf(buff,80,FLOATVAL_FMT,PMC_num_val(SELF));
#else
        sprintf(buff,FLOATVAL_FMT,PMC_num_val(SELF));  /* XXX buffer overflow! */
#endif
        check_flag = 1;
        checklen = buflen = strlen(buff);
        while (check_flag && buflen) {
               if (buff[buflen-1] == 48) {  /* 0 */
                       buflen--;
               } else  {
                       check_flag = 0;
               }
        }
        /* if the last entry is now a ".", then add one zero back in. */
        if (buff[buflen-1] == 46) {
          buflen++;
        }

        /* paranoid? */
        if (buflen > checklen) {
              buflen = checklen;
        }
        buff[buflen] = 0; /* should this be necessary? */
        s = string_make(INTERP,buff,buflen,"iso-8859-1",0);
        mem_sys_free(buff);
        return s;
    }
}


/*
 * Local variables:
 * c-indentation-style: bsd
 * c-basic-offset: 4
 * indent-tabs-mode: nil
 * End:
 *
 * vim: expandtab shiftwidth=4:
*/

