###
# [join]

.namespace [ "Tcl" ]

.sub "join"
  .param pmc a_list
  .param pmc joiner_pmc

  .local pmc retval
  .local int return_type
  .local string rv
  rv = ""

  if argcP == 0 goto bad_args
  if argcP > 2 goto bad_args

  .local pmc a_list,joiner_pmc
  .local string a_joiner

  .local pmc results
  # We expect a list here. We should take one if we get it,
  # otherwise, convert it to a string value, and then convert that to a list.
  # XXX evilly just using Tcl* variants here.
  $I0 = typeof a_list
  if $I0 == .TclList goto got_list  
 
  .local pmc string2list
  string2list = find_global "_Tcl", "__stringToList"
  $S0 = a_list
  (return_type, retval) = string2list($S0)
  $S0 = retval
  if return_type == TCL_ERROR goto done
  a_list = retval

got_list:
  if argcP == 2 goto got_joiner
  a_joiner = " "
  goto doit
got_joiner: 
  a_joiner=joiner_pmc
doit:
  rv = join a_joiner, a_list

  retval = new String
  retval = rv
done:
  .return(return_type,retval)

bad_args:
  $P1 = new String
  $P1 = "wrong # args: should be \"join list ?joinString?\""
  .return(TCL_ERROR, $P1)

.end
