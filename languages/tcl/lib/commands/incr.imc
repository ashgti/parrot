###
# [incr]

#
# incr foo
# incr foo offset

.sub __cmd_incr
  .param PerlArray argv

  .include "languages/tcl/lib/macros/debug.imc"
  .const int debug = 0

  .local int value
  .local int increment 
  increment = 1
  
  .local int argc 
  argc = argv

  .local string retval
  .local int return_type
  return_type = TCL_OK 
 
  if argc == 0 goto error

  $S1 = argv[0] 
  .debug("varname='")
  .debug($S1)
  .debug("'\n")
  find_lex $P1, -1, $S1
  value = $P1 
  if argc == 1 goto incr
  if argc == 2 goto offset
  if argc > 2 goto error

offset:
  increment = argv[1]

incr:
  value = value + increment
  $P1 = new PerlString
  $P1 = value
  store_lex -1, $S1, $P1
  retval = value

  goto done 

  # fall through to a bad call.

error:
  return_type = TCL_ERROR 
  retval = "wrong # args: should be \"incr varName ?increment?\"\n"

done:
  .pcc_begin_return
  .return return_type
  .return retval
  .pcc_end_return
.end
