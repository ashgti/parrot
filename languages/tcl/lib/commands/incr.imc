=head2 [incr]

 incr foo
 incr foo offset

=cut

.namespace [ "Tcl" ]

.sub "incr"
  .local pmc argv 
  argv = foldup

  .local int value
  .local int increment 
  increment = 1
  
  .local int argc 
  argc = argv

  .local pmc retval
  .local pmc original_pmc

  .local int return_type
  return_type = TCL_OK 
 
  if argc == 0 goto error

  .local int call_level
  $P0 = find_global "_Tcl", "call_level"
  call_level = $P0

  $S1 = argv[0] 

  if call_level goto get_lexical
  original_pmc = find_global "Tcl", $S1
  goto got_variable
get_lexical:
  original_pmc = find_lex call_level, $S1
got_variable:
  if argc == 1 goto do_incr
  if argc == 2 goto offset
  if argc > 2 goto error

offset:
  increment = argv[1]

do_incr:
  original_pmc += increment
  retval = new Integer
  retval = value
  retval = original_pmc
if call_level goto set_lexical
  store_global $S1, retval
  goto done
set_lexical:
  store_lex call_level, $S1, retval
  goto done 

error:
  return_type = TCL_ERROR 
  retval = new String
  retval = "wrong # args: should be \"incr varName ?increment?\""

done:
  .return(return_type,retval)
.end
