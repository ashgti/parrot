###
# [incr]

#
# incr foo
# incr foo offset

.namespace [ "Tcl" ]

.sub "incr"
  .local pmc argv 
  argv = foldup

  .local int value
  .local int increment 
  increment = 1
  
  .local int argc 
  argc = argv

  .local pmc retval

  .local int return_type
  return_type = TCL_OK 
 
  if argc == 0 goto error

  $S1 = argv[0] 

  find_lex $P1, -1, $S1
  value = $P1 
  if argc == 1 goto do_incr
  if argc == 2 goto offset
  if argc > 2 goto error

offset:
  increment = argv[1]

do_incr:
  value = value + increment
  retval = new Integer
  retval = value
  store_lex -1, $S1, retval

  goto done 

  # fall through to a bad call.

error:
  return_type = TCL_ERROR 
  retval = new String
  retval = "wrong # args: should be \"incr varName ?increment?\"\n"

done:
  .return(return_type,retval)
.end
