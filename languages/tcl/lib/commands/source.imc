###
# [source]

.namespace [ "Tcl" ]

.sub _source
  .local pmc argv 
  argv = foldup

  .local int argc 
  argc = argv

  if argc != 1 goto fail

  .local string contents
  .local string retval
  .local string chunk
  .local int code
  .local string filename
  .local int type
  .local pmc handle

  .local pmc parse
  .local pmc interpret
  parse = find_global "_Tcl", "__parse"
  interpret = find_global "_Tcl", "__interpret"

  $P1 = argv[0] 
  typeof type, $P1
  if type != .ParrotIO goto file
  handle = $P1
  goto loop

file:
  filename = $P1
  $S1="<"
  open handle, filename, $S1
  $I0 = typeof handle
  if $I0 == .PerlUndef goto badfile
  contents = ""
 
loop:
  read chunk, handle, 1024
  if chunk == "" goto gotfile
  contents = contents . chunk
  goto loop

gotfile:
  $P1 = parse(contents,0)
  (code,retval) = interpret($P1)
  goto done
 
badfile:
  code = TCL_ERROR
  retval = "couldn't read file \""
  retval = retval . filename
  retval = retval . "\": no such file or directory\n"
  goto done

fail:
  code = TCL_ERROR
  retval =  "bad call to source\n"
done:
  .pcc_begin_return
    .return code
    .return retval
  .pcc_end_return
.end
