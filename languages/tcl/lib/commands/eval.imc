###
# [eval]

#
# eval arg [... arg arg]

.namespace [ "Tcl" ]

.sub "eval"
  .local pmc argv
  argv = foldup  
 
  .local string expr
  .local int argc
  .local int looper
 
  .local pmc parser
  .local pmc interpret 
  parser = find_global "_Tcl", "parser"  
  interpret = find_global "_Tcl", "__interpret"

  expr = ""
  looper = 0
  argc = argv

loop:
  if looper == argc goto loop_done
  $S0 = argv[looper]
  concat expr, $S0
  inc looper
  if looper == argc goto loop_done
  concat expr," "

  goto loop

loop_done:

  .local pmc pmcString
  pmcString = new String
  pmcString = expr
  .local pmc zero
  zero = new Integer
  zero = 0
  $P1 = parser."parse"(pmcString,zero,zero)
  ($I0,$P0) = interpret($P1) 

done:
  .return($I0,$P0)
.end
