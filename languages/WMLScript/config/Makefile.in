RM_F    = @rm_f@
PERL    = @perl@
PARROT  = ..@slash@..@slash@parrot@exe@
PBC_MERGE = ..@slash@..@slash@pbc_merge@exe@

PMCBUILD = $(PERL) @build_dir@@slash@tools@slash@build@slash@dynpmc.pl
OPSBUILD = $(PERL) @build_dir@@slash@tools@slash@build@slash@dynoplibs.pl
DESTDIR  = @build_dir@@slash@runtime@slash@parrot@slash@dynext
LIBPATH  = runtime
PMCDIR   = pmc
OPSDIR   = ops
O        = @o@
LOAD_EXT = @load_ext@

SRM=Stack

PMCS = \
 wmlsinteger \
 wmlsfloat \
 wmlsstring \
 wmlsboolean \
 wmlsinvalid \
 wmlsbytecode

PMC_FILES = \
 $(PMCDIR)@slash@wmlsinteger.pmc \
 $(PMCDIR)@slash@wmlsfloat.pmc \
 $(PMCDIR)@slash@wmlsstring.pmc \
 $(PMCDIR)@slash@wmlsboolean.pmc \
 $(PMCDIR)@slash@wmlsinvalid.pmc \
 $(PMCDIR)@slash@wmlsbytecode.pmc

OPS_FILES = $(OPSDIR)@slash@wmls.ops

OPSLIB    = wmls

PBCS = \
 $(LIBPATH)@slash@wmlslang.pbc \
 $(LIBPATH)@slash@wmlsfloat.pbc \
 $(LIBPATH)@slash@wmlsstring.pbc \
 $(LIBPATH)@slash@wmlsconsole.pbc \
 $(LIBPATH)@slash@wmlsstdlibs.pbc


all: \
 pmc@slash@wmls_group$(LOAD_EXT) \
 ops@slash@wmls_ops$(LOAD_EXT) \
 $(LIBPATH)@slash@wmlslib.pbc \
 src@slash@wmlsd.pbc \
 src@slash@wmls2pir.pbc \
 src@slash@wmls2pbc.pbc \
 src@slash@wmlsi.pbc

pmc@slash@wmls_group$(LOAD_EXT) : $(PMC_FILES)
	@cd $(PMCDIR) && $(PMCBUILD) generate $(PMCS)
	@cd $(PMCDIR) && $(PMCBUILD) compile $(PMCS)
	@cd $(PMCDIR) && $(PMCBUILD) linklibs $(PMCS)
	@cd $(PMCDIR) && $(PMCBUILD) copy "--destination=$(DESTDIR)" $(PMCS)

ops@slash@wmls_ops$(LOAD_EXT) : $(OPS_FILES)
	@cd $(OPSDIR) && $(OPSBUILD) generate $(OPSLIB)
	@cd $(OPSDIR) && $(OPSBUILD) compile $(OPSLIB)
	@cd $(OPSDIR) && $(OPSBUILD) linklibs $(OPSLIB)
	@cd $(OPSDIR) && $(OPSBUILD) copy "--destination=$(DESTDIR)" $(OPSLIB)

src@slash@wmlsd.pbc: src@slash@wmlsd.pir src@slash@script.pir src@slash@opcode.pir
	$(PARROT) -o src/wmlsd.pbc src/wmlsd.pir 

src@slash@wmls2pir.pbc: src@slash@wmls2pir.pir src@slash@script.pir src@slash@opcode.pir src@slash@stdlibs.pir
	$(PARROT) -o src/wmls2pir.pbc src/wmls2pir.pir 

src@slash@wmls2pbc.pbc: src@slash@wmls2pbc.pir src@slash@script.pir src@slash@opcode.pir src@slash@stdlibs.pir
	$(PARROT) -o src/wmls2pbc.pbc src/wmls2pbc.pir 

src@slash@wmlsi.pbc: src@slash@wmlsi.pir src@slash@script.pir src@slash@opcode.pir src@slash@stdlibs.pir
	$(PARROT) -o src/wmlsi.pbc src/wmlsi.pir 

src@slash@opcode.pir: src@slash@translation.rules build@slash@translator.pl \
 build@slash@SRM@slash@Stack.pm build@slash@SRM@slash@Register.pm
	$(PERL) build/translator.pl --output src/opcode.pir --srm $(SRM) \
	  src/translation.rules 

src@slash@stdlibs.pir: src@slash@wmlslibs.cfg build@slash@stdlibs.pl
	$(PERL) build\stdlibs.pl --output src\stdlibs.pir src\wmlslibs.cfg

$(LIBPATH)@slash@wmlslib.pbc: $(PBCS)
	$(PBC_MERGE) -o $(LIBPATH)@slash@wmlslib.pbc $(PBCS) 

$(LIBPATH)@slash@wmlslang.pbc: $(LIBPATH)@slash@wmlslang.pir
	$(PARROT) --output=$(LIBPATH)@slash@wmlslang.pbc $(LIBPATH)@slash@wmlslang.pir

$(LIBPATH)@slash@wmlsfloat.pbc: $(LIBPATH)@slash@wmlsfloat.pir
	$(PARROT) --output=$(LIBPATH)@slash@wmlsfloat.pbc $(LIBPATH)@slash@wmlsfloat.pir

$(LIBPATH)@slash@wmlsstring.pbc: $(LIBPATH)@slash@wmlsstring.pir
	$(PARROT) --output=$(LIBPATH)@slash@wmlsstring.pbc $(LIBPATH)@slash@wmlsstring.pir

$(LIBPATH)@slash@wmlsconsole.pbc: $(LIBPATH)@slash@wmlsconsole.pir
	$(PARROT) --output=$(LIBPATH)@slash@wmlsconsole.pbc $(LIBPATH)@slash@wmlsconsole.pir

$(LIBPATH)@slash@wmlsstdlibs.pbc: $(LIBPATH)@slash@wmlsstdlibs.pir
	$(PARROT) --output=$(LIBPATH)@slash@wmlsstdlibs.pbc $(LIBPATH)@slash@wmlsstdlibs.pir

help:
	@echo ""
	@echo "Following targets are available for the user:"
	@echo ""
	@echo "  all:"
	@echo "                     This is the default."
	@echo "Testing:"
	@echo "  test:              Run the test suite."
	@echo "  testclean:         Clean up test results."
	@echo ""
	@echo "Cleaning:"
	@echo "  clean:             Basic cleaning up."
	@echo "  realclean:         Removes also files generated by 'Configure.pl'"
	@echo "  distclean:         Removes also anything built, in theory"
	@echo ""
	@echo "Misc:"
	@echo "  help:              Print this help message."
	@echo ""

test:
	cd .. && $(PERL) t/harness --languages=WMLScript

testclean:
	$(RM_F) "t/pmc/*.pir" "t/*.pir" "t/*.pbc" "t/*.wmls" "t/*.wmlsc" "t/*.out"

CLEANERS = \
 "t/pmc/*.pir" \
 "t/*.pir" \
 "t/*.pbc" \
 "t/*.wmls" \
 "t/*.wmlsc" \
 "t/*.out" \
 "$(PMCDIR)/*.dump" \
 "$(PMCDIR)/*.c" \
 "$(PMCDIR)/*.h" \
 "$(PMCDIR)/*$(LOAD_EXT)" \
 "$(PMCDIR)/*$(O)" \
 "$(OPSDIR)/*.c" \
 "$(OPSDIR)/*.h" \
 "$(OPSDIR)/*$(LOAD_EXT)" \
 "$(OPSDIR)/*$(O)" \
 "$(LIBPATH)/*.pbc" \
 "src/*.pbc" \
 "src/opcode.pir" \
 "src/stdlibs.pir"

clean:
	$(RM_F) $(CLEANERS)

realclean: clean
	$(RM_F) Makefile

distclean: realclean

