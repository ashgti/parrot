# $Id$

grammar Plumhead::PAST::Grammar is TGE::Grammar;

# Generate PAST-pm from Plumhead parse tree

transform past (ROOT) :language('PIR') {

    node = node['program']
    .local pmc past
    past = new 'PAST::Block'
    past.'init'( 'node' => node, 'name'=>'plumhead' )
    
    .local pmc cpast
    cpast = tree.'get'('past', node, 'ABC::Grammar::program')
    past.'push'(cpast)

    .return (past)
}

transform past (ABC::Grammar::program) :language('PIR') {

    .local pmc past
    past = new 'PAST::Stmts'
    past.'init'('node'=>node)

    node = node['sea']
    .local pmc cpast
    cpast = tree.'get'('past', node, 'ABC::Grammar::sea')
    past.'push'(cpast)

    .return (past)
}

transform past (ABC::Grammar::sea) :language('PIR') {

    .local pmc past_val
    past_val = new 'PAST::Val'                             
    .local string val
    val = node
    past_val.'init'( 'name' => val, 'vtype' => '.Undef' )                              
    .local pmc past                                                  
    past = new 'PAST::Op'
    past.'init'( past_val, 'node'=> node, 'pirop' => 'print' )  

    .return (past)
}

