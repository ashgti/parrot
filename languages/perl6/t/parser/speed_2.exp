[
  bless( {
    'P6C::closure::params' => undef,
    'P6C::closure::block' => [
      bless( {
        'P6C::Binop::r' => bless( {
          'P6C::sv_literal::lval' => '1',
          'P6C::sv_literal::type' => 'PerlInt'
        }, 'P6C::sv_literal' ),
        'P6C::Binop::op' => '=',
        'P6C::Binop::l' => bless( {
          'P6C::variable::type' => 'PerlUndef',
          'P6C::variable::topical' => '',
          'P6C::variable::name' => '$a',
          'P6C::variable::global' => '',
          'P6C::variable::implicit' => 0
        }, 'P6C::variable' )
      }, 'P6C::Binop' )
    ]
  }, 'P6C::closure' ),
  bless( {
    'P6C::closure::params' => undef,
    'P6C::closure::block' => [
      bless( {
        'P6C::Binop::r' => bless( {
          'P6C::sv_literal::lval' => '1',
          'P6C::sv_literal::type' => 'PerlInt'
        }, 'P6C::sv_literal' ),
        'P6C::Binop::op' => '=',
        'P6C::Binop::l' => bless( {
          'P6C::variable::type' => 'PerlUndef',
          'P6C::variable::topical' => '',
          'P6C::variable::name' => '$a',
          'P6C::variable::global' => '',
          'P6C::variable::implicit' => 0
        }, 'P6C::variable' )
      }, 'P6C::Binop' )
    ]
  }, 'P6C::closure' ),
  bless( {
    'P6C::closure::params' => undef,
    'P6C::closure::block' => [
      bless( {
        'P6C::Binop::r' => bless( {
          'P6C::sv_literal::lval' => '1',
          'P6C::sv_literal::type' => 'PerlInt'
        }, 'P6C::sv_literal' ),
        'P6C::Binop::op' => '=',
        'P6C::Binop::l' => bless( {
          'P6C::variable::type' => 'PerlUndef',
          'P6C::variable::topical' => '',
          'P6C::variable::name' => '$a',
          'P6C::variable::global' => '',
          'P6C::variable::implicit' => 0
        }, 'P6C::variable' )
      }, 'P6C::Binop' )
    ]
  }, 'P6C::closure' ),
  bless( {
    'P6C::closure::params' => undef,
    'P6C::closure::block' => [
      bless( {
        'P6C::Binop::r' => bless( {
          'P6C::sv_literal::lval' => '1',
          'P6C::sv_literal::type' => 'PerlInt'
        }, 'P6C::sv_literal' ),
        'P6C::Binop::op' => '=',
        'P6C::Binop::l' => bless( {
          'P6C::variable::type' => 'PerlUndef',
          'P6C::variable::topical' => '',
          'P6C::variable::name' => '$a',
          'P6C::variable::global' => '',
          'P6C::variable::implicit' => 0
        }, 'P6C::variable' )
      }, 'P6C::Binop' )
    ]
  }, 'P6C::closure' ),
  bless( {
    'P6C::closure::params' => undef,
    'P6C::closure::block' => [
      bless( {
        'P6C::Binop::r' => bless( {
          'P6C::sv_literal::lval' => '1',
          'P6C::sv_literal::type' => 'PerlInt'
        }, 'P6C::sv_literal' ),
        'P6C::Binop::op' => '=',
        'P6C::Binop::l' => bless( {
          'P6C::variable::type' => 'PerlUndef',
          'P6C::variable::topical' => '',
          'P6C::variable::name' => '$a',
          'P6C::variable::global' => '',
          'P6C::variable::implicit' => 0
        }, 'P6C::variable' )
      }, 'P6C::Binop' )
    ]
  }, 'P6C::closure' ),
  bless( {
    'P6C::closure::params' => undef,
    'P6C::closure::block' => [
      bless( {
        'P6C::prefix::name' => 'if',
        'P6C::prefix::args' => [
          [
            undef,
            bless( {
              'P6C::sv_literal::lval' => '1',
              'P6C::sv_literal::type' => 'PerlInt'
            }, 'P6C::sv_literal' ),
            bless( {
              'P6C::closure::params' => undef,
              'P6C::closure::block' => []
            }, 'P6C::closure' )
          ]
        ]
      }, 'P6C::prefix' )
    ]
  }, 'P6C::closure' ),
  bless( {
    'P6C::closure::params' => undef,
    'P6C::closure::block' => [
      bless( {
        'P6C::prefix::name' => 'if',
        'P6C::prefix::args' => [
          [
            undef,
            bless( {
              'P6C::sv_literal::lval' => '1',
              'P6C::sv_literal::type' => 'PerlInt'
            }, 'P6C::sv_literal' ),
            bless( {
              'P6C::closure::params' => undef,
              'P6C::closure::block' => []
            }, 'P6C::closure' )
          ]
        ]
      }, 'P6C::prefix' )
    ]
  }, 'P6C::closure' ),
  bless( {
    'P6C::closure::params' => undef,
    'P6C::closure::block' => [
      bless( {
        'P6C::prefix::name' => 'if',
        'P6C::prefix::args' => [
          [
            undef,
            bless( {
              'P6C::sv_literal::lval' => '1',
              'P6C::sv_literal::type' => 'PerlInt'
            }, 'P6C::sv_literal' ),
            bless( {
              'P6C::closure::params' => undef,
              'P6C::closure::block' => []
            }, 'P6C::closure' )
          ],
          [
            'else',
            1,
            bless( {
              'P6C::closure::params' => undef,
              'P6C::closure::block' => []
            }, 'P6C::closure' )
          ]
        ]
      }, 'P6C::prefix' )
    ]
  }, 'P6C::closure' ),
  bless( {
    'P6C::closure::params' => undef,
    'P6C::closure::block' => [
      bless( {
        'P6C::prefix::name' => 'if',
        'P6C::prefix::args' => [
          [
            undef,
            bless( {
              'P6C::sv_literal::lval' => '1',
              'P6C::sv_literal::type' => 'PerlInt'
            }, 'P6C::sv_literal' ),
            bless( {
              'P6C::closure::params' => undef,
              'P6C::closure::block' => []
            }, 'P6C::closure' )
          ],
          [
            'else',
            1,
            bless( {
              'P6C::closure::params' => undef,
              'P6C::closure::block' => []
            }, 'P6C::closure' )
          ]
        ]
      }, 'P6C::prefix' )
    ]
  }, 'P6C::closure' ),
  bless( {
    'P6C::closure::params' => undef,
    'P6C::closure::block' => [
      bless( {
        'P6C::prefix::name' => 'if',
        'P6C::prefix::args' => [
          [
            undef,
            bless( {
              'P6C::sv_literal::lval' => '1',
              'P6C::sv_literal::type' => 'PerlInt'
            }, 'P6C::sv_literal' ),
            bless( {
              'P6C::closure::params' => undef,
              'P6C::closure::block' => []
            }, 'P6C::closure' )
          ],
          [
            'elsif',
            bless( {
              'P6C::sv_literal::lval' => '2',
              'P6C::sv_literal::type' => 'PerlInt'
            }, 'P6C::sv_literal' ),
            bless( {
              'P6C::closure::params' => undef,
              'P6C::closure::block' => []
            }, 'P6C::closure' )
          ]
        ]
      }, 'P6C::prefix' )
    ]
  }, 'P6C::closure' ),
  bless( {
    'P6C::closure::params' => undef,
    'P6C::closure::block' => [
      bless( {
        'P6C::prefix::name' => 'if',
        'P6C::prefix::args' => [
          [
            undef,
            bless( {
              'P6C::sv_literal::lval' => '1',
              'P6C::sv_literal::type' => 'PerlInt'
            }, 'P6C::sv_literal' ),
            bless( {
              'P6C::closure::params' => undef,
              'P6C::closure::block' => []
            }, 'P6C::closure' )
          ],
          [
            'elsif',
            bless( {
              'P6C::sv_literal::lval' => '2',
              'P6C::sv_literal::type' => 'PerlInt'
            }, 'P6C::sv_literal' ),
            bless( {
              'P6C::closure::params' => undef,
              'P6C::closure::block' => []
            }, 'P6C::closure' )
          ]
        ]
      }, 'P6C::prefix' )
    ]
  }, 'P6C::closure' ),
  bless( {
    'P6C::closure::params' => undef,
    'P6C::closure::block' => [
      bless( {
        'P6C::prefix::name' => 'if',
        'P6C::prefix::args' => [
          [
            undef,
            bless( {
              'P6C::sv_literal::lval' => '1',
              'P6C::sv_literal::type' => 'PerlInt'
            }, 'P6C::sv_literal' ),
            bless( {
              'P6C::closure::params' => undef,
              'P6C::closure::block' => []
            }, 'P6C::closure' )
          ],
          [
            'elsif',
            bless( {
              'P6C::sv_literal::lval' => '2',
              'P6C::sv_literal::type' => 'PerlInt'
            }, 'P6C::sv_literal' ),
            bless( {
              'P6C::closure::params' => undef,
              'P6C::closure::block' => []
            }, 'P6C::closure' )
          ]
        ]
      }, 'P6C::prefix' )
    ]
  }, 'P6C::closure' ),
  bless( {
    'P6C::closure::params' => undef,
    'P6C::closure::block' => [
      bless( {
        'P6C::prefix::name' => 'if',
        'P6C::prefix::args' => [
          [
            undef,
            bless( {
              'P6C::sv_literal::lval' => '1',
              'P6C::sv_literal::type' => 'PerlInt'
            }, 'P6C::sv_literal' ),
            bless( {
              'P6C::closure::params' => undef,
              'P6C::closure::block' => []
            }, 'P6C::closure' )
          ],
          [
            'elsif',
            bless( {
              'P6C::sv_literal::lval' => '2',
              'P6C::sv_literal::type' => 'PerlInt'
            }, 'P6C::sv_literal' ),
            bless( {
              'P6C::closure::params' => undef,
              'P6C::closure::block' => []
            }, 'P6C::closure' )
          ]
        ]
      }, 'P6C::prefix' )
    ]
  }, 'P6C::closure' ),
  bless( {
    'P6C::closure::params' => undef,
    'P6C::closure::block' => [
      bless( {
        'P6C::prefix::name' => 'if',
        'P6C::prefix::args' => [
          [
            undef,
            bless( {
              'P6C::sv_literal::lval' => '1',
              'P6C::sv_literal::type' => 'PerlInt'
            }, 'P6C::sv_literal' ),
            bless( {
              'P6C::closure::params' => undef,
              'P6C::closure::block' => []
            }, 'P6C::closure' )
          ]
        ]
      }, 'P6C::prefix' ),
      bless( {
        'P6C::Binop::r' => bless( {
          'P6C::sv_literal::lval' => '2',
          'P6C::sv_literal::type' => 'PerlInt'
        }, 'P6C::sv_literal' ),
        'P6C::Binop::op' => '=',
        'P6C::Binop::l' => bless( {
          'P6C::variable::type' => 'PerlUndef',
          'P6C::variable::topical' => '',
          'P6C::variable::name' => '$a',
          'P6C::variable::global' => '',
          'P6C::variable::implicit' => 0
        }, 'P6C::variable' )
      }, 'P6C::Binop' )
    ]
  }, 'P6C::closure' ),
  bless( {
    'P6C::closure::params' => undef,
    'P6C::closure::block' => [
      bless( {
        'P6C::prefix::name' => 'if',
        'P6C::prefix::args' => [
          [
            undef,
            bless( {
              'P6C::sv_literal::lval' => '1',
              'P6C::sv_literal::type' => 'PerlInt'
            }, 'P6C::sv_literal' ),
            bless( {
              'P6C::closure::params' => undef,
              'P6C::closure::block' => []
            }, 'P6C::closure' )
          ]
        ]
      }, 'P6C::prefix' ),
      bless( {
        'P6C::Binop::r' => bless( {
          'P6C::sv_literal::lval' => '2',
          'P6C::sv_literal::type' => 'PerlInt'
        }, 'P6C::sv_literal' ),
        'P6C::Binop::op' => '=',
        'P6C::Binop::l' => bless( {
          'P6C::variable::type' => 'PerlUndef',
          'P6C::variable::topical' => '',
          'P6C::variable::name' => '$a',
          'P6C::variable::global' => '',
          'P6C::variable::implicit' => 0
        }, 'P6C::variable' )
      }, 'P6C::Binop' )
    ]
  }, 'P6C::closure' ),
  bless( {
    'P6C::closure::params' => undef,
    'P6C::closure::block' => [
      bless( {
        'P6C::prefix::name' => 'if',
        'P6C::prefix::args' => [
          [
            undef,
            bless( {
              'P6C::sv_literal::lval' => '1',
              'P6C::sv_literal::type' => 'PerlInt'
            }, 'P6C::sv_literal' ),
            bless( {
              'P6C::closure::params' => undef,
              'P6C::closure::block' => []
            }, 'P6C::closure' )
          ]
        ]
      }, 'P6C::prefix' ),
      bless( {
        'P6C::Binop::r' => bless( {
          'P6C::sv_literal::lval' => '2',
          'P6C::sv_literal::type' => 'PerlInt'
        }, 'P6C::sv_literal' ),
        'P6C::Binop::op' => '=',
        'P6C::Binop::l' => bless( {
          'P6C::variable::type' => 'PerlUndef',
          'P6C::variable::topical' => '',
          'P6C::variable::name' => '$a',
          'P6C::variable::global' => '',
          'P6C::variable::implicit' => 0
        }, 'P6C::variable' )
      }, 'P6C::Binop' )
    ]
  }, 'P6C::closure' ),
  bless( {
    'P6C::closure::params' => undef,
    'P6C::closure::block' => [
      bless( {
        'P6C::prefix::name' => 'if',
        'P6C::prefix::args' => [
          [
            undef,
            bless( {
              'P6C::sv_literal::lval' => '1',
              'P6C::sv_literal::type' => 'PerlInt'
            }, 'P6C::sv_literal' ),
            bless( {
              'P6C::closure::params' => undef,
              'P6C::closure::block' => []
            }, 'P6C::closure' )
          ]
        ]
      }, 'P6C::prefix' ),
      bless( {
        'P6C::Binop::r' => bless( {
          'P6C::sv_literal::lval' => '2',
          'P6C::sv_literal::type' => 'PerlInt'
        }, 'P6C::sv_literal' ),
        'P6C::Binop::op' => '=',
        'P6C::Binop::l' => bless( {
          'P6C::variable::type' => 'PerlUndef',
          'P6C::variable::topical' => '',
          'P6C::variable::name' => '$a',
          'P6C::variable::global' => '',
          'P6C::variable::implicit' => 0
        }, 'P6C::variable' )
      }, 'P6C::Binop' )
    ]
  }, 'P6C::closure' ),
  bless( {
    'P6C::closure::params' => undef,
    'P6C::closure::block' => [
      bless( {
        'P6C::prefix::name' => 'if',
        'P6C::prefix::args' => [
          [
            undef,
            bless( {
              'P6C::sv_literal::lval' => '1',
              'P6C::sv_literal::type' => 'PerlInt'
            }, 'P6C::sv_literal' ),
            bless( {
              'P6C::closure::params' => undef,
              'P6C::closure::block' => []
            }, 'P6C::closure' )
          ]
        ]
      }, 'P6C::prefix' ),
      bless( {
        'P6C::Binop::r' => bless( {
          'P6C::sv_literal::lval' => '2',
          'P6C::sv_literal::type' => 'PerlInt'
        }, 'P6C::sv_literal' ),
        'P6C::Binop::op' => '=',
        'P6C::Binop::l' => bless( {
          'P6C::variable::type' => 'PerlUndef',
          'P6C::variable::topical' => '',
          'P6C::variable::name' => '$a',
          'P6C::variable::global' => '',
          'P6C::variable::implicit' => 0
        }, 'P6C::variable' )
      }, 'P6C::Binop' )
    ]
  }, 'P6C::closure' )
]
