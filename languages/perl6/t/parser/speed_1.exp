[
  bless( {
    'P6C::prefix::name' => 'print',
    'P6C::prefix::args' => bless( {
      'P6C::prefix::name' => 'scalar',
      'P6C::prefix::args' => bless( {
        'P6C::prefix::name' => 'localtime',
        'P6C::prefix::args' => undef
      }, 'P6C::prefix' )
    }, 'P6C::prefix' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::Binop::r' => bless( {
      'P6C::sv_literal::lval' => '1',
      'P6C::sv_literal::type' => 'PerlInt'
    }, 'P6C::sv_literal' ),
    'P6C::Binop::op' => '=',
    'P6C::Binop::l' => bless( {
      'P6C::variable::type' => 'PerlUndef',
      'P6C::variable::topical' => '',
      'P6C::variable::name' => '$a',
      'P6C::variable::global' => '',
      'P6C::variable::implicit' => 0
    }, 'P6C::variable' )
  }, 'P6C::Binop' ),
  bless( {
    'P6C::Binop::r' => bless( {
      'P6C::sv_literal::lval' => '1',
      'P6C::sv_literal::type' => 'PerlInt'
    }, 'P6C::sv_literal' ),
    'P6C::Binop::op' => '=',
    'P6C::Binop::l' => bless( {
      'P6C::variable::type' => 'PerlUndef',
      'P6C::variable::topical' => '',
      'P6C::variable::name' => '$a',
      'P6C::variable::global' => '',
      'P6C::variable::implicit' => 0
    }, 'P6C::variable' )
  }, 'P6C::Binop' ),
  bless( {
    'P6C::Binop::r' => bless( {
      'P6C::sv_literal::lval' => '1',
      'P6C::sv_literal::type' => 'PerlInt'
    }, 'P6C::sv_literal' ),
    'P6C::Binop::op' => '=',
    'P6C::Binop::l' => bless( {
      'P6C::variable::type' => 'PerlUndef',
      'P6C::variable::topical' => '',
      'P6C::variable::name' => '$a',
      'P6C::variable::global' => '',
      'P6C::variable::implicit' => 0
    }, 'P6C::variable' )
  }, 'P6C::Binop' ),
  bless( {
    'P6C::Binop::r' => bless( {
      'P6C::sv_literal::lval' => '1',
      'P6C::sv_literal::type' => 'PerlInt'
    }, 'P6C::sv_literal' ),
    'P6C::Binop::op' => '=',
    'P6C::Binop::l' => bless( {
      'P6C::variable::type' => 'PerlUndef',
      'P6C::variable::topical' => '',
      'P6C::variable::name' => '$a',
      'P6C::variable::global' => '',
      'P6C::variable::implicit' => 0
    }, 'P6C::variable' )
  }, 'P6C::Binop' ),
  bless( {
    'P6C::Binop::r' => bless( {
      'P6C::sv_literal::lval' => '1',
      'P6C::sv_literal::type' => 'PerlInt'
    }, 'P6C::sv_literal' ),
    'P6C::Binop::op' => '=',
    'P6C::Binop::l' => bless( {
      'P6C::variable::type' => 'PerlUndef',
      'P6C::variable::topical' => '',
      'P6C::variable::name' => '$a',
      'P6C::variable::global' => '',
      'P6C::variable::implicit' => 0
    }, 'P6C::variable' )
  }, 'P6C::Binop' ),
  bless( {
    'P6C::prefix::name' => 'if',
    'P6C::prefix::args' => [
      [
        undef,
        bless( {
          'P6C::sv_literal::lval' => '1',
          'P6C::sv_literal::type' => 'PerlInt'
        }, 'P6C::sv_literal' ),
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => []
        }, 'P6C::closure' )
      ]
    ]
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'if',
    'P6C::prefix::args' => [
      [
        undef,
        bless( {
          'P6C::sv_literal::lval' => '1',
          'P6C::sv_literal::type' => 'PerlInt'
        }, 'P6C::sv_literal' ),
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => []
        }, 'P6C::closure' )
      ]
    ]
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'if',
    'P6C::prefix::args' => [
      [
        undef,
        bless( {
          'P6C::sv_literal::lval' => '1',
          'P6C::sv_literal::type' => 'PerlInt'
        }, 'P6C::sv_literal' ),
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => []
        }, 'P6C::closure' )
      ],
      [
        'else',
        1,
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => []
        }, 'P6C::closure' )
      ]
    ]
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'if',
    'P6C::prefix::args' => [
      [
        undef,
        bless( {
          'P6C::sv_literal::lval' => '1',
          'P6C::sv_literal::type' => 'PerlInt'
        }, 'P6C::sv_literal' ),
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => []
        }, 'P6C::closure' )
      ],
      [
        'else',
        1,
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => []
        }, 'P6C::closure' )
      ]
    ]
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'if',
    'P6C::prefix::args' => [
      [
        undef,
        bless( {
          'P6C::sv_literal::lval' => '1',
          'P6C::sv_literal::type' => 'PerlInt'
        }, 'P6C::sv_literal' ),
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => []
        }, 'P6C::closure' )
      ],
      [
        'elsif',
        bless( {
          'P6C::sv_literal::lval' => '2',
          'P6C::sv_literal::type' => 'PerlInt'
        }, 'P6C::sv_literal' ),
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => []
        }, 'P6C::closure' )
      ]
    ]
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'if',
    'P6C::prefix::args' => [
      [
        undef,
        bless( {
          'P6C::sv_literal::lval' => '1',
          'P6C::sv_literal::type' => 'PerlInt'
        }, 'P6C::sv_literal' ),
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => []
        }, 'P6C::closure' )
      ],
      [
        'elsif',
        bless( {
          'P6C::sv_literal::lval' => '2',
          'P6C::sv_literal::type' => 'PerlInt'
        }, 'P6C::sv_literal' ),
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => []
        }, 'P6C::closure' )
      ]
    ]
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'if',
    'P6C::prefix::args' => [
      [
        undef,
        bless( {
          'P6C::sv_literal::lval' => '1',
          'P6C::sv_literal::type' => 'PerlInt'
        }, 'P6C::sv_literal' ),
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => []
        }, 'P6C::closure' )
      ],
      [
        'elsif',
        bless( {
          'P6C::sv_literal::lval' => '2',
          'P6C::sv_literal::type' => 'PerlInt'
        }, 'P6C::sv_literal' ),
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => []
        }, 'P6C::closure' )
      ]
    ]
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'if',
    'P6C::prefix::args' => [
      [
        undef,
        bless( {
          'P6C::sv_literal::lval' => '1',
          'P6C::sv_literal::type' => 'PerlInt'
        }, 'P6C::sv_literal' ),
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => []
        }, 'P6C::closure' )
      ],
      [
        'elsif',
        bless( {
          'P6C::sv_literal::lval' => '2',
          'P6C::sv_literal::type' => 'PerlInt'
        }, 'P6C::sv_literal' ),
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => []
        }, 'P6C::closure' )
      ]
    ]
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'if',
    'P6C::prefix::args' => [
      [
        undef,
        bless( {
          'P6C::sv_literal::lval' => '1',
          'P6C::sv_literal::type' => 'PerlInt'
        }, 'P6C::sv_literal' ),
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => []
        }, 'P6C::closure' )
      ]
    ]
  }, 'P6C::prefix' ),
  bless( {
    'P6C::Binop::r' => bless( {
      'P6C::sv_literal::lval' => '2',
      'P6C::sv_literal::type' => 'PerlInt'
    }, 'P6C::sv_literal' ),
    'P6C::Binop::op' => '=',
    'P6C::Binop::l' => bless( {
      'P6C::variable::type' => 'PerlUndef',
      'P6C::variable::topical' => '',
      'P6C::variable::name' => '$a',
      'P6C::variable::global' => '',
      'P6C::variable::implicit' => 0
    }, 'P6C::variable' )
  }, 'P6C::Binop' ),
  bless( {
    'P6C::prefix::name' => 'if',
    'P6C::prefix::args' => [
      [
        undef,
        bless( {
          'P6C::sv_literal::lval' => '1',
          'P6C::sv_literal::type' => 'PerlInt'
        }, 'P6C::sv_literal' ),
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => []
        }, 'P6C::closure' )
      ]
    ]
  }, 'P6C::prefix' ),
  bless( {
    'P6C::Binop::r' => bless( {
      'P6C::sv_literal::lval' => '2',
      'P6C::sv_literal::type' => 'PerlInt'
    }, 'P6C::sv_literal' ),
    'P6C::Binop::op' => '=',
    'P6C::Binop::l' => bless( {
      'P6C::variable::type' => 'PerlUndef',
      'P6C::variable::topical' => '',
      'P6C::variable::name' => '$a',
      'P6C::variable::global' => '',
      'P6C::variable::implicit' => 0
    }, 'P6C::variable' )
  }, 'P6C::Binop' ),
  bless( {
    'P6C::prefix::name' => 'if',
    'P6C::prefix::args' => [
      [
        undef,
        bless( {
          'P6C::sv_literal::lval' => '1',
          'P6C::sv_literal::type' => 'PerlInt'
        }, 'P6C::sv_literal' ),
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => []
        }, 'P6C::closure' )
      ]
    ]
  }, 'P6C::prefix' ),
  bless( {
    'P6C::Binop::r' => bless( {
      'P6C::sv_literal::lval' => '2',
      'P6C::sv_literal::type' => 'PerlInt'
    }, 'P6C::sv_literal' ),
    'P6C::Binop::op' => '=',
    'P6C::Binop::l' => bless( {
      'P6C::variable::type' => 'PerlUndef',
      'P6C::variable::topical' => '',
      'P6C::variable::name' => '$a',
      'P6C::variable::global' => '',
      'P6C::variable::implicit' => 0
    }, 'P6C::variable' )
  }, 'P6C::Binop' ),
  bless( {
    'P6C::prefix::name' => 'if',
    'P6C::prefix::args' => [
      [
        undef,
        bless( {
          'P6C::sv_literal::lval' => '1',
          'P6C::sv_literal::type' => 'PerlInt'
        }, 'P6C::sv_literal' ),
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => []
        }, 'P6C::closure' )
      ]
    ]
  }, 'P6C::prefix' ),
  bless( {
    'P6C::Binop::r' => bless( {
      'P6C::sv_literal::lval' => '2',
      'P6C::sv_literal::type' => 'PerlInt'
    }, 'P6C::sv_literal' ),
    'P6C::Binop::op' => '=',
    'P6C::Binop::l' => bless( {
      'P6C::variable::type' => 'PerlUndef',
      'P6C::variable::topical' => '',
      'P6C::variable::name' => '$a',
      'P6C::variable::global' => '',
      'P6C::variable::implicit' => 0
    }, 'P6C::variable' )
  }, 'P6C::Binop' ),
  bless( {
    'P6C::prefix::name' => 'if',
    'P6C::prefix::args' => [
      [
        undef,
        bless( {
          'P6C::sv_literal::lval' => '1',
          'P6C::sv_literal::type' => 'PerlInt'
        }, 'P6C::sv_literal' ),
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => []
        }, 'P6C::closure' )
      ]
    ]
  }, 'P6C::prefix' ),
  bless( {
    'P6C::Binop::r' => bless( {
      'P6C::sv_literal::lval' => '2',
      'P6C::sv_literal::type' => 'PerlInt'
    }, 'P6C::sv_literal' ),
    'P6C::Binop::op' => '=',
    'P6C::Binop::l' => bless( {
      'P6C::variable::type' => 'PerlUndef',
      'P6C::variable::topical' => '',
      'P6C::variable::name' => '$a',
      'P6C::variable::global' => '',
      'P6C::variable::implicit' => 0
    }, 'P6C::variable' )
  }, 'P6C::Binop' ),
  bless( {
    'P6C::directive::args' => undef,
    'P6C::directive::thing' => 'strict',
    'P6C::directive::name' => 'use'
  }, 'P6C::directive' ),
  bless( {
    'P6C::directive::args' => undef,
    'P6C::directive::thing' => 'warnings',
    'P6C::directive::name' => 'use'
  }, 'P6C::directive' ),
  bless( {
    'P6C::decl::qual' => bless( {
      'P6C::scope_class::scope' => 'my',
      'P6C::scope_class::class' => undef
    }, 'P6C::scope_class' ),
    'P6C::decl::vars' => [
      bless( {
        'P6C::variable::type' => 'PerlUndef',
        'P6C::variable::topical' => '',
        'P6C::variable::name' => '$root',
        'P6C::variable::global' => '',
        'P6C::variable::implicit' => 0
      }, 'P6C::variable' ),
      bless( {
        'P6C::variable::type' => 'PerlUndef',
        'P6C::variable::topical' => '',
        'P6C::variable::name' => '$n',
        'P6C::variable::global' => '',
        'P6C::variable::implicit' => 0
      }, 'P6C::variable' )
    ],
    'P6C::decl::props' => []
  }, 'P6C::decl' ),
  bless( {
    'P6C::prefix::name' => 'while',
    'P6C::prefix::args' => bless( {
      'P6C::ValueList::vals' => [
        bless( {
          'P6C::compare::seq' => [
            bless( {
              'P6C::incr::op' => '++',
              'P6C::incr::post' => 1,
              'P6C::incr::thing' => bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$n',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' )
            }, 'P6C::incr' ),
            '<',
            bless( {
              'P6C::sv_literal::lval' => '20',
              'P6C::sv_literal::type' => 'PerlInt'
            }, 'P6C::sv_literal' )
          ]
        }, 'P6C::compare' ),
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => [
            bless( {
              'P6C::prefix::name' => 'insert',
              'P6C::prefix::args' => bless( {
                'P6C::Binop::r' => bless( {
                  'P6C::prefix::name' => 'int',
                  'P6C::prefix::args' => bless( {
                    'P6C::prefix::name' => 'rand',
                    'P6C::prefix::args' => bless( {
                      'P6C::sv_literal::lval' => '1000',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::prefix' )
                }, 'P6C::prefix' ),
                'P6C::Binop::op' => ',',
                'P6C::Binop::l' => bless( {
                  'P6C::variable::type' => 'PerlUndef',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '$root',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::Binop' )
            }, 'P6C::prefix' )
          ]
        }, 'P6C::closure' )
      ]
    }, 'P6C::ValueList' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'print',
    'P6C::prefix::args' => bless( {
      'P6C::sv_literal::lval' => '"Pre order:  "',
      'P6C::sv_literal::type' => 'PerlString'
    }, 'P6C::sv_literal' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'show',
    'P6C::prefix::args' => bless( {
      'P6C::Binop::r' => bless( {
        'P6C::variable::type' => 'PerlUndef',
        'P6C::variable::topical' => '',
        'P6C::variable::name' => '$pre',
        'P6C::variable::global' => '',
        'P6C::variable::implicit' => 0
      }, 'P6C::variable' ),
      'P6C::Binop::op' => ',',
      'P6C::Binop::l' => bless( {
        'P6C::variable::type' => 'PerlUndef',
        'P6C::variable::topical' => '',
        'P6C::variable::name' => '$root',
        'P6C::variable::global' => '',
        'P6C::variable::implicit' => 0
      }, 'P6C::variable' )
    }, 'P6C::Binop' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'print',
    'P6C::prefix::args' => bless( {
      'P6C::sv_literal::lval' => '"\\n"',
      'P6C::sv_literal::type' => 'PerlString'
    }, 'P6C::sv_literal' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'print',
    'P6C::prefix::args' => bless( {
      'P6C::sv_literal::lval' => '"In order:   "',
      'P6C::sv_literal::type' => 'PerlString'
    }, 'P6C::sv_literal' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'show',
    'P6C::prefix::args' => bless( {
      'P6C::Binop::r' => bless( {
        'P6C::variable::type' => 'PerlUndef',
        'P6C::variable::topical' => '',
        'P6C::variable::name' => '$in',
        'P6C::variable::global' => '',
        'P6C::variable::implicit' => 0
      }, 'P6C::variable' ),
      'P6C::Binop::op' => ',',
      'P6C::Binop::l' => bless( {
        'P6C::variable::type' => 'PerlUndef',
        'P6C::variable::topical' => '',
        'P6C::variable::name' => '$root',
        'P6C::variable::global' => '',
        'P6C::variable::implicit' => 0
      }, 'P6C::variable' )
    }, 'P6C::Binop' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'print',
    'P6C::prefix::args' => bless( {
      'P6C::sv_literal::lval' => '"\\n"',
      'P6C::sv_literal::type' => 'PerlString'
    }, 'P6C::sv_literal' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'print',
    'P6C::prefix::args' => bless( {
      'P6C::sv_literal::lval' => '"Post order: "',
      'P6C::sv_literal::type' => 'PerlString'
    }, 'P6C::sv_literal' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'show',
    'P6C::prefix::args' => bless( {
      'P6C::Binop::r' => bless( {
        'P6C::variable::type' => 'PerlUndef',
        'P6C::variable::topical' => '',
        'P6C::variable::name' => '$post',
        'P6C::variable::global' => '',
        'P6C::variable::implicit' => 0
      }, 'P6C::variable' ),
      'P6C::Binop::op' => ',',
      'P6C::Binop::l' => bless( {
        'P6C::variable::type' => 'PerlUndef',
        'P6C::variable::topical' => '',
        'P6C::variable::name' => '$root',
        'P6C::variable::global' => '',
        'P6C::variable::implicit' => 0
      }, 'P6C::variable' )
    }, 'P6C::Binop' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'print',
    'P6C::prefix::args' => bless( {
      'P6C::sv_literal::lval' => '"\\n"',
      'P6C::sv_literal::type' => 'PerlString'
    }, 'P6C::sv_literal' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'while',
    'P6C::prefix::args' => bless( {
      'P6C::ValueList::vals' => [
        bless( {
          'P6C::prefix::name' => 'readline',
          'P6C::prefix::args' => bless( {
            'P6C::variable::type' => 'PerlUndef',
            'P6C::variable::topical' => '',
            'P6C::variable::name' => '$ARGS',
            'P6C::variable::global' => '',
            'P6C::variable::implicit' => 0
          }, 'P6C::variable' )
        }, 'P6C::prefix' ),
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => [
            bless( {
              'P6C::prefix::name' => 'if',
              'P6C::prefix::args' => [
                [
                  undef,
                  bless( {
                    'P6C::Binop::r' => bless( {
                      'P6C::prefix::name' => 'search',
                      'P6C::prefix::args' => bless( {
                        'P6C::Binop::r' => bless( {
                          'P6C::variable::type' => 'PerlUndef',
                          'P6C::variable::topical' => '',
                          'P6C::variable::name' => '$_',
                          'P6C::variable::global' => '',
                          'P6C::variable::implicit' => 0
                        }, 'P6C::variable' ),
                        'P6C::Binop::op' => ',',
                        'P6C::Binop::l' => bless( {
                          'P6C::variable::type' => 'PerlUndef',
                          'P6C::variable::topical' => '',
                          'P6C::variable::name' => '$root',
                          'P6C::variable::global' => '',
                          'P6C::variable::implicit' => 0
                        }, 'P6C::variable' )
                      }, 'P6C::Binop' )
                    }, 'P6C::prefix' ),
                    'P6C::Binop::op' => '=',
                    'P6C::Binop::l' => bless( {
                      'P6C::decl::qual' => bless( {
                        'P6C::scope_class::scope' => 'my',
                        'P6C::scope_class::class' => undef
                      }, 'P6C::scope_class' ),
                      'P6C::decl::vars' => bless( {
                        'P6C::variable::type' => 'PerlUndef',
                        'P6C::variable::topical' => '',
                        'P6C::variable::name' => '$node',
                        'P6C::variable::global' => '',
                        'P6C::variable::implicit' => 0
                      }, 'P6C::variable' ),
                      'P6C::decl::props' => []
                    }, 'P6C::decl' )
                  }, 'P6C::Binop' ),
                  bless( {
                    'P6C::closure::params' => undef,
                    'P6C::closure::block' => [
                      bless( {
                        'P6C::prefix::name' => 'print',
                        'P6C::prefix::args' => bless( {
                          'P6C::sv_literal::lval' => '"Found $_ at $node: $node{VALUE}\\n"',
                          'P6C::sv_literal::type' => 'PerlString'
                        }, 'P6C::sv_literal' )
                      }, 'P6C::prefix' ),
                      bless( {
                        'P6C::guard::expr' => bless( {
                          'P6C::prefix::name' => 'print',
                          'P6C::prefix::args' => bless( {
                            'P6C::sv_literal::lval' => '"(again!)\\n"',
                            'P6C::sv_literal::type' => 'PerlString'
                          }, 'P6C::sv_literal' )
                        }, 'P6C::prefix' ),
                        'P6C::guard::name' => 'if',
                        'P6C::guard::test' => bless( {
                          'P6C::compare::seq' => [
                            bless( {
                              'P6C::Binop::r' => bless( {
                                'P6C::apply_rhs::subscripts' => [],
                                'P6C::apply_rhs::prop' => 'Found'
                              }, 'P6C::apply_rhs' ),
                              'P6C::Binop::op' => '.',
                              'P6C::Binop::l' => bless( {
                                'P6C::subscript_exp::subscripts' => [
                                  bless( {
                                    'P6C::indices::type' => 'PerlHash',
                                    'P6C::indices::indices' => bless( {
                                      'P6C::sv_literal::lval' => '"VALUE"',
                                      'P6C::sv_literal::type' => 'PerlString'
                                    }, 'P6C::sv_literal' )
                                  }, 'P6C::indices' )
                                ],
                                'P6C::subscript_exp::thing' => bless( {
                                  'P6C::variable::type' => 'PerlUndef',
                                  'P6C::variable::topical' => '',
                                  'P6C::variable::name' => '$node',
                                  'P6C::variable::global' => '',
                                  'P6C::variable::implicit' => 0
                                }, 'P6C::variable' )
                              }, 'P6C::subscript_exp' )
                            }, 'P6C::Binop' ),
                            '>',
                            bless( {
                              'P6C::sv_literal::lval' => '1',
                              'P6C::sv_literal::type' => 'PerlInt'
                            }, 'P6C::sv_literal' )
                          ]
                        }, 'P6C::compare' )
                      }, 'P6C::guard' )
                    ]
                  }, 'P6C::closure' )
                ],
                [
                  'else',
                  1,
                  bless( {
                    'P6C::closure::params' => undef,
                    'P6C::closure::block' => [
                      bless( {
                        'P6C::prefix::name' => 'print',
                        'P6C::prefix::args' => bless( {
                          'P6C::sv_literal::lval' => '"No $_ in tree\\n"',
                          'P6C::sv_literal::type' => 'PerlString'
                        }, 'P6C::sv_literal' )
                      }, 'P6C::prefix' )
                    ]
                  }, 'P6C::closure' )
                ]
              ]
            }, 'P6C::prefix' )
          ]
        }, 'P6C::closure' )
      ]
    }, 'P6C::ValueList' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::sub_def::props' => [],
    'P6C::sub_def::qual' => undef,
    'P6C::sub_def::name' => 'insert',
    'P6C::sub_def::closure' => bless( {
      'P6C::closure::params' => bless( {
        'P6C::params::req' => [
          bless( {
            'P6C::param::init' => undef,
            'P6C::param::props' => [
              bless( {
                'P6C::property::name' => 'rw',
                'P6C::property::args' => undef
              }, 'P6C::property' )
            ],
            'P6C::param::qual' => bless( {
              'P6C::scope_class::scope' => undef,
              'P6C::scope_class::class' => 'HASH'
            }, 'P6C::scope_class' ),
            'P6C::param::var' => bless( {
              'P6C::variable::type' => 'PerlUndef',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '$tree',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          }, 'P6C::param' ),
          bless( {
            'P6C::param::init' => undef,
            'P6C::param::props' => [],
            'P6C::param::qual' => bless( {
              'P6C::scope_class::scope' => undef,
              'P6C::scope_class::class' => 'int'
            }, 'P6C::scope_class' ),
            'P6C::param::var' => bless( {
              'P6C::variable::type' => 'PerlUndef',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '$val',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          }, 'P6C::param' )
        ],
        'P6C::params::rest' => undef,
        'P6C::params::opt' => []
      }, 'P6C::params' ),
      'P6C::closure::block' => [
        bless( {
          'P6C::prefix::name' => 'unless',
          'P6C::prefix::args' => [
            [
              undef,
              bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$tree',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' ),
              bless( {
                'P6C::closure::params' => undef,
                'P6C::closure::block' => [
                  bless( {
                    'P6C::decl::qual' => bless( {
                      'P6C::scope_class::scope' => 'my',
                      'P6C::scope_class::class' => undef
                    }, 'P6C::scope_class' ),
                    'P6C::decl::vars' => bless( {
                      'P6C::variable::type' => 'PerlHash',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '%node',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' ),
                    'P6C::decl::props' => []
                  }, 'P6C::decl' ),
                  bless( {
                    'P6C::Binop::r' => bless( {
                      'P6C::variable::type' => 'PerlHash',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '%node',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' ),
                    'P6C::Binop::op' => '=',
                    'P6C::Binop::l' => bless( {
                      'P6C::variable::type' => 'PerlUndef',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '$tree',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' )
                  }, 'P6C::Binop' ),
                  bless( {
                    'P6C::prefix::name' => 'return',
                    'P6C::prefix::args' => bless( {
                      'P6C::ValueList::vals' => []
                    }, 'P6C::ValueList' )
                  }, 'P6C::prefix' )
                ]
              }, 'P6C::closure' )
            ]
          ]
        }, 'P6C::prefix' ),
        bless( {
          'P6C::prefix::name' => 'if',
          'P6C::prefix::args' => [
            [
              undef,
              bless( {
                'P6C::compare::seq' => [
                  bless( {
                    'P6C::subscript_exp::subscripts' => [
                      bless( {
                        'P6C::indices::type' => 'PerlHash',
                        'P6C::indices::indices' => bless( {
                          'P6C::sv_literal::lval' => '"VALUE"',
                          'P6C::sv_literal::type' => 'PerlString'
                        }, 'P6C::sv_literal' )
                      }, 'P6C::indices' )
                    ],
                    'P6C::subscript_exp::thing' => bless( {
                      'P6C::variable::type' => 'PerlUndef',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '$tree',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' )
                  }, 'P6C::subscript_exp' ),
                  '>',
                  bless( {
                    'P6C::variable::type' => 'PerlUndef',
                    'P6C::variable::topical' => '',
                    'P6C::variable::name' => '$val',
                    'P6C::variable::global' => '',
                    'P6C::variable::implicit' => 0
                  }, 'P6C::variable' )
                ]
              }, 'P6C::compare' ),
              bless( {
                'P6C::closure::params' => undef,
                'P6C::closure::block' => [
                  bless( {
                    'P6C::prefix::name' => 'insert',
                    'P6C::prefix::args' => bless( {
                      'P6C::Binop::r' => bless( {
                        'P6C::variable::type' => 'PerlUndef',
                        'P6C::variable::topical' => '',
                        'P6C::variable::name' => '$val',
                        'P6C::variable::global' => '',
                        'P6C::variable::implicit' => 0
                      }, 'P6C::variable' ),
                      'P6C::Binop::op' => ',',
                      'P6C::Binop::l' => bless( {
                        'P6C::subscript_exp::subscripts' => [
                          bless( {
                            'P6C::indices::type' => 'PerlHash',
                            'P6C::indices::indices' => bless( {
                              'P6C::sv_literal::lval' => '"LEFT"',
                              'P6C::sv_literal::type' => 'PerlString'
                            }, 'P6C::sv_literal' )
                          }, 'P6C::indices' )
                        ],
                        'P6C::subscript_exp::thing' => bless( {
                          'P6C::variable::type' => 'PerlUndef',
                          'P6C::variable::topical' => '',
                          'P6C::variable::name' => '$tree',
                          'P6C::variable::global' => '',
                          'P6C::variable::implicit' => 0
                        }, 'P6C::variable' )
                      }, 'P6C::subscript_exp' )
                    }, 'P6C::Binop' )
                  }, 'P6C::prefix' )
                ]
              }, 'P6C::closure' )
            ],
            [
              'elsif',
              bless( {
                'P6C::compare::seq' => [
                  bless( {
                    'P6C::subscript_exp::subscripts' => [
                      bless( {
                        'P6C::indices::type' => 'PerlHash',
                        'P6C::indices::indices' => bless( {
                          'P6C::sv_literal::lval' => '"VALUE"',
                          'P6C::sv_literal::type' => 'PerlString'
                        }, 'P6C::sv_literal' )
                      }, 'P6C::indices' )
                    ],
                    'P6C::subscript_exp::thing' => bless( {
                      'P6C::variable::type' => 'PerlUndef',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '$tree',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' )
                  }, 'P6C::subscript_exp' ),
                  '<',
                  bless( {
                    'P6C::variable::type' => 'PerlUndef',
                    'P6C::variable::topical' => '',
                    'P6C::variable::name' => '$val',
                    'P6C::variable::global' => '',
                    'P6C::variable::implicit' => 0
                  }, 'P6C::variable' )
                ]
              }, 'P6C::compare' ),
              bless( {
                'P6C::closure::params' => undef,
                'P6C::closure::block' => [
                  bless( {
                    'P6C::prefix::name' => 'insert',
                    'P6C::prefix::args' => bless( {
                      'P6C::Binop::r' => bless( {
                        'P6C::variable::type' => 'PerlUndef',
                        'P6C::variable::topical' => '',
                        'P6C::variable::name' => '$val',
                        'P6C::variable::global' => '',
                        'P6C::variable::implicit' => 0
                      }, 'P6C::variable' ),
                      'P6C::Binop::op' => ',',
                      'P6C::Binop::l' => bless( {
                        'P6C::subscript_exp::subscripts' => [
                          bless( {
                            'P6C::indices::type' => 'PerlHash',
                            'P6C::indices::indices' => bless( {
                              'P6C::sv_literal::lval' => '"RIGHT"',
                              'P6C::sv_literal::type' => 'PerlString'
                            }, 'P6C::sv_literal' )
                          }, 'P6C::indices' )
                        ],
                        'P6C::subscript_exp::thing' => bless( {
                          'P6C::variable::type' => 'PerlUndef',
                          'P6C::variable::topical' => '',
                          'P6C::variable::name' => '$tree',
                          'P6C::variable::global' => '',
                          'P6C::variable::implicit' => 0
                        }, 'P6C::variable' )
                      }, 'P6C::subscript_exp' )
                    }, 'P6C::Binop' )
                  }, 'P6C::prefix' )
                ]
              }, 'P6C::closure' )
            ],
            [
              'else',
              1,
              bless( {
                'P6C::closure::params' => undef,
                'P6C::closure::block' => [
                  bless( {
                    'P6C::prefix::name' => 'warn',
                    'P6C::prefix::args' => bless( {
                      'P6C::sv_literal::lval' => '"dup insert of $val\\n"',
                      'P6C::sv_literal::type' => 'PerlString'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::prefix' )
                ]
              }, 'P6C::closure' )
            ]
          ]
        }, 'P6C::prefix' )
      ]
    }, 'P6C::closure' )
  }, 'P6C::sub_def' ),
  bless( {
    'P6C::sub_def::props' => [],
    'P6C::sub_def::qual' => undef,
    'P6C::sub_def::name' => 'show',
    'P6C::sub_def::closure' => bless( {
      'P6C::closure::params' => undef,
      'P6C::closure::block' => [
        bless( {
          'P6C::guard::expr' => bless( {
            'P6C::prefix::name' => 'return',
            'P6C::prefix::args' => bless( {
              'P6C::ValueList::vals' => []
            }, 'P6C::ValueList' )
          }, 'P6C::prefix' ),
          'P6C::guard::name' => 'unless',
          'P6C::guard::test' => bless( {
            'P6C::subscript_exp::subscripts' => [
              bless( {
                'P6C::indices::type' => 'PerlArray',
                'P6C::indices::indices' => bless( {
                  'P6C::sv_literal::lval' => '0',
                  'P6C::sv_literal::type' => 'PerlInt'
                }, 'P6C::sv_literal' )
              }, 'P6C::indices' )
            ],
            'P6C::subscript_exp::thing' => bless( {
              'P6C::variable::type' => 'PerlArray',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '@_',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          }, 'P6C::subscript_exp' )
        }, 'P6C::guard' ),
        bless( {
          'P6C::guard::expr' => bless( {
            'P6C::prefix::name' => 'show',
            'P6C::prefix::args' => bless( {
              'P6C::Binop::r' => bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '1',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' ),
              'P6C::Binop::op' => ',',
              'P6C::Binop::l' => bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '0',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' ),
                  bless( {
                    'P6C::indices::type' => 'PerlHash',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '"LEFT"',
                      'P6C::sv_literal::type' => 'PerlString'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' )
            }, 'P6C::Binop' )
          }, 'P6C::prefix' ),
          'P6C::guard::name' => 'unless',
          'P6C::guard::test' => bless( {
            'P6C::compare::seq' => [
              bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '1',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' ),
              '==',
              bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$post',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' )
            ]
          }, 'P6C::compare' )
        }, 'P6C::guard' ),
        bless( {
          'P6C::guard::expr' => bless( {
            'P6C::prefix::name' => 'show',
            'P6C::prefix::args' => bless( {
              'P6C::Binop::r' => bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '1',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' ),
              'P6C::Binop::op' => ',',
              'P6C::Binop::l' => bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '0',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' ),
                  bless( {
                    'P6C::indices::type' => 'PerlHash',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '"RIGHT"',
                      'P6C::sv_literal::type' => 'PerlString'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' )
            }, 'P6C::Binop' )
          }, 'P6C::prefix' ),
          'P6C::guard::name' => 'if',
          'P6C::guard::test' => bless( {
            'P6C::compare::seq' => [
              bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '1',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' ),
              '==',
              bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$pre',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' )
            ]
          }, 'P6C::compare' )
        }, 'P6C::guard' ),
        bless( {
          'P6C::prefix::name' => 'print',
          'P6C::prefix::args' => bless( {
            'P6C::subscript_exp::subscripts' => [
              bless( {
                'P6C::indices::type' => 'PerlArray',
                'P6C::indices::indices' => bless( {
                  'P6C::sv_literal::lval' => '0',
                  'P6C::sv_literal::type' => 'PerlInt'
                }, 'P6C::sv_literal' )
              }, 'P6C::indices' ),
              bless( {
                'P6C::indices::type' => 'PerlHash',
                'P6C::indices::indices' => bless( {
                  'P6C::sv_literal::lval' => '"VALUE"',
                  'P6C::sv_literal::type' => 'PerlString'
                }, 'P6C::sv_literal' )
              }, 'P6C::indices' )
            ],
            'P6C::subscript_exp::thing' => bless( {
              'P6C::variable::type' => 'PerlArray',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '@_',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          }, 'P6C::subscript_exp' )
        }, 'P6C::prefix' ),
        bless( {
          'P6C::guard::expr' => bless( {
            'P6C::prefix::name' => 'show',
            'P6C::prefix::args' => bless( {
              'P6C::Binop::r' => bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '1',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' ),
              'P6C::Binop::op' => ',',
              'P6C::Binop::l' => bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '0',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' ),
                  bless( {
                    'P6C::indices::type' => 'PerlHash',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '"LEFT"',
                      'P6C::sv_literal::type' => 'PerlString'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' )
            }, 'P6C::Binop' )
          }, 'P6C::prefix' ),
          'P6C::guard::name' => 'if',
          'P6C::guard::test' => bless( {
            'P6C::compare::seq' => [
              bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '1',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' ),
              '==',
              bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$post',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' )
            ]
          }, 'P6C::compare' )
        }, 'P6C::guard' ),
        bless( {
          'P6C::guard::expr' => bless( {
            'P6C::prefix::name' => 'show',
            'P6C::prefix::args' => bless( {
              'P6C::Binop::r' => bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '1',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' ),
              'P6C::Binop::op' => ',',
              'P6C::Binop::l' => bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '0',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' ),
                  bless( {
                    'P6C::indices::type' => 'PerlHash',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '"RIGHT"',
                      'P6C::sv_literal::type' => 'PerlString'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' )
            }, 'P6C::Binop' )
          }, 'P6C::prefix' ),
          'P6C::guard::name' => 'unless',
          'P6C::guard::test' => bless( {
            'P6C::compare::seq' => [
              bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '1',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' ),
              '==',
              bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$pre',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' )
            ]
          }, 'P6C::compare' )
        }, 'P6C::guard' )
      ]
    }, 'P6C::closure' )
  }, 'P6C::sub_def' ),
  bless( {
    'P6C::sub_def::props' => [],
    'P6C::sub_def::qual' => undef,
    'P6C::sub_def::name' => 'search',
    'P6C::sub_def::closure' => bless( {
      'P6C::closure::params' => bless( {
        'P6C::params::req' => [
          bless( {
            'P6C::param::init' => undef,
            'P6C::param::props' => [
              bless( {
                'P6C::property::name' => 'rw',
                'P6C::property::args' => undef
              }, 'P6C::property' )
            ],
            'P6C::param::qual' => bless( {
              'P6C::scope_class::scope' => undef,
              'P6C::scope_class::class' => 'HASH'
            }, 'P6C::scope_class' ),
            'P6C::param::var' => bless( {
              'P6C::variable::type' => 'PerlUndef',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '$tree',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          }, 'P6C::param' )
        ],
        'P6C::params::rest' => bless( {
          'P6C::param::init' => undef,
          'P6C::param::props' => [],
          'P6C::param::qual' => undef,
          'P6C::param::var' => bless( {
            'P6C::variable::type' => 'PerlArray',
            'P6C::variable::topical' => undef,
            'P6C::variable::name' => '@_',
            'P6C::variable::global' => undef,
            'P6C::variable::implicit' => undef
          }, 'P6C::variable' )
        }, 'P6C::param' ),
        'P6C::params::opt' => []
      }, 'P6C::params' ),
      'P6C::closure::block' => [
        bless( {
          'P6C::guard::expr' => bless( {
            'P6C::prefix::name' => 'return',
            'P6C::prefix::args' => bless( {
              'P6C::ValueList::vals' => []
            }, 'P6C::ValueList' )
          }, 'P6C::prefix' ),
          'P6C::guard::name' => 'unless',
          'P6C::guard::test' => bless( {
            'P6C::variable::type' => 'PerlUndef',
            'P6C::variable::topical' => '',
            'P6C::variable::name' => '$tree',
            'P6C::variable::global' => '',
            'P6C::variable::implicit' => 0
          }, 'P6C::variable' )
        }, 'P6C::guard' ),
        bless( {
          'P6C::guard::expr' => bless( {
            'P6C::prefix::name' => 'return',
            'P6C::prefix::args' => bless( {
              'P6C::prefix::name' => 'search',
              'P6C::prefix::args' => bless( {
                'P6C::ValueList::vals' => [
                  bless( {
                    'P6C::Binop::r' => bless( {
                      'P6C::subscript_exp::subscripts' => [
                        bless( {
                          'P6C::indices::type' => 'PerlArray',
                          'P6C::indices::indices' => bless( {
                            'P6C::sv_literal::lval' => '0',
                            'P6C::sv_literal::type' => 'PerlInt'
                          }, 'P6C::sv_literal' )
                        }, 'P6C::indices' )
                      ],
                      'P6C::subscript_exp::thing' => bless( {
                        'P6C::variable::type' => 'PerlArray',
                        'P6C::variable::topical' => '',
                        'P6C::variable::name' => '@_',
                        'P6C::variable::global' => '',
                        'P6C::variable::implicit' => 0
                      }, 'P6C::variable' )
                    }, 'P6C::subscript_exp' ),
                    'P6C::Binop::op' => ',',
                    'P6C::Binop::l' => bless( {
                      'P6C::subscript_exp::subscripts' => [
                        bless( {
                          'P6C::indices::type' => 'PerlHash',
                          'P6C::indices::indices' => bless( {
                            'P6C::Binop::r' => bless( {
                              'P6C::sv_literal::lval' => '"RIGHT"',
                              'P6C::sv_literal::type' => 'PerlString'
                            }, 'P6C::sv_literal' ),
                            'P6C::Binop::op' => '||',
                            'P6C::Binop::l' => bless( {
                              'P6C::Binop::r' => bless( {
                                'P6C::sv_literal::lval' => '"LEFT"',
                                'P6C::sv_literal::type' => 'PerlString'
                              }, 'P6C::sv_literal' ),
                              'P6C::Binop::op' => '&&',
                              'P6C::Binop::l' => bless( {
                                'P6C::compare::seq' => [
                                  bless( {
                                    'P6C::subscript_exp::subscripts' => [
                                      bless( {
                                        'P6C::indices::type' => 'PerlArray',
                                        'P6C::indices::indices' => bless( {
                                          'P6C::sv_literal::lval' => '0',
                                          'P6C::sv_literal::type' => 'PerlInt'
                                        }, 'P6C::sv_literal' )
                                      }, 'P6C::indices' )
                                    ],
                                    'P6C::subscript_exp::thing' => bless( {
                                      'P6C::variable::type' => 'PerlArray',
                                      'P6C::variable::topical' => '',
                                      'P6C::variable::name' => '@_',
                                      'P6C::variable::global' => '',
                                      'P6C::variable::implicit' => 0
                                    }, 'P6C::variable' )
                                  }, 'P6C::subscript_exp' ),
                                  '<',
                                  bless( {
                                    'P6C::subscript_exp::subscripts' => [
                                      bless( {
                                        'P6C::indices::type' => 'PerlHash',
                                        'P6C::indices::indices' => bless( {
                                          'P6C::sv_literal::lval' => '"VALUE"',
                                          'P6C::sv_literal::type' => 'PerlString'
                                        }, 'P6C::sv_literal' )
                                      }, 'P6C::indices' )
                                    ],
                                    'P6C::subscript_exp::thing' => bless( {
                                      'P6C::variable::type' => 'PerlUndef',
                                      'P6C::variable::topical' => '',
                                      'P6C::variable::name' => '$tree',
                                      'P6C::variable::global' => '',
                                      'P6C::variable::implicit' => 0
                                    }, 'P6C::variable' )
                                  }, 'P6C::subscript_exp' )
                                ]
                              }, 'P6C::compare' )
                            }, 'P6C::Binop' )
                          }, 'P6C::Binop' )
                        }, 'P6C::indices' )
                      ],
                      'P6C::subscript_exp::thing' => bless( {
                        'P6C::variable::type' => 'PerlUndef',
                        'P6C::variable::topical' => '',
                        'P6C::variable::name' => '$tree',
                        'P6C::variable::global' => '',
                        'P6C::variable::implicit' => 0
                      }, 'P6C::variable' )
                    }, 'P6C::subscript_exp' )
                  }, 'P6C::Binop' )
                ]
              }, 'P6C::ValueList' )
            }, 'P6C::prefix' )
          }, 'P6C::prefix' ),
          'P6C::guard::name' => 'unless',
          'P6C::guard::test' => bless( {
            'P6C::compare::seq' => [
              bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlHash',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '"VALUE"',
                      'P6C::sv_literal::type' => 'PerlString'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlUndef',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '$tree',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' ),
              '==',
              bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '0',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' )
            ]
          }, 'P6C::compare' )
        }, 'P6C::guard' ),
        bless( {
          'P6C::prefix::name' => 'return',
          'P6C::prefix::args' => bless( {
            'P6C::variable::type' => 'PerlUndef',
            'P6C::variable::topical' => '',
            'P6C::variable::name' => '$tree',
            'P6C::variable::global' => '',
            'P6C::variable::implicit' => 0
          }, 'P6C::variable' )
        }, 'P6C::prefix' )
      ]
    }, 'P6C::closure' )
  }, 'P6C::sub_def' ),
  bless( {
    'P6C::directive::args' => undef,
    'P6C::directive::thing' => 'strict',
    'P6C::directive::name' => 'use'
  }, 'P6C::directive' ),
  bless( {
    'P6C::directive::args' => undef,
    'P6C::directive::thing' => 'warnings',
    'P6C::directive::name' => 'use'
  }, 'P6C::directive' ),
  bless( {
    'P6C::decl::qual' => bless( {
      'P6C::scope_class::scope' => 'my',
      'P6C::scope_class::class' => undef
    }, 'P6C::scope_class' ),
    'P6C::decl::vars' => [
      bless( {
        'P6C::variable::type' => 'PerlUndef',
        'P6C::variable::topical' => '',
        'P6C::variable::name' => '$root',
        'P6C::variable::global' => '',
        'P6C::variable::implicit' => 0
      }, 'P6C::variable' ),
      bless( {
        'P6C::variable::type' => 'PerlUndef',
        'P6C::variable::topical' => '',
        'P6C::variable::name' => '$n',
        'P6C::variable::global' => '',
        'P6C::variable::implicit' => 0
      }, 'P6C::variable' )
    ],
    'P6C::decl::props' => []
  }, 'P6C::decl' ),
  bless( {
    'P6C::prefix::name' => 'while',
    'P6C::prefix::args' => bless( {
      'P6C::ValueList::vals' => [
        bless( {
          'P6C::compare::seq' => [
            bless( {
              'P6C::incr::op' => '++',
              'P6C::incr::post' => 1,
              'P6C::incr::thing' => bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$n',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' )
            }, 'P6C::incr' ),
            '<',
            bless( {
              'P6C::sv_literal::lval' => '20',
              'P6C::sv_literal::type' => 'PerlInt'
            }, 'P6C::sv_literal' )
          ]
        }, 'P6C::compare' ),
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => [
            bless( {
              'P6C::prefix::name' => 'insert',
              'P6C::prefix::args' => bless( {
                'P6C::Binop::r' => bless( {
                  'P6C::prefix::name' => 'int',
                  'P6C::prefix::args' => bless( {
                    'P6C::prefix::name' => 'rand',
                    'P6C::prefix::args' => bless( {
                      'P6C::sv_literal::lval' => '1000',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::prefix' )
                }, 'P6C::prefix' ),
                'P6C::Binop::op' => ',',
                'P6C::Binop::l' => bless( {
                  'P6C::variable::type' => 'PerlUndef',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '$root',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::Binop' )
            }, 'P6C::prefix' )
          ]
        }, 'P6C::closure' )
      ]
    }, 'P6C::ValueList' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::Binop::r' => bless( {
      'P6C::Binop::r' => bless( {
        'P6C::sv_literal::lval' => '2',
        'P6C::sv_literal::type' => 'PerlInt'
      }, 'P6C::sv_literal' ),
      'P6C::Binop::op' => '..',
      'P6C::Binop::l' => bless( {
        'P6C::sv_literal::lval' => '0',
        'P6C::sv_literal::type' => 'PerlInt'
      }, 'P6C::sv_literal' )
    }, 'P6C::Binop' ),
    'P6C::Binop::op' => '=',
    'P6C::Binop::l' => bless( {
      'P6C::decl::qual' => bless( {
        'P6C::scope_class::scope' => 'my',
        'P6C::scope_class::class' => undef
      }, 'P6C::scope_class' ),
      'P6C::decl::vars' => [
        bless( {
          'P6C::variable::type' => 'PerlUndef',
          'P6C::variable::topical' => '',
          'P6C::variable::name' => '$pre',
          'P6C::variable::global' => '',
          'P6C::variable::implicit' => 0
        }, 'P6C::variable' ),
        bless( {
          'P6C::variable::type' => 'PerlUndef',
          'P6C::variable::topical' => '',
          'P6C::variable::name' => '$in',
          'P6C::variable::global' => '',
          'P6C::variable::implicit' => 0
        }, 'P6C::variable' ),
        bless( {
          'P6C::variable::type' => 'PerlUndef',
          'P6C::variable::topical' => '',
          'P6C::variable::name' => '$post',
          'P6C::variable::global' => '',
          'P6C::variable::implicit' => 0
        }, 'P6C::variable' )
      ],
      'P6C::decl::props' => []
    }, 'P6C::decl' )
  }, 'P6C::Binop' ),
  bless( {
    'P6C::prefix::name' => 'print',
    'P6C::prefix::args' => bless( {
      'P6C::sv_literal::lval' => '"Pre order:  "',
      'P6C::sv_literal::type' => 'PerlString'
    }, 'P6C::sv_literal' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'show',
    'P6C::prefix::args' => bless( {
      'P6C::Binop::r' => bless( {
        'P6C::variable::type' => 'PerlUndef',
        'P6C::variable::topical' => '',
        'P6C::variable::name' => '$pre',
        'P6C::variable::global' => '',
        'P6C::variable::implicit' => 0
      }, 'P6C::variable' ),
      'P6C::Binop::op' => ',',
      'P6C::Binop::l' => bless( {
        'P6C::variable::type' => 'PerlUndef',
        'P6C::variable::topical' => '',
        'P6C::variable::name' => '$root',
        'P6C::variable::global' => '',
        'P6C::variable::implicit' => 0
      }, 'P6C::variable' )
    }, 'P6C::Binop' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'print',
    'P6C::prefix::args' => bless( {
      'P6C::sv_literal::lval' => '" \\n"',
      'P6C::sv_literal::type' => 'PerlString'
    }, 'P6C::sv_literal' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'print',
    'P6C::prefix::args' => bless( {
      'P6C::sv_literal::lval' => '"In order:   "',
      'P6C::sv_literal::type' => 'PerlString'
    }, 'P6C::sv_literal' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'show',
    'P6C::prefix::args' => bless( {
      'P6C::Binop::r' => bless( {
        'P6C::variable::type' => 'PerlUndef',
        'P6C::variable::topical' => '',
        'P6C::variable::name' => '$in',
        'P6C::variable::global' => '',
        'P6C::variable::implicit' => 0
      }, 'P6C::variable' ),
      'P6C::Binop::op' => ',',
      'P6C::Binop::l' => bless( {
        'P6C::variable::type' => 'PerlUndef',
        'P6C::variable::topical' => '',
        'P6C::variable::name' => '$root',
        'P6C::variable::global' => '',
        'P6C::variable::implicit' => 0
      }, 'P6C::variable' )
    }, 'P6C::Binop' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'print',
    'P6C::prefix::args' => bless( {
      'P6C::sv_literal::lval' => '" \\n"',
      'P6C::sv_literal::type' => 'PerlString'
    }, 'P6C::sv_literal' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'print',
    'P6C::prefix::args' => bless( {
      'P6C::sv_literal::lval' => '"Post order: "',
      'P6C::sv_literal::type' => 'PerlString'
    }, 'P6C::sv_literal' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'show',
    'P6C::prefix::args' => bless( {
      'P6C::Binop::r' => bless( {
        'P6C::variable::type' => 'PerlUndef',
        'P6C::variable::topical' => '',
        'P6C::variable::name' => '$post',
        'P6C::variable::global' => '',
        'P6C::variable::implicit' => 0
      }, 'P6C::variable' ),
      'P6C::Binop::op' => ',',
      'P6C::Binop::l' => bless( {
        'P6C::variable::type' => 'PerlUndef',
        'P6C::variable::topical' => '',
        'P6C::variable::name' => '$root',
        'P6C::variable::global' => '',
        'P6C::variable::implicit' => 0
      }, 'P6C::variable' )
    }, 'P6C::Binop' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'print',
    'P6C::prefix::args' => bless( {
      'P6C::sv_literal::lval' => '" \\n"',
      'P6C::sv_literal::type' => 'PerlString'
    }, 'P6C::sv_literal' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'for',
    'P6C::prefix::args' => bless( {
      'P6C::ValueList::vals' => [
        bless( {
          'P6C::Binop::r' => bless( {
            'P6C::prefix::name' => 'print',
            'P6C::prefix::args' => bless( {
              'P6C::sv_literal::lval' => '"Search? "',
              'P6C::sv_literal::type' => 'PerlString'
            }, 'P6C::sv_literal' )
          }, 'P6C::prefix' ),
          'P6C::Binop::op' => ';',
          'P6C::Binop::l' => bless( {
            'P6C::Binop::r' => bless( {
              'P6C::prefix::name' => 'readline',
              'P6C::prefix::args' => bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$ARGS',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' )
            }, 'P6C::prefix' ),
            'P6C::Binop::op' => ';',
            'P6C::Binop::l' => bless( {
              'P6C::prefix::name' => 'print',
              'P6C::prefix::args' => bless( {
                'P6C::sv_literal::lval' => '"Search? "',
                'P6C::sv_literal::type' => 'PerlString'
              }, 'P6C::sv_literal' )
            }, 'P6C::prefix' )
          }, 'P6C::Binop' )
        }, 'P6C::Binop' ),
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => [
            bless( {
              'P6C::prefix::name' => 'if',
              'P6C::prefix::args' => [
                [
                  undef,
                  bless( {
                    'P6C::Binop::r' => bless( {
                      'P6C::prefix::name' => 'search',
                      'P6C::prefix::args' => bless( {
                        'P6C::ValueList::vals' => [
                          bless( {
                            'P6C::Binop::r' => bless( {
                              'P6C::variable::type' => 'PerlUndef',
                              'P6C::variable::topical' => '',
                              'P6C::variable::name' => '$_',
                              'P6C::variable::global' => '',
                              'P6C::variable::implicit' => 0
                            }, 'P6C::variable' ),
                            'P6C::Binop::op' => ',',
                            'P6C::Binop::l' => bless( {
                              'P6C::variable::type' => 'PerlUndef',
                              'P6C::variable::topical' => '',
                              'P6C::variable::name' => '$root',
                              'P6C::variable::global' => '',
                              'P6C::variable::implicit' => 0
                            }, 'P6C::variable' )
                          }, 'P6C::Binop' )
                        ]
                      }, 'P6C::ValueList' )
                    }, 'P6C::prefix' ),
                    'P6C::Binop::op' => '=',
                    'P6C::Binop::l' => bless( {
                      'P6C::decl::qual' => bless( {
                        'P6C::scope_class::scope' => 'my',
                        'P6C::scope_class::class' => undef
                      }, 'P6C::scope_class' ),
                      'P6C::decl::vars' => bless( {
                        'P6C::variable::type' => 'PerlUndef',
                        'P6C::variable::topical' => '',
                        'P6C::variable::name' => '$node',
                        'P6C::variable::global' => '',
                        'P6C::variable::implicit' => 0
                      }, 'P6C::variable' ),
                      'P6C::decl::props' => []
                    }, 'P6C::decl' )
                  }, 'P6C::Binop' ),
                  bless( {
                    'P6C::closure::params' => undef,
                    'P6C::closure::block' => [
                      bless( {
                        'P6C::prefix::name' => 'print',
                        'P6C::prefix::args' => bless( {
                          'P6C::sv_literal::lval' => '"Found $_ at $node: $node{VALUE}\\n"',
                          'P6C::sv_literal::type' => 'PerlString'
                        }, 'P6C::sv_literal' )
                      }, 'P6C::prefix' ),
                      bless( {
                        'P6C::guard::expr' => bless( {
                          'P6C::prefix::name' => 'print',
                          'P6C::prefix::args' => bless( {
                            'P6C::sv_literal::lval' => '"(again!)\\n"',
                            'P6C::sv_literal::type' => 'PerlString'
                          }, 'P6C::sv_literal' )
                        }, 'P6C::prefix' ),
                        'P6C::guard::name' => 'if',
                        'P6C::guard::test' => bless( {
                          'P6C::compare::seq' => [
                            bless( {
                              'P6C::subscript_exp::subscripts' => [
                                bless( {
                                  'P6C::indices::type' => 'PerlHash',
                                  'P6C::indices::indices' => bless( {
                                    'P6C::sv_literal::lval' => '"FOUND"',
                                    'P6C::sv_literal::type' => 'PerlString'
                                  }, 'P6C::sv_literal' )
                                }, 'P6C::indices' )
                              ],
                              'P6C::subscript_exp::thing' => bless( {
                                'P6C::variable::type' => 'PerlUndef',
                                'P6C::variable::topical' => '',
                                'P6C::variable::name' => '$node',
                                'P6C::variable::global' => '',
                                'P6C::variable::implicit' => 0
                              }, 'P6C::variable' )
                            }, 'P6C::subscript_exp' ),
                            '>',
                            bless( {
                              'P6C::sv_literal::lval' => '1',
                              'P6C::sv_literal::type' => 'PerlInt'
                            }, 'P6C::sv_literal' )
                          ]
                        }, 'P6C::compare' )
                      }, 'P6C::guard' )
                    ]
                  }, 'P6C::closure' )
                ],
                [
                  'else',
                  1,
                  bless( {
                    'P6C::closure::params' => undef,
                    'P6C::closure::block' => [
                      bless( {
                        'P6C::prefix::name' => 'print',
                        'P6C::prefix::args' => bless( {
                          'P6C::sv_literal::lval' => '"No $_ in tree\\n"',
                          'P6C::sv_literal::type' => 'PerlString'
                        }, 'P6C::sv_literal' )
                      }, 'P6C::prefix' )
                    ]
                  }, 'P6C::closure' )
                ]
              ]
            }, 'P6C::prefix' )
          ]
        }, 'P6C::closure' )
      ]
    }, 'P6C::ValueList' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::sub_def::props' => [],
    'P6C::sub_def::qual' => undef,
    'P6C::sub_def::name' => 'insert',
    'P6C::sub_def::closure' => bless( {
      'P6C::closure::params' => undef,
      'P6C::closure::block' => [
        bless( {
          'P6C::prefix::name' => 'unless',
          'P6C::prefix::args' => [
            [
              undef,
              bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '0',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' ),
              bless( {
                'P6C::closure::params' => undef,
                'P6C::closure::block' => [
                  bless( {
                    'P6C::prefix::name' => 'return',
                    'P6C::prefix::args' => bless( {
                      'P6C::ValueList::vals' => []
                    }, 'P6C::ValueList' )
                  }, 'P6C::prefix' )
                ]
              }, 'P6C::closure' )
            ]
          ]
        }, 'P6C::prefix' ),
        bless( {
          'P6C::prefix::name' => 'if',
          'P6C::prefix::args' => [
            [
              undef,
              bless( {
                'P6C::compare::seq' => [
                  bless( {
                    'P6C::subscript_exp::subscripts' => [
                      bless( {
                        'P6C::indices::type' => 'PerlArray',
                        'P6C::indices::indices' => bless( {
                          'P6C::sv_literal::lval' => '0',
                          'P6C::sv_literal::type' => 'PerlInt'
                        }, 'P6C::sv_literal' )
                      }, 'P6C::indices' ),
                      bless( {
                        'P6C::indices::type' => 'PerlHash',
                        'P6C::indices::indices' => bless( {
                          'P6C::sv_literal::lval' => '"VALUE"',
                          'P6C::sv_literal::type' => 'PerlString'
                        }, 'P6C::sv_literal' )
                      }, 'P6C::indices' )
                    ],
                    'P6C::subscript_exp::thing' => bless( {
                      'P6C::variable::type' => 'PerlArray',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '@_',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' )
                  }, 'P6C::subscript_exp' ),
                  '>',
                  bless( {
                    'P6C::subscript_exp::subscripts' => [
                      bless( {
                        'P6C::indices::type' => 'PerlArray',
                        'P6C::indices::indices' => bless( {
                          'P6C::sv_literal::lval' => '1',
                          'P6C::sv_literal::type' => 'PerlInt'
                        }, 'P6C::sv_literal' )
                      }, 'P6C::indices' )
                    ],
                    'P6C::subscript_exp::thing' => bless( {
                      'P6C::variable::type' => 'PerlArray',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '@_',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' )
                  }, 'P6C::subscript_exp' )
                ]
              }, 'P6C::compare' ),
              bless( {
                'P6C::closure::params' => undef,
                'P6C::closure::block' => [
                  bless( {
                    'P6C::prefix::name' => 'insert',
                    'P6C::prefix::args' => bless( {
                      'P6C::Binop::r' => bless( {
                        'P6C::subscript_exp::subscripts' => [
                          bless( {
                            'P6C::indices::type' => 'PerlArray',
                            'P6C::indices::indices' => bless( {
                              'P6C::sv_literal::lval' => '1',
                              'P6C::sv_literal::type' => 'PerlInt'
                            }, 'P6C::sv_literal' )
                          }, 'P6C::indices' )
                        ],
                        'P6C::subscript_exp::thing' => bless( {
                          'P6C::variable::type' => 'PerlArray',
                          'P6C::variable::topical' => '',
                          'P6C::variable::name' => '@_',
                          'P6C::variable::global' => '',
                          'P6C::variable::implicit' => 0
                        }, 'P6C::variable' )
                      }, 'P6C::subscript_exp' ),
                      'P6C::Binop::op' => ',',
                      'P6C::Binop::l' => bless( {
                        'P6C::subscript_exp::subscripts' => [
                          bless( {
                            'P6C::indices::type' => 'PerlArray',
                            'P6C::indices::indices' => bless( {
                              'P6C::sv_literal::lval' => '0',
                              'P6C::sv_literal::type' => 'PerlInt'
                            }, 'P6C::sv_literal' )
                          }, 'P6C::indices' ),
                          bless( {
                            'P6C::indices::type' => 'PerlHash',
                            'P6C::indices::indices' => bless( {
                              'P6C::sv_literal::lval' => '"LEFT"',
                              'P6C::sv_literal::type' => 'PerlString'
                            }, 'P6C::sv_literal' )
                          }, 'P6C::indices' )
                        ],
                        'P6C::subscript_exp::thing' => bless( {
                          'P6C::variable::type' => 'PerlArray',
                          'P6C::variable::topical' => '',
                          'P6C::variable::name' => '@_',
                          'P6C::variable::global' => '',
                          'P6C::variable::implicit' => 0
                        }, 'P6C::variable' )
                      }, 'P6C::subscript_exp' )
                    }, 'P6C::Binop' )
                  }, 'P6C::prefix' )
                ]
              }, 'P6C::closure' )
            ],
            [
              'elsif',
              bless( {
                'P6C::compare::seq' => [
                  bless( {
                    'P6C::subscript_exp::subscripts' => [
                      bless( {
                        'P6C::indices::type' => 'PerlArray',
                        'P6C::indices::indices' => bless( {
                          'P6C::sv_literal::lval' => '0',
                          'P6C::sv_literal::type' => 'PerlInt'
                        }, 'P6C::sv_literal' )
                      }, 'P6C::indices' ),
                      bless( {
                        'P6C::indices::type' => 'PerlHash',
                        'P6C::indices::indices' => bless( {
                          'P6C::sv_literal::lval' => '"VALUE"',
                          'P6C::sv_literal::type' => 'PerlString'
                        }, 'P6C::sv_literal' )
                      }, 'P6C::indices' )
                    ],
                    'P6C::subscript_exp::thing' => bless( {
                      'P6C::variable::type' => 'PerlArray',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '@_',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' )
                  }, 'P6C::subscript_exp' ),
                  '<',
                  bless( {
                    'P6C::subscript_exp::subscripts' => [
                      bless( {
                        'P6C::indices::type' => 'PerlArray',
                        'P6C::indices::indices' => bless( {
                          'P6C::sv_literal::lval' => '1',
                          'P6C::sv_literal::type' => 'PerlInt'
                        }, 'P6C::sv_literal' )
                      }, 'P6C::indices' )
                    ],
                    'P6C::subscript_exp::thing' => bless( {
                      'P6C::variable::type' => 'PerlArray',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '@_',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' )
                  }, 'P6C::subscript_exp' )
                ]
              }, 'P6C::compare' ),
              bless( {
                'P6C::closure::params' => undef,
                'P6C::closure::block' => [
                  bless( {
                    'P6C::prefix::name' => 'insert',
                    'P6C::prefix::args' => bless( {
                      'P6C::Binop::r' => bless( {
                        'P6C::subscript_exp::subscripts' => [
                          bless( {
                            'P6C::indices::type' => 'PerlArray',
                            'P6C::indices::indices' => bless( {
                              'P6C::sv_literal::lval' => '1',
                              'P6C::sv_literal::type' => 'PerlInt'
                            }, 'P6C::sv_literal' )
                          }, 'P6C::indices' )
                        ],
                        'P6C::subscript_exp::thing' => bless( {
                          'P6C::variable::type' => 'PerlArray',
                          'P6C::variable::topical' => '',
                          'P6C::variable::name' => '@_',
                          'P6C::variable::global' => '',
                          'P6C::variable::implicit' => 0
                        }, 'P6C::variable' )
                      }, 'P6C::subscript_exp' ),
                      'P6C::Binop::op' => ',',
                      'P6C::Binop::l' => bless( {
                        'P6C::subscript_exp::subscripts' => [
                          bless( {
                            'P6C::indices::type' => 'PerlArray',
                            'P6C::indices::indices' => bless( {
                              'P6C::sv_literal::lval' => '0',
                              'P6C::sv_literal::type' => 'PerlInt'
                            }, 'P6C::sv_literal' )
                          }, 'P6C::indices' ),
                          bless( {
                            'P6C::indices::type' => 'PerlHash',
                            'P6C::indices::indices' => bless( {
                              'P6C::sv_literal::lval' => '"RIGHT"',
                              'P6C::sv_literal::type' => 'PerlString'
                            }, 'P6C::sv_literal' )
                          }, 'P6C::indices' )
                        ],
                        'P6C::subscript_exp::thing' => bless( {
                          'P6C::variable::type' => 'PerlArray',
                          'P6C::variable::topical' => '',
                          'P6C::variable::name' => '@_',
                          'P6C::variable::global' => '',
                          'P6C::variable::implicit' => 0
                        }, 'P6C::variable' )
                      }, 'P6C::subscript_exp' )
                    }, 'P6C::Binop' )
                  }, 'P6C::prefix' )
                ]
              }, 'P6C::closure' )
            ],
            [
              'else',
              1,
              bless( {
                'P6C::closure::params' => undef,
                'P6C::closure::block' => [
                  bless( {
                    'P6C::prefix::name' => 'warn',
                    'P6C::prefix::args' => bless( {
                      'P6C::sv_literal::lval' => '"dup insert of @_[1]\\n"',
                      'P6C::sv_literal::type' => 'PerlString'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::prefix' )
                ]
              }, 'P6C::closure' )
            ]
          ]
        }, 'P6C::prefix' )
      ]
    }, 'P6C::closure' )
  }, 'P6C::sub_def' ),
  bless( {
    'P6C::sub_def::props' => [],
    'P6C::sub_def::qual' => undef,
    'P6C::sub_def::name' => 'show',
    'P6C::sub_def::closure' => bless( {
      'P6C::closure::params' => undef,
      'P6C::closure::block' => [
        bless( {
          'P6C::guard::expr' => bless( {
            'P6C::prefix::name' => 'return',
            'P6C::prefix::args' => bless( {
              'P6C::ValueList::vals' => []
            }, 'P6C::ValueList' )
          }, 'P6C::prefix' ),
          'P6C::guard::name' => 'unless',
          'P6C::guard::test' => bless( {
            'P6C::subscript_exp::subscripts' => [
              bless( {
                'P6C::indices::type' => 'PerlArray',
                'P6C::indices::indices' => bless( {
                  'P6C::sv_literal::lval' => '0',
                  'P6C::sv_literal::type' => 'PerlInt'
                }, 'P6C::sv_literal' )
              }, 'P6C::indices' )
            ],
            'P6C::subscript_exp::thing' => bless( {
              'P6C::variable::type' => 'PerlArray',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '@_',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          }, 'P6C::subscript_exp' )
        }, 'P6C::guard' ),
        bless( {
          'P6C::guard::expr' => bless( {
            'P6C::prefix::name' => 'show',
            'P6C::prefix::args' => bless( {
              'P6C::Binop::r' => bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '1',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' ),
              'P6C::Binop::op' => ',',
              'P6C::Binop::l' => bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '0',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' ),
                  bless( {
                    'P6C::indices::type' => 'PerlHash',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '"LEFT"',
                      'P6C::sv_literal::type' => 'PerlString'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' )
            }, 'P6C::Binop' )
          }, 'P6C::prefix' ),
          'P6C::guard::name' => 'unless',
          'P6C::guard::test' => bless( {
            'P6C::compare::seq' => [
              bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '1',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' ),
              '==',
              bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$post',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' )
            ]
          }, 'P6C::compare' )
        }, 'P6C::guard' ),
        bless( {
          'P6C::guard::expr' => bless( {
            'P6C::prefix::name' => 'show',
            'P6C::prefix::args' => bless( {
              'P6C::Binop::r' => bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '1',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' ),
              'P6C::Binop::op' => ',',
              'P6C::Binop::l' => bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '0',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' ),
                  bless( {
                    'P6C::indices::type' => 'PerlHash',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '"RIGHT"',
                      'P6C::sv_literal::type' => 'PerlString'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' )
            }, 'P6C::Binop' )
          }, 'P6C::prefix' ),
          'P6C::guard::name' => 'if',
          'P6C::guard::test' => bless( {
            'P6C::compare::seq' => [
              bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '1',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' ),
              '==',
              bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$pre',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' )
            ]
          }, 'P6C::compare' )
        }, 'P6C::guard' ),
        bless( {
          'P6C::prefix::name' => 'print',
          'P6C::prefix::args' => bless( {
            'P6C::subscript_exp::subscripts' => [
              bless( {
                'P6C::indices::type' => 'PerlArray',
                'P6C::indices::indices' => bless( {
                  'P6C::sv_literal::lval' => '0',
                  'P6C::sv_literal::type' => 'PerlInt'
                }, 'P6C::sv_literal' )
              }, 'P6C::indices' ),
              bless( {
                'P6C::indices::type' => 'PerlHash',
                'P6C::indices::indices' => bless( {
                  'P6C::sv_literal::lval' => '"VALUE"',
                  'P6C::sv_literal::type' => 'PerlString'
                }, 'P6C::sv_literal' )
              }, 'P6C::indices' )
            ],
            'P6C::subscript_exp::thing' => bless( {
              'P6C::variable::type' => 'PerlArray',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '@_',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          }, 'P6C::subscript_exp' )
        }, 'P6C::prefix' ),
        bless( {
          'P6C::guard::expr' => bless( {
            'P6C::prefix::name' => 'show',
            'P6C::prefix::args' => bless( {
              'P6C::Binop::r' => bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '1',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' ),
              'P6C::Binop::op' => ',',
              'P6C::Binop::l' => bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '0',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' ),
                  bless( {
                    'P6C::indices::type' => 'PerlHash',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '"LEFT"',
                      'P6C::sv_literal::type' => 'PerlString'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' )
            }, 'P6C::Binop' )
          }, 'P6C::prefix' ),
          'P6C::guard::name' => 'if',
          'P6C::guard::test' => bless( {
            'P6C::compare::seq' => [
              bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '1',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' ),
              '==',
              bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$post',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' )
            ]
          }, 'P6C::compare' )
        }, 'P6C::guard' ),
        bless( {
          'P6C::guard::expr' => bless( {
            'P6C::prefix::name' => 'show',
            'P6C::prefix::args' => bless( {
              'P6C::Binop::r' => bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '1',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' ),
              'P6C::Binop::op' => ',',
              'P6C::Binop::l' => bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '0',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' ),
                  bless( {
                    'P6C::indices::type' => 'PerlHash',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '"RIGHT"',
                      'P6C::sv_literal::type' => 'PerlString'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' )
            }, 'P6C::Binop' )
          }, 'P6C::prefix' ),
          'P6C::guard::name' => 'unless',
          'P6C::guard::test' => bless( {
            'P6C::compare::seq' => [
              bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '1',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' ),
              '==',
              bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$pre',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' )
            ]
          }, 'P6C::compare' )
        }, 'P6C::guard' )
      ]
    }, 'P6C::closure' )
  }, 'P6C::sub_def' ),
  bless( {
    'P6C::sub_def::props' => [],
    'P6C::sub_def::qual' => undef,
    'P6C::sub_def::name' => 'search',
    'P6C::sub_def::closure' => bless( {
      'P6C::closure::params' => undef,
      'P6C::closure::block' => [
        bless( {
          'P6C::guard::expr' => bless( {
            'P6C::prefix::name' => 'return',
            'P6C::prefix::args' => bless( {
              'P6C::ValueList::vals' => []
            }, 'P6C::ValueList' )
          }, 'P6C::prefix' ),
          'P6C::guard::name' => 'unless',
          'P6C::guard::test' => bless( {
            'P6C::subscript_exp::subscripts' => [
              bless( {
                'P6C::indices::type' => 'PerlArray',
                'P6C::indices::indices' => bless( {
                  'P6C::sv_literal::lval' => '0',
                  'P6C::sv_literal::type' => 'PerlInt'
                }, 'P6C::sv_literal' )
              }, 'P6C::indices' )
            ],
            'P6C::subscript_exp::thing' => bless( {
              'P6C::variable::type' => 'PerlArray',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '@_',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          }, 'P6C::subscript_exp' )
        }, 'P6C::guard' ),
        bless( {
          'P6C::guard::expr' => bless( {
            'P6C::prefix::name' => 'return',
            'P6C::prefix::args' => bless( {
              'P6C::prefix::name' => 'search',
              'P6C::prefix::args' => bless( {
                'P6C::Binop::r' => bless( {
                  'P6C::subscript_exp::subscripts' => [
                    bless( {
                      'P6C::indices::type' => 'PerlArray',
                      'P6C::indices::indices' => bless( {
                        'P6C::sv_literal::lval' => '1',
                        'P6C::sv_literal::type' => 'PerlInt'
                      }, 'P6C::sv_literal' )
                    }, 'P6C::indices' )
                  ],
                  'P6C::subscript_exp::thing' => bless( {
                    'P6C::variable::type' => 'PerlArray',
                    'P6C::variable::topical' => '',
                    'P6C::variable::name' => '@_',
                    'P6C::variable::global' => '',
                    'P6C::variable::implicit' => 0
                  }, 'P6C::variable' )
                }, 'P6C::subscript_exp' ),
                'P6C::Binop::op' => ',',
                'P6C::Binop::l' => bless( {
                  'P6C::subscript_exp::subscripts' => [
                    bless( {
                      'P6C::indices::type' => 'PerlArray',
                      'P6C::indices::indices' => bless( {
                        'P6C::sv_literal::lval' => '0',
                        'P6C::sv_literal::type' => 'PerlInt'
                      }, 'P6C::sv_literal' )
                    }, 'P6C::indices' ),
                    bless( {
                      'P6C::indices::type' => 'PerlHash',
                      'P6C::indices::indices' => bless( {
                        'P6C::Binop::r' => bless( {
                          'P6C::sv_literal::lval' => '"RIGHT"',
                          'P6C::sv_literal::type' => 'PerlString'
                        }, 'P6C::sv_literal' ),
                        'P6C::Binop::op' => '||',
                        'P6C::Binop::l' => bless( {
                          'P6C::Binop::r' => bless( {
                            'P6C::sv_literal::lval' => '"LEFT"',
                            'P6C::sv_literal::type' => 'PerlString'
                          }, 'P6C::sv_literal' ),
                          'P6C::Binop::op' => '&&',
                          'P6C::Binop::l' => bless( {
                            'P6C::compare::seq' => [
                              bless( {
                                'P6C::subscript_exp::subscripts' => [
                                  bless( {
                                    'P6C::indices::type' => 'PerlArray',
                                    'P6C::indices::indices' => bless( {
                                      'P6C::sv_literal::lval' => '1',
                                      'P6C::sv_literal::type' => 'PerlInt'
                                    }, 'P6C::sv_literal' )
                                  }, 'P6C::indices' )
                                ],
                                'P6C::subscript_exp::thing' => bless( {
                                  'P6C::variable::type' => 'PerlArray',
                                  'P6C::variable::topical' => '',
                                  'P6C::variable::name' => '@_',
                                  'P6C::variable::global' => '',
                                  'P6C::variable::implicit' => 0
                                }, 'P6C::variable' )
                              }, 'P6C::subscript_exp' ),
                              '<',
                              bless( {
                                'P6C::subscript_exp::subscripts' => [
                                  bless( {
                                    'P6C::indices::type' => 'PerlArray',
                                    'P6C::indices::indices' => bless( {
                                      'P6C::sv_literal::lval' => '0',
                                      'P6C::sv_literal::type' => 'PerlInt'
                                    }, 'P6C::sv_literal' )
                                  }, 'P6C::indices' ),
                                  bless( {
                                    'P6C::indices::type' => 'PerlHash',
                                    'P6C::indices::indices' => bless( {
                                      'P6C::sv_literal::lval' => '"VALUE"',
                                      'P6C::sv_literal::type' => 'PerlString'
                                    }, 'P6C::sv_literal' )
                                  }, 'P6C::indices' )
                                ],
                                'P6C::subscript_exp::thing' => bless( {
                                  'P6C::variable::type' => 'PerlArray',
                                  'P6C::variable::topical' => '',
                                  'P6C::variable::name' => '@_',
                                  'P6C::variable::global' => '',
                                  'P6C::variable::implicit' => 0
                                }, 'P6C::variable' )
                              }, 'P6C::subscript_exp' )
                            ]
                          }, 'P6C::compare' )
                        }, 'P6C::Binop' )
                      }, 'P6C::Binop' )
                    }, 'P6C::indices' )
                  ],
                  'P6C::subscript_exp::thing' => bless( {
                    'P6C::variable::type' => 'PerlArray',
                    'P6C::variable::topical' => '',
                    'P6C::variable::name' => '@_',
                    'P6C::variable::global' => '',
                    'P6C::variable::implicit' => 0
                  }, 'P6C::variable' )
                }, 'P6C::subscript_exp' )
              }, 'P6C::Binop' )
            }, 'P6C::prefix' )
          }, 'P6C::prefix' ),
          'P6C::guard::name' => 'unless',
          'P6C::guard::test' => bless( {
            'P6C::compare::seq' => [
              bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '0',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' ),
                  bless( {
                    'P6C::indices::type' => 'PerlHash',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '"VALUE"',
                      'P6C::sv_literal::type' => 'PerlString'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' ),
              '==',
              bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlArray',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '1',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@_',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' )
            ]
          }, 'P6C::compare' )
        }, 'P6C::guard' ),
        bless( {
          'P6C::incr::op' => '++',
          'P6C::incr::post' => 1,
          'P6C::incr::thing' => bless( {
            'P6C::subscript_exp::subscripts' => [
              bless( {
                'P6C::indices::type' => 'PerlArray',
                'P6C::indices::indices' => bless( {
                  'P6C::sv_literal::lval' => '0',
                  'P6C::sv_literal::type' => 'PerlInt'
                }, 'P6C::sv_literal' )
              }, 'P6C::indices' ),
              bless( {
                'P6C::indices::type' => 'PerlHash',
                'P6C::indices::indices' => bless( {
                  'P6C::sv_literal::lval' => '"FOUND"',
                  'P6C::sv_literal::type' => 'PerlString'
                }, 'P6C::sv_literal' )
              }, 'P6C::indices' )
            ],
            'P6C::subscript_exp::thing' => bless( {
              'P6C::variable::type' => 'PerlArray',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '@_',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          }, 'P6C::subscript_exp' )
        }, 'P6C::incr' ),
        bless( {
          'P6C::prefix::name' => 'return',
          'P6C::prefix::args' => bless( {
            'P6C::subscript_exp::subscripts' => [
              bless( {
                'P6C::indices::type' => 'PerlArray',
                'P6C::indices::indices' => bless( {
                  'P6C::sv_literal::lval' => '0',
                  'P6C::sv_literal::type' => 'PerlInt'
                }, 'P6C::sv_literal' )
              }, 'P6C::indices' )
            ],
            'P6C::subscript_exp::thing' => bless( {
              'P6C::variable::type' => 'PerlArray',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '@_',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          }, 'P6C::subscript_exp' )
        }, 'P6C::prefix' )
      ]
    }, 'P6C::closure' )
  }, 'P6C::sub_def' ),
  bless( {
    'P6C::sub_def::props' => [],
    'P6C::sub_def::qual' => undef,
    'P6C::sub_def::name' => 'load_data',
    'P6C::sub_def::closure' => bless( {
      'P6C::closure::params' => bless( {
        'P6C::params::req' => [
          bless( {
            'P6C::param::init' => undef,
            'P6C::param::props' => [],
            'P6C::param::qual' => undef,
            'P6C::param::var' => bless( {
              'P6C::variable::type' => 'PerlUndef',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '$filename',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          }, 'P6C::param' )
        ],
        'P6C::params::rest' => bless( {
          'P6C::param::init' => undef,
          'P6C::param::props' => [],
          'P6C::param::qual' => undef,
          'P6C::param::var' => bless( {
            'P6C::variable::type' => 'PerlArray',
            'P6C::variable::topical' => undef,
            'P6C::variable::name' => '@dirpath',
            'P6C::variable::global' => undef,
            'P6C::variable::implicit' => undef
          }, 'P6C::variable' )
        }, 'P6C::param' ),
        'P6C::params::opt' => [
          bless( {
            'P6C::param::init' => undef,
            'P6C::param::props' => [],
            'P6C::param::qual' => undef,
            'P6C::param::var' => bless( {
              'P6C::variable::type' => 'PerlUndef',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '$version',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          }, 'P6C::param' )
        ]
      }, 'P6C::params' ),
      'P6C::closure::block' => [
        bless( {
          'P6C::Binop::r' => bless( {
            'P6C::sv_literal::lval' => '1',
            'P6C::sv_literal::type' => 'PerlInt'
          }, 'P6C::sv_literal' ),
          'P6C::Binop::op' => '//=',
          'P6C::Binop::l' => bless( {
            'P6C::variable::type' => 'PerlUndef',
            'P6C::variable::topical' => '',
            'P6C::variable::name' => '$version',
            'P6C::variable::global' => '',
            'P6C::variable::implicit' => 0
          }, 'P6C::variable' )
        }, 'P6C::Binop' ),
        bless( {
          'P6C::Binop::r' => bless( {
            'P6C::Binop::r' => bless( {
              'P6C::sv_literal::lval' => '"."',
              'P6C::sv_literal::type' => 'PerlString'
            }, 'P6C::sv_literal' ),
            'P6C::Binop::op' => '//',
            'P6C::Binop::l' => bless( {
              'P6C::Binop::r' => bless( {
                'P6C::variable::type' => 'PerlArray',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '@std_dirpath',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' ),
              'P6C::Binop::op' => '//',
              'P6C::Binop::l' => bless( {
                'P6C::variable::type' => 'PerlArray',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '@last_dirpath',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' )
            }, 'P6C::Binop' )
          }, 'P6C::Binop' ),
          'P6C::Binop::op' => '//=',
          'P6C::Binop::l' => bless( {
            'P6C::variable::type' => 'PerlArray',
            'P6C::variable::topical' => '',
            'P6C::variable::name' => '@dirpath',
            'P6C::variable::global' => '',
            'P6C::variable::implicit' => 0
          }, 'P6C::variable' )
        }, 'P6C::Binop' ),
        bless( {
          'P6C::Binop::r' => bless( {
            'P6C::sv_literal::lval' => '"([^/])$"',
            'P6C::sv_literal::type' => 'PerlString'
          }, 'P6C::sv_literal' ),
          'P6C::Binop::op' => bless( {
            'P6C::hype::op' => '=~'
          }, 'P6C::hype' ),
          'P6C::Binop::l' => bless( {
            'P6C::variable::type' => 'PerlArray',
            'P6C::variable::topical' => '',
            'P6C::variable::name' => '@dirpath',
            'P6C::variable::global' => '',
            'P6C::variable::implicit' => 0
          }, 'P6C::variable' )
        }, 'P6C::Binop' ),
        bless( {
          'P6C::decl::qual' => bless( {
            'P6C::scope_class::scope' => 'my',
            'P6C::scope_class::class' => undef
          }, 'P6C::scope_class' ),
          'P6C::decl::vars' => bless( {
            'P6C::variable::type' => 'PerlHash',
            'P6C::variable::topical' => '',
            'P6C::variable::name' => '%data',
            'P6C::variable::global' => '',
            'P6C::variable::implicit' => 0
          }, 'P6C::variable' ),
          'P6C::decl::props' => []
        }, 'P6C::decl' ),
        bless( {
          'P6C::prefix::name' => 'foreach',
          'P6C::prefix::args' => bless( {
            'P6C::ValueList::vals' => [
              bless( {
                'P6C::decl::qual' => bless( {
                  'P6C::scope_class::scope' => 'my',
                  'P6C::scope_class::class' => undef
                }, 'P6C::scope_class' ),
                'P6C::decl::vars' => [
                  bless( {
                    'P6C::variable::type' => 'PerlUndef',
                    'P6C::variable::topical' => '',
                    'P6C::variable::name' => '$prefix',
                    'P6C::variable::global' => '',
                    'P6C::variable::implicit' => 0
                  }, 'P6C::variable' )
                ],
                'P6C::decl::props' => []
              }, 'P6C::decl' ),
              bless( {
                'P6C::variable::type' => 'PerlArray',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '@dirpath',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' ),
              [
                bless( {
                  'P6C::Binop::r' => bless( {
                    'P6C::Binop::r' => bless( {
                      'P6C::variable::type' => 'PerlUndef',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '$filename',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' ),
                    'P6C::Binop::op' => '_',
                    'P6C::Binop::l' => bless( {
                      'P6C::variable::type' => 'PerlUndef',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '$prefix',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' )
                  }, 'P6C::Binop' ),
                  'P6C::Binop::op' => '=',
                  'P6C::Binop::l' => bless( {
                    'P6C::decl::qual' => bless( {
                      'P6C::scope_class::scope' => 'my',
                      'P6C::scope_class::class' => undef
                    }, 'P6C::scope_class' ),
                    'P6C::decl::vars' => bless( {
                      'P6C::variable::type' => 'PerlUndef',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '$filepath',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' ),
                    'P6C::decl::props' => []
                  }, 'P6C::decl' )
                }, 'P6C::Binop' ),
                bless( {
                  'P6C::prefix::name' => 'if',
                  'P6C::prefix::args' => [
                    [
                      undef,
                      bless( {
                        'P6C::Binop::r' => bless( {
                          'P6C::compare::seq' => [
                            bless( {
                              'P6C::sv_literal::lval' => '100',
                              'P6C::sv_literal::type' => 'PerlInt'
                            }, 'P6C::sv_literal' ),
                            '<',
                            bless( {
                              'P6C::prefix::name' => '-s',
                              'P6C::prefix::args' => bless( {
                                'P6C::variable::type' => 'PerlUndef',
                                'P6C::variable::topical' => '',
                                'P6C::variable::name' => '$filepath',
                                'P6C::variable::global' => '',
                                'P6C::variable::implicit' => 0
                              }, 'P6C::variable' )
                            }, 'P6C::prefix' ),
                            '<=',
                            bless( {
                              'P6C::sv_literal::lval' => '1e6',
                              'P6C::sv_literal::type' => 'PerlInt'
                            }, 'P6C::sv_literal' )
                          ]
                        }, 'P6C::compare' ),
                        'P6C::Binop::op' => 'and',
                        'P6C::Binop::l' => bless( {
                          'P6C::prefix::name' => '-w',
                          'P6C::prefix::args' => bless( {
                            'P6C::prefix::name' => '-r',
                            'P6C::prefix::args' => bless( {
                              'P6C::prefix::name' => '-e',
                              'P6C::prefix::args' => bless( {
                                'P6C::variable::type' => 'PerlUndef',
                                'P6C::variable::topical' => '',
                                'P6C::variable::name' => '$filepath',
                                'P6C::variable::global' => '',
                                'P6C::variable::implicit' => 0
                              }, 'P6C::variable' )
                            }, 'P6C::prefix' )
                          }, 'P6C::prefix' )
                        }, 'P6C::prefix' )
                      }, 'P6C::Binop' ),
                      bless( {
                        'P6C::closure::params' => undef,
                        'P6C::closure::block' => [
                          bless( {
                            'P6C::Binop::r' => bless( {
                              'P6C::prefix::name' => 'die',
                              'P6C::prefix::args' => bless( {
                                'P6C::sv_literal::lval' => '"Something screwy with $filepath: $!"',
                                'P6C::sv_literal::type' => 'PerlString'
                              }, 'P6C::sv_literal' )
                            }, 'P6C::prefix' ),
                            'P6C::Binop::op' => 'or',
                            'P6C::Binop::l' => bless( {
                              'P6C::adverb::thing' => bless( {
                                'P6C::Binop::r' => bless( {
                                  'P6C::prefix::name' => 'open',
                                  'P6C::prefix::args' => bless( {
                                    'P6C::variable::type' => 'PerlUndef',
                                    'P6C::variable::topical' => '',
                                    'P6C::variable::name' => '$filepath',
                                    'P6C::variable::global' => '',
                                    'P6C::variable::implicit' => 0
                                  }, 'P6C::variable' )
                                }, 'P6C::prefix' ),
                                'P6C::Binop::op' => '=',
                                'P6C::Binop::l' => bless( {
                                  'P6C::decl::qual' => bless( {
                                    'P6C::scope_class::scope' => 'my',
                                    'P6C::scope_class::class' => undef
                                  }, 'P6C::scope_class' ),
                                  'P6C::decl::vars' => bless( {
                                    'P6C::variable::type' => 'PerlUndef',
                                    'P6C::variable::topical' => '',
                                    'P6C::variable::name' => '$fh',
                                    'P6C::variable::global' => '',
                                    'P6C::variable::implicit' => 0
                                  }, 'P6C::variable' ),
                                  'P6C::decl::props' => []
                                }, 'P6C::decl' )
                              }, 'P6C::Binop' ),
                              'P6C::adverb::adv' => bless( {
                                'P6C::pair::l' => 'mode',
                                'P6C::pair::r' => bless( {
                                  'P6C::sv_literal::lval' => '"rw"',
                                  'P6C::sv_literal::type' => 'PerlString'
                                }, 'P6C::sv_literal' )
                              }, 'P6C::pair' )
                            }, 'P6C::adverb' )
                          }, 'P6C::Binop' ),
                          bless( {
                            'P6C::Binop::r' => bless( {
                              'P6C::prefix::name' => 'readline',
                              'P6C::prefix::args' => bless( {
                                'P6C::variable::type' => 'PerlUndef',
                                'P6C::variable::topical' => '',
                                'P6C::variable::name' => '$fh',
                                'P6C::variable::global' => '',
                                'P6C::variable::implicit' => 0
                              }, 'P6C::variable' )
                            }, 'P6C::prefix' ),
                            'P6C::Binop::op' => '=',
                            'P6C::Binop::l' => bless( {
                              'P6C::decl::qual' => bless( {
                                'P6C::scope_class::scope' => 'my',
                                'P6C::scope_class::class' => undef
                              }, 'P6C::scope_class' ),
                              'P6C::decl::vars' => [
                                bless( {
                                  'P6C::variable::type' => 'PerlUndef',
                                  'P6C::variable::topical' => '',
                                  'P6C::variable::name' => '$name',
                                  'P6C::variable::global' => '',
                                  'P6C::variable::implicit' => 0
                                }, 'P6C::variable' ),
                                bless( {
                                  'P6C::variable::type' => 'PerlUndef',
                                  'P6C::variable::topical' => '',
                                  'P6C::variable::name' => '$vers',
                                  'P6C::variable::global' => '',
                                  'P6C::variable::implicit' => 0
                                }, 'P6C::variable' ),
                                bless( {
                                  'P6C::variable::type' => 'PerlUndef',
                                  'P6C::variable::topical' => '',
                                  'P6C::variable::name' => '$status',
                                  'P6C::variable::global' => '',
                                  'P6C::variable::implicit' => 0
                                }, 'P6C::variable' ),
                                bless( {
                                  'P6C::variable::type' => 'PerlUndef',
                                  'P6C::variable::topical' => '',
                                  'P6C::variable::name' => '$costs',
                                  'P6C::variable::global' => '',
                                  'P6C::variable::implicit' => 0
                                }, 'P6C::variable' )
                              ],
                              'P6C::decl::props' => []
                            }, 'P6C::decl' )
                          }, 'P6C::Binop' ),
                          bless( {
                            'P6C::guard::expr' => bless( {
                              'P6C::prefix::name' => 'next',
                              'P6C::prefix::args' => undef
                            }, 'P6C::prefix' ),
                            'P6C::guard::name' => 'if',
                            'P6C::guard::test' => bless( {
                              'P6C::compare::seq' => [
                                bless( {
                                  'P6C::variable::type' => 'PerlUndef',
                                  'P6C::variable::topical' => '',
                                  'P6C::variable::name' => '$vers',
                                  'P6C::variable::global' => '',
                                  'P6C::variable::implicit' => 0
                                }, 'P6C::variable' ),
                                '<',
                                bless( {
                                  'P6C::variable::type' => 'PerlUndef',
                                  'P6C::variable::topical' => '',
                                  'P6C::variable::name' => '$version',
                                  'P6C::variable::global' => '',
                                  'P6C::variable::implicit' => 0
                                }, 'P6C::variable' )
                              ]
                            }, 'P6C::compare' )
                          }, 'P6C::guard' ),
                          bless( {
                            'P6C::Binop::r' => bless( {
                              'P6C::sv_literal::lval' => bless( {
                                'P6C::prefix::name' => 'split',
                                'P6C::prefix::args' => bless( {
                                  'P6C::Binop::r' => bless( {
                                    'P6C::variable::type' => 'PerlUndef',
                                    'P6C::variable::topical' => '',
                                    'P6C::variable::name' => '$costs',
                                    'P6C::variable::global' => '',
                                    'P6C::variable::implicit' => 0
                                  }, 'P6C::variable' ),
                                  'P6C::Binop::op' => ',',
                                  'P6C::Binop::l' => bless( {
                                    'P6C::sv_literal::lval' => '"\\s+"',
                                    'P6C::sv_literal::type' => 'PerlString'
                                  }, 'P6C::sv_literal' )
                                }, 'P6C::Binop' )
                              }, 'P6C::prefix' ),
                              'P6C::sv_literal::type' => 'PerlArray'
                            }, 'P6C::sv_literal' ),
                            'P6C::Binop::op' => '=',
                            'P6C::Binop::l' => bless( {
                              'P6C::variable::type' => 'PerlUndef',
                              'P6C::variable::topical' => '',
                              'P6C::variable::name' => '$costs',
                              'P6C::variable::global' => '',
                              'P6C::variable::implicit' => 0
                            }, 'P6C::variable' )
                          }, 'P6C::Binop' ),
                          bless( {
                            'P6C::Binop::r' => bless( {
                              'P6C::prefix::name' => 'readline',
                              'P6C::prefix::args' => bless( {
                                'P6C::variable::type' => 'PerlUndef',
                                'P6C::variable::topical' => '',
                                'P6C::variable::name' => '$fh',
                                'P6C::variable::global' => '',
                                'P6C::variable::implicit' => 0
                              }, 'P6C::variable' )
                            }, 'P6C::prefix' ),
                            'P6C::Binop::op' => '=',
                            'P6C::Binop::l' => bless( {
                              'P6C::subscript_exp::subscripts' => [
                                bless( {
                                  'P6C::indices::type' => 'PerlHash',
                                  'P6C::indices::indices' => bless( {
                                    'P6C::variable::type' => 'PerlUndef',
                                    'P6C::variable::topical' => '',
                                    'P6C::variable::name' => '$filepath',
                                    'P6C::variable::global' => '',
                                    'P6C::variable::implicit' => 0
                                  }, 'P6C::variable' )
                                }, 'P6C::indices' ),
                                bless( {
                                  'P6C::indices::type' => 'PerlHash',
                                  'P6C::indices::indices' => bless( {
                                    'P6C::sv_literal::lval' => '"fh name vers stat costs"',
                                    'P6C::sv_literal::type' => 'PerlString'
                                  }, 'P6C::sv_literal' )
                                }, 'P6C::indices' )
                              ],
                              'P6C::subscript_exp::thing' => bless( {
                                'P6C::variable::type' => 'PerlHash',
                                'P6C::variable::topical' => '',
                                'P6C::variable::name' => '%data',
                                'P6C::variable::global' => '',
                                'P6C::variable::implicit' => 0
                              }, 'P6C::variable' )
                            }, 'P6C::subscript_exp' )
                          }, 'P6C::Binop' ),
                          bless( {
                            'P6C::guard::expr' => bless( {
                              'P6C::prefix::name' => 'next',
                              'P6C::prefix::args' => undef
                            }, 'P6C::prefix' ),
                            'P6C::guard::name' => 'if',
                            'P6C::guard::test' => bless( {
                              'P6C::compare::seq' => [
                                bless( {
                                  'P6C::variable::type' => 'PerlUndef',
                                  'P6C::variable::topical' => '',
                                  'P6C::variable::name' => '$vers',
                                  'P6C::variable::global' => '',
                                  'P6C::variable::implicit' => 0
                                }, 'P6C::variable' ),
                                '<',
                                bless( {
                                  'P6C::variable::type' => 'PerlUndef',
                                  'P6C::variable::topical' => '',
                                  'P6C::variable::name' => '$version',
                                  'P6C::variable::global' => '',
                                  'P6C::variable::implicit' => 0
                                }, 'P6C::variable' )
                              ]
                            }, 'P6C::compare' )
                          }, 'P6C::guard' ),
                          bless( {
                            'P6C::Binop::r' => bless( {
                              'P6C::sv_literal::lval' => bless( {
                                'P6C::prefix::name' => 'split',
                                'P6C::prefix::args' => bless( {
                                  'P6C::Binop::r' => bless( {
                                    'P6C::variable::type' => 'PerlUndef',
                                    'P6C::variable::topical' => '',
                                    'P6C::variable::name' => '$costs',
                                    'P6C::variable::global' => '',
                                    'P6C::variable::implicit' => 0
                                  }, 'P6C::variable' ),
                                  'P6C::Binop::op' => ',',
                                  'P6C::Binop::l' => bless( {
                                    'P6C::sv_literal::lval' => '"\\s+"',
                                    'P6C::sv_literal::type' => 'PerlString'
                                  }, 'P6C::sv_literal' )
                                }, 'P6C::Binop' )
                              }, 'P6C::prefix' ),
                              'P6C::sv_literal::type' => 'PerlArray'
                            }, 'P6C::sv_literal' ),
                            'P6C::Binop::op' => '=',
                            'P6C::Binop::l' => bless( {
                              'P6C::variable::type' => 'PerlUndef',
                              'P6C::variable::topical' => '',
                              'P6C::variable::name' => '$costs',
                              'P6C::variable::global' => '',
                              'P6C::variable::implicit' => 0
                            }, 'P6C::variable' )
                          }, 'P6C::Binop' ),
                          bless( {
                            'P6C::Binop::r' => bless( {
                              'P6C::Binop::r' => bless( {
                                'P6C::variable::type' => 'PerlUndef',
                                'P6C::variable::topical' => '',
                                'P6C::variable::name' => '$costs',
                                'P6C::variable::global' => '',
                                'P6C::variable::implicit' => 0
                              }, 'P6C::variable' ),
                              'P6C::Binop::op' => ',',
                              'P6C::Binop::l' => bless( {
                                'P6C::Binop::r' => bless( {
                                  'P6C::variable::type' => 'PerlUndef',
                                  'P6C::variable::topical' => '',
                                  'P6C::variable::name' => '$status',
                                  'P6C::variable::global' => '',
                                  'P6C::variable::implicit' => 0
                                }, 'P6C::variable' ),
                                'P6C::Binop::op' => ',',
                                'P6C::Binop::l' => bless( {
                                  'P6C::Binop::r' => bless( {
                                    'P6C::variable::type' => 'PerlUndef',
                                    'P6C::variable::topical' => '',
                                    'P6C::variable::name' => '$vers',
                                    'P6C::variable::global' => '',
                                    'P6C::variable::implicit' => 0
                                  }, 'P6C::variable' ),
                                  'P6C::Binop::op' => ',',
                                  'P6C::Binop::l' => bless( {
                                    'P6C::Binop::r' => bless( {
                                      'P6C::variable::type' => 'PerlUndef',
                                      'P6C::variable::topical' => '',
                                      'P6C::variable::name' => '$name',
                                      'P6C::variable::global' => '',
                                      'P6C::variable::implicit' => 0
                                    }, 'P6C::variable' ),
                                    'P6C::Binop::op' => ',',
                                    'P6C::Binop::l' => bless( {
                                      'P6C::variable::type' => 'PerlUndef',
                                      'P6C::variable::topical' => '',
                                      'P6C::variable::name' => '$fh',
                                      'P6C::variable::global' => '',
                                      'P6C::variable::implicit' => 0
                                    }, 'P6C::variable' )
                                  }, 'P6C::Binop' )
                                }, 'P6C::Binop' )
                              }, 'P6C::Binop' )
                            }, 'P6C::Binop' ),
                            'P6C::Binop::op' => '=',
                            'P6C::Binop::l' => bless( {
                              'P6C::subscript_exp::subscripts' => [
                                bless( {
                                  'P6C::indices::type' => 'PerlHash',
                                  'P6C::indices::indices' => bless( {
                                    'P6C::variable::type' => 'PerlUndef',
                                    'P6C::variable::topical' => '',
                                    'P6C::variable::name' => '$filepath',
                                    'P6C::variable::global' => '',
                                    'P6C::variable::implicit' => 0
                                  }, 'P6C::variable' )
                                }, 'P6C::indices' ),
                                bless( {
                                  'P6C::indices::type' => 'PerlHash',
                                  'P6C::indices::indices' => bless( {
                                    'P6C::sv_literal::lval' => '"fh name vers stat costs"',
                                    'P6C::sv_literal::type' => 'PerlString'
                                  }, 'P6C::sv_literal' )
                                }, 'P6C::indices' )
                              ],
                              'P6C::subscript_exp::thing' => bless( {
                                'P6C::variable::type' => 'PerlHash',
                                'P6C::variable::topical' => '',
                                'P6C::variable::name' => '%data',
                                'P6C::variable::global' => '',
                                'P6C::variable::implicit' => 0
                              }, 'P6C::variable' )
                            }, 'P6C::subscript_exp' )
                          }, 'P6C::Binop' )
                        ]
                      }, 'P6C::closure' )
                    ]
                  ]
                }, 'P6C::prefix' )
              ]
            ]
          }, 'P6C::ValueList' )
        }, 'P6C::prefix' ),
        bless( {
          'P6C::prefix::name' => 'return',
          'P6C::prefix::args' => bless( {
            'P6C::variable::type' => 'PerlHash',
            'P6C::variable::topical' => '',
            'P6C::variable::name' => '%data',
            'P6C::variable::global' => '',
            'P6C::variable::implicit' => 0
          }, 'P6C::variable' )
        }, 'P6C::prefix' )
      ]
    }, 'P6C::closure' )
  }, 'P6C::sub_def' ),
  bless( {
    'P6C::Binop::r' => bless( {
      'P6C::Binop::r' => bless( {
        'P6C::sv_literal::lval' => '0',
        'P6C::sv_literal::type' => 'PerlInt'
      }, 'P6C::sv_literal' ),
      'P6C::Binop::op' => ',',
      'P6C::Binop::l' => bless( {
        'P6C::sv_literal::lval' => '0',
        'P6C::sv_literal::type' => 'PerlInt'
      }, 'P6C::sv_literal' )
    }, 'P6C::Binop' ),
    'P6C::Binop::op' => '=',
    'P6C::Binop::l' => bless( {
      'P6C::decl::qual' => bless( {
        'P6C::scope_class::scope' => 'my',
        'P6C::scope_class::class' => undef
      }, 'P6C::scope_class' ),
      'P6C::decl::vars' => bless( {
        'P6C::variable::type' => 'PerlArray',
        'P6C::variable::topical' => '',
        'P6C::variable::name' => '@StartOfFile',
        'P6C::variable::global' => '',
        'P6C::variable::implicit' => 0
      }, 'P6C::variable' ),
      'P6C::decl::props' => [
        bless( {
          'P6C::property::name' => 'const',
          'P6C::property::args' => undef
        }, 'P6C::property' )
      ]
    }, 'P6C::decl' )
  }, 'P6C::Binop' ),
  bless( {
    'P6C::sub_def::props' => [],
    'P6C::sub_def::qual' => undef,
    'P6C::sub_def::name' => 'save_data',
    'P6C::sub_def::closure' => bless( {
      'P6C::closure::params' => bless( {
        'P6C::params::req' => [
          bless( {
            'P6C::param::init' => undef,
            'P6C::param::props' => [],
            'P6C::param::qual' => undef,
            'P6C::param::var' => bless( {
              'P6C::variable::type' => 'PerlHash',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '%data',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          }, 'P6C::param' )
        ],
        'P6C::params::rest' => undef,
        'P6C::params::opt' => []
      }, 'P6C::params' ),
      'P6C::closure::block' => [
        bless( {
          'P6C::prefix::name' => 'foreach',
          'P6C::prefix::args' => bless( {
            'P6C::ValueList::vals' => [
              bless( {
                'P6C::decl::qual' => bless( {
                  'P6C::scope_class::scope' => 'my',
                  'P6C::scope_class::class' => undef
                }, 'P6C::scope_class' ),
                'P6C::decl::vars' => [
                  bless( {
                    'P6C::variable::type' => 'PerlUndef',
                    'P6C::variable::topical' => '',
                    'P6C::variable::name' => '$data',
                    'P6C::variable::global' => '',
                    'P6C::variable::implicit' => 0
                  }, 'P6C::variable' )
                ],
                'P6C::decl::props' => []
              }, 'P6C::decl' ),
              bless( {
                'P6C::prefix::name' => 'values',
                'P6C::prefix::args' => bless( {
                  'P6C::variable::type' => 'PerlHash',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '%data',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::prefix' ),
              [
                bless( {
                  'P6C::adverb::thing' => bless( {
                    'P6C::prefix::name' => 'seek',
                    'P6C::prefix::args' => bless( {
                      'P6C::Binop::r' => bless( {
                        'P6C::apply_rhs::subscripts' => [
                          bless( {
                            'P6C::indices::type' => 'PerlHash',
                            'P6C::indices::indices' => bless( {
                              'P6C::sv_literal::lval' => '"fh"',
                              'P6C::sv_literal::type' => 'PerlString'
                            }, 'P6C::sv_literal' )
                          }, 'P6C::indices' )
                        ],
                        'P6C::apply_rhs::prop' => undef
                      }, 'P6C::apply_rhs' ),
                      'P6C::Binop::op' => '.',
                      'P6C::Binop::l' => bless( {
                        'P6C::variable::type' => 'PerlUndef',
                        'P6C::variable::topical' => '',
                        'P6C::variable::name' => '$data',
                        'P6C::variable::global' => '',
                        'P6C::variable::implicit' => 0
                      }, 'P6C::variable' )
                    }, 'P6C::Binop' )
                  }, 'P6C::prefix' ),
                  'P6C::adverb::adv' => bless( {
                    'P6C::context::thing' => bless( {
                      'P6C::variable::type' => 'PerlArray',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '@StartOfFile',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' ),
                    'P6C::context::ctx' => '*'
                  }, 'P6C::context' )
                }, 'P6C::adverb' ),
                bless( {
                  'P6C::adverb::thing' => bless( {
                    'P6C::prefix::name' => 'truncate',
                    'P6C::prefix::args' => bless( {
                      'P6C::Binop::r' => bless( {
                        'P6C::apply_rhs::subscripts' => [
                          bless( {
                            'P6C::indices::type' => 'PerlHash',
                            'P6C::indices::indices' => bless( {
                              'P6C::sv_literal::lval' => '"fh"',
                              'P6C::sv_literal::type' => 'PerlString'
                            }, 'P6C::sv_literal' )
                          }, 'P6C::indices' )
                        ],
                        'P6C::apply_rhs::prop' => undef
                      }, 'P6C::apply_rhs' ),
                      'P6C::Binop::op' => '.',
                      'P6C::Binop::l' => bless( {
                        'P6C::variable::type' => 'PerlUndef',
                        'P6C::variable::topical' => '',
                        'P6C::variable::name' => '$data',
                        'P6C::variable::global' => '',
                        'P6C::variable::implicit' => 0
                      }, 'P6C::variable' )
                    }, 'P6C::Binop' )
                  }, 'P6C::prefix' ),
                  'P6C::adverb::adv' => bless( {
                    'P6C::sv_literal::lval' => '0',
                    'P6C::sv_literal::type' => 'PerlInt'
                  }, 'P6C::sv_literal' )
                }, 'P6C::adverb' ),
                bless( {
                  'P6C::Binop::r' => bless( {
                    'P6C::apply_rhs::subscripts' => [
                      bless( {
                        'P6C::indices::type' => 'Sub',
                        'P6C::indices::indices' => bless( {
                          'P6C::sv_literal::lval' => '"\\n"',
                          'P6C::sv_literal::type' => 'PerlString'
                        }, 'P6C::sv_literal' )
                      }, 'P6C::indices' )
                    ],
                    'P6C::apply_rhs::prop' => 'ofs'
                  }, 'P6C::apply_rhs' ),
                  'P6C::Binop::op' => '.',
                  'P6C::Binop::l' => bless( {
                    'P6C::Binop::r' => bless( {
                      'P6C::apply_rhs::subscripts' => [
                        bless( {
                          'P6C::indices::type' => 'PerlHash',
                          'P6C::indices::indices' => bless( {
                            'P6C::sv_literal::lval' => '"fh"',
                            'P6C::sv_literal::type' => 'PerlString'
                          }, 'P6C::sv_literal' )
                        }, 'P6C::indices' )
                      ],
                      'P6C::apply_rhs::prop' => undef
                    }, 'P6C::apply_rhs' ),
                    'P6C::Binop::op' => '.',
                    'P6C::Binop::l' => bless( {
                      'P6C::variable::type' => 'PerlUndef',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '$data',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' )
                  }, 'P6C::Binop' )
                }, 'P6C::Binop' ),
                bless( {
                  'P6C::adverb::thing' => bless( {
                    'P6C::prefix::name' => 'print',
                    'P6C::prefix::args' => bless( {
                      'P6C::Binop::r' => bless( {
                        'P6C::apply_rhs::subscripts' => [
                          bless( {
                            'P6C::indices::type' => 'PerlHash',
                            'P6C::indices::indices' => bless( {
                              'P6C::sv_literal::lval' => '"fh"',
                              'P6C::sv_literal::type' => 'PerlString'
                            }, 'P6C::sv_literal' )
                          }, 'P6C::indices' )
                        ],
                        'P6C::apply_rhs::prop' => undef
                      }, 'P6C::apply_rhs' ),
                      'P6C::Binop::op' => '.',
                      'P6C::Binop::l' => bless( {
                        'P6C::variable::type' => 'PerlUndef',
                        'P6C::variable::topical' => '',
                        'P6C::variable::name' => '$data',
                        'P6C::variable::global' => '',
                        'P6C::variable::implicit' => 0
                      }, 'P6C::variable' )
                    }, 'P6C::Binop' )
                  }, 'P6C::prefix' ),
                  'P6C::adverb::adv' => bless( {
                    'P6C::Binop::r' => bless( {
                      'P6C::variable::type' => 'PerlUndef',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '$rest',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' ),
                    'P6C::Binop::op' => ',',
                    'P6C::Binop::l' => bless( {
                      'P6C::Binop::r' => bless( {
                        'P6C::context::thing' => bless( {
                          'P6C::variable::type' => 'PerlArray',
                          'P6C::variable::topical' => 0,
                          'P6C::variable::name' => bless( {
                            'P6C::Binop::r' => bless( {
                              'P6C::apply_rhs::subscripts' => [
                                bless( {
                                  'P6C::indices::type' => 'PerlHash',
                                  'P6C::indices::indices' => bless( {
                                    'P6C::sv_literal::lval' => '"costs"',
                                    'P6C::sv_literal::type' => 'PerlString'
                                  }, 'P6C::sv_literal' )
                                }, 'P6C::indices' )
                              ],
                              'P6C::apply_rhs::prop' => undef
                            }, 'P6C::apply_rhs' ),
                            'P6C::Binop::op' => '.',
                            'P6C::Binop::l' => bless( {
                              'P6C::variable::type' => 'PerlUndef',
                              'P6C::variable::topical' => '',
                              'P6C::variable::name' => '$data',
                              'P6C::variable::global' => '',
                              'P6C::variable::implicit' => 0
                            }, 'P6C::variable' )
                          }, 'P6C::Binop' ),
                          'P6C::variable::global' => '',
                          'P6C::variable::implicit' => 0
                        }, 'P6C::variable' ),
                        'P6C::context::ctx' => '_'
                      }, 'P6C::context' ),
                      'P6C::Binop::op' => ',',
                      'P6C::Binop::l' => bless( {
                        'P6C::Binop::r' => bless( {
                          'P6C::apply_rhs::subscripts' => [
                            bless( {
                              'P6C::indices::type' => 'PerlHash',
                              'P6C::indices::indices' => bless( {
                                'P6C::sv_literal::lval' => '"name vers stat"',
                                'P6C::sv_literal::type' => 'PerlString'
                              }, 'P6C::sv_literal' )
                            }, 'P6C::indices' )
                          ],
                          'P6C::apply_rhs::prop' => undef
                        }, 'P6C::apply_rhs' ),
                        'P6C::Binop::op' => '.',
                        'P6C::Binop::l' => bless( {
                          'P6C::variable::type' => 'PerlUndef',
                          'P6C::variable::topical' => '',
                          'P6C::variable::name' => '$data',
                          'P6C::variable::global' => '',
                          'P6C::variable::implicit' => 0
                        }, 'P6C::variable' )
                      }, 'P6C::Binop' )
                    }, 'P6C::Binop' )
                  }, 'P6C::Binop' )
                }, 'P6C::adverb' )
              ]
            ]
          }, 'P6C::ValueList' )
        }, 'P6C::prefix' )
      ]
    }, 'P6C::closure' )
  }, 'P6C::sub_def' ),
  bless( {
    'P6C::Binop::r' => bless( {
      'P6C::prefix::name' => 'load_data',
      'P6C::prefix::args' => bless( {
        'P6C::ValueList::vals' => [
          bless( {
            'P6C::Binop::r' => bless( {
              'P6C::pair::l' => 'version',
              'P6C::pair::r' => bless( {
                'P6C::sv_literal::lval' => '1',
                'P6C::sv_literal::type' => 'PerlInt'
              }, 'P6C::sv_literal' )
            }, 'P6C::pair' ),
            'P6C::Binop::op' => ',',
            'P6C::Binop::l' => bless( {
              'P6C::pair::l' => 'filename',
              'P6C::pair::r' => bless( {
                'P6C::sv_literal::lval' => '"weblog"',
                'P6C::sv_literal::type' => 'PerlString'
              }, 'P6C::sv_literal' )
            }, 'P6C::pair' )
          }, 'P6C::Binop' )
        ]
      }, 'P6C::ValueList' )
    }, 'P6C::prefix' ),
    'P6C::Binop::op' => '=',
    'P6C::Binop::l' => bless( {
      'P6C::decl::qual' => bless( {
        'P6C::scope_class::scope' => 'my',
        'P6C::scope_class::class' => undef
      }, 'P6C::scope_class' ),
      'P6C::decl::vars' => bless( {
        'P6C::variable::type' => 'PerlHash',
        'P6C::variable::topical' => '',
        'P6C::variable::name' => '%data',
        'P6C::variable::global' => '',
        'P6C::variable::implicit' => 0
      }, 'P6C::variable' ),
      'P6C::decl::props' => []
    }, 'P6C::decl' )
  }, 'P6C::Binop' ),
  bless( {
    'P6C::Binop::r' => bless( {
      'P6C::Binop::r' => bless( {
        'P6C::sv_literal::lval' => '0080',
        'P6C::sv_literal::type' => 'PerlInt'
      }, 'P6C::sv_literal' ),
      'P6C::Binop::op' => 'x',
      'P6C::Binop::l' => bless( {
        'P6C::sv_literal::lval' => '0',
        'P6C::sv_literal::type' => 'PerlInt'
      }, 'P6C::sv_literal' )
    }, 'P6C::Binop' ),
    'P6C::Binop::op' => '=',
    'P6C::Binop::l' => bless( {
      'P6C::decl::qual' => bless( {
        'P6C::scope_class::scope' => 'my',
        'P6C::scope_class::class' => undef
      }, 'P6C::scope_class' ),
      'P6C::decl::vars' => bless( {
        'P6C::variable::type' => 'PerlUndef',
        'P6C::variable::topical' => '',
        'P6C::variable::name' => '$is_active_bit',
        'P6C::variable::global' => '',
        'P6C::variable::implicit' => 0
      }, 'P6C::variable' ),
      'P6C::decl::props' => [
        bless( {
          'P6C::property::name' => 'const',
          'P6C::property::args' => undef
        }, 'P6C::property' )
      ]
    }, 'P6C::decl' )
  }, 'P6C::Binop' ),
  bless( {
    'P6C::prefix::name' => 'foreach',
    'P6C::prefix::args' => bless( {
      'P6C::ValueList::vals' => [
        bless( {
          'P6C::decl::qual' => bless( {
            'P6C::scope_class::scope' => 'my',
            'P6C::scope_class::class' => undef
          }, 'P6C::scope_class' ),
          'P6C::decl::vars' => [
            bless( {
              'P6C::variable::type' => 'PerlUndef',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '$file',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          ],
          'P6C::decl::props' => []
        }, 'P6C::decl' ),
        bless( {
          'P6C::prefix::name' => 'keys',
          'P6C::prefix::args' => bless( {
            'P6C::variable::type' => 'PerlHash',
            'P6C::variable::topical' => '',
            'P6C::variable::name' => '%data',
            'P6C::variable::global' => '',
            'P6C::variable::implicit' => 0
          }, 'P6C::variable' )
        }, 'P6C::prefix' ),
        [
          bless( {
            'P6C::prefix::name' => 'print',
            'P6C::prefix::args' => bless( {
              'P6C::sv_literal::lval' => '"$file contains data on %data{$file}{name}\\n"',
              'P6C::sv_literal::type' => 'PerlString'
            }, 'P6C::sv_literal' )
          }, 'P6C::prefix' ),
          bless( {
            'P6C::Binop::r' => bless( {
              'P6C::Binop::r' => bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$is_active_bit',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' ),
              'P6C::Binop::op' => '~',
              'P6C::Binop::l' => bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlHash',
                    'P6C::indices::indices' => bless( {
                      'P6C::variable::type' => 'PerlUndef',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '$file',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' )
                  }, 'P6C::indices' ),
                  bless( {
                    'P6C::indices::type' => 'PerlHash',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '"stat"',
                      'P6C::sv_literal::type' => 'PerlString'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlHash',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '%data',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' )
            }, 'P6C::Binop' ),
            'P6C::Binop::op' => '=',
            'P6C::Binop::l' => bless( {
              'P6C::subscript_exp::subscripts' => [
                bless( {
                  'P6C::indices::type' => 'PerlHash',
                  'P6C::indices::indices' => bless( {
                    'P6C::variable::type' => 'PerlUndef',
                    'P6C::variable::topical' => '',
                    'P6C::variable::name' => '$file',
                    'P6C::variable::global' => '',
                    'P6C::variable::implicit' => 0
                  }, 'P6C::variable' )
                }, 'P6C::indices' ),
                bless( {
                  'P6C::indices::type' => 'PerlHash',
                  'P6C::indices::indices' => bless( {
                    'P6C::sv_literal::lval' => '"stat"',
                    'P6C::sv_literal::type' => 'PerlString'
                  }, 'P6C::sv_literal' )
                }, 'P6C::indices' )
              ],
              'P6C::subscript_exp::thing' => bless( {
                'P6C::variable::type' => 'PerlHash',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '%data',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' )
            }, 'P6C::subscript_exp' )
          }, 'P6C::Binop' ),
          bless( {
            'P6C::Binop::r' => bless( {
              'P6C::context::thing' => bless( {
                'P6C::subscript_exp::subscripts' => [
                  bless( {
                    'P6C::indices::type' => 'PerlHash',
                    'P6C::indices::indices' => bless( {
                      'P6C::variable::type' => 'PerlUndef',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '$file',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' )
                  }, 'P6C::indices' ),
                  bless( {
                    'P6C::indices::type' => 'PerlHash',
                    'P6C::indices::indices' => bless( {
                      'P6C::sv_literal::lval' => '"costs"',
                      'P6C::sv_literal::type' => 'PerlString'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::indices' )
                ],
                'P6C::subscript_exp::thing' => bless( {
                  'P6C::variable::type' => 'PerlHash',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '%data',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::subscript_exp' ),
              'P6C::context::ctx' => '@'
            }, 'P6C::context' ),
            'P6C::Binop::op' => ':=',
            'P6C::Binop::l' => bless( {
              'P6C::decl::qual' => bless( {
                'P6C::scope_class::scope' => 'my',
                'P6C::scope_class::class' => undef
              }, 'P6C::scope_class' ),
              'P6C::decl::vars' => bless( {
                'P6C::variable::type' => 'PerlArray',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '@costs',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' ),
              'P6C::decl::props' => []
            }, 'P6C::decl' )
          }, 'P6C::Binop' ),
          bless( {
            'P6C::decl::qual' => bless( {
              'P6C::scope_class::scope' => 'my',
              'P6C::scope_class::class' => undef
            }, 'P6C::scope_class' ),
            'P6C::decl::vars' => bless( {
              'P6C::variable::type' => 'PerlUndef',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '$inflation',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' ),
            'P6C::decl::props' => []
          }, 'P6C::decl' ),
          bless( {
            'P6C::Binop::r' => bless( {
              'P6C::prefix::name' => 'map',
              'P6C::prefix::args' => bless( {
                'P6C::ValueList::vals' => [
                  bless( {
                    'P6C::closure::params' => undef,
                    'P6C::closure::block' => [
                      bless( {
                        'P6C::Binop::r' => bless( {
                          'P6C::apply_rhs::subscripts' => [],
                          'P6C::apply_rhs::prop' => 'value'
                        }, 'P6C::apply_rhs' ),
                        'P6C::Binop::op' => '.',
                        'P6C::Binop::l' => bless( {
                          'P6C::variable::type' => 'PerlUndef',
                          'P6C::variable::topical' => '',
                          'P6C::variable::name' => '$_',
                          'P6C::variable::global' => '',
                          'P6C::variable::implicit' => 0
                        }, 'P6C::variable' )
                      }, 'P6C::Binop' )
                    ]
                  }, 'P6C::closure' ),
                  bless( {
                    'P6C::prefix::name' => 'sort',
                    'P6C::prefix::args' => bless( {
                      'P6C::ValueList::vals' => [
                        bless( {
                          'P6C::closure::params' => undef,
                          'P6C::closure::block' => [
                            bless( {
                              'P6C::compare::seq' => [
                                bless( {
                                  'P6C::Binop::r' => bless( {
                                    'P6C::apply_rhs::subscripts' => [],
                                    'P6C::apply_rhs::prop' => 'key'
                                  }, 'P6C::apply_rhs' ),
                                  'P6C::Binop::op' => '.',
                                  'P6C::Binop::l' => bless( {
                                    'P6C::variable::type' => 'PerlUndef',
                                    'P6C::variable::topical' => '',
                                    'P6C::variable::name' => '$a',
                                    'P6C::variable::global' => '',
                                    'P6C::variable::implicit' => 0
                                  }, 'P6C::variable' )
                                }, 'P6C::Binop' ),
                                '<=>',
                                bless( {
                                  'P6C::Binop::r' => bless( {
                                    'P6C::apply_rhs::subscripts' => [],
                                    'P6C::apply_rhs::prop' => 'key'
                                  }, 'P6C::apply_rhs' ),
                                  'P6C::Binop::op' => '.',
                                  'P6C::Binop::l' => bless( {
                                    'P6C::variable::type' => 'PerlUndef',
                                    'P6C::variable::topical' => '',
                                    'P6C::variable::name' => '$b',
                                    'P6C::variable::global' => '',
                                    'P6C::variable::implicit' => 0
                                  }, 'P6C::variable' )
                                }, 'P6C::Binop' )
                              ]
                            }, 'P6C::compare' )
                          ]
                        }, 'P6C::closure' ),
                        bless( {
                          'P6C::prefix::name' => 'map',
                          'P6C::prefix::args' => bless( {
                            'P6C::ValueList::vals' => [
                              bless( {
                                'P6C::sv_literal::lval' => [
                                  bless( {
                                    'P6C::pair::l' => bless( {
                                      'P6C::prefix::name' => 'amortize',
                                      'P6C::prefix::args' => bless( {
                                        'P6C::variable::type' => 'PerlUndef',
                                        'P6C::variable::topical' => '',
                                        'P6C::variable::name' => '$_',
                                        'P6C::variable::global' => '',
                                        'P6C::variable::implicit' => 0
                                      }, 'P6C::variable' )
                                    }, 'P6C::prefix' ),
                                    'P6C::pair::r' => bless( {
                                      'P6C::variable::type' => 'PerlUndef',
                                      'P6C::variable::topical' => '',
                                      'P6C::variable::name' => '$_',
                                      'P6C::variable::global' => '',
                                      'P6C::variable::implicit' => 0
                                    }, 'P6C::variable' )
                                  }, 'P6C::pair' )
                                ],
                                'P6C::sv_literal::type' => 'PerlHash'
                              }, 'P6C::sv_literal' ),
                              bless( {
                                'P6C::Binop::r' => bless( {
                                  'P6C::variable::type' => 'PerlUndef',
                                  'P6C::variable::topical' => '',
                                  'P6C::variable::name' => '$inflation',
                                  'P6C::variable::global' => '',
                                  'P6C::variable::implicit' => 0
                                }, 'P6C::variable' ),
                                'P6C::Binop::op' => bless( {
                                  'P6C::hype::op' => '*'
                                }, 'P6C::hype' ),
                                'P6C::Binop::l' => bless( {
                                  'P6C::variable::type' => 'PerlArray',
                                  'P6C::variable::topical' => '',
                                  'P6C::variable::name' => '@costs',
                                  'P6C::variable::global' => '',
                                  'P6C::variable::implicit' => 0
                                }, 'P6C::variable' )
                              }, 'P6C::Binop' )
                            ]
                          }, 'P6C::ValueList' )
                        }, 'P6C::prefix' )
                      ]
                    }, 'P6C::ValueList' )
                  }, 'P6C::prefix' )
                ]
              }, 'P6C::ValueList' )
            }, 'P6C::prefix' ),
            'P6C::Binop::op' => '=',
            'P6C::Binop::l' => bless( {
              'P6C::variable::type' => 'PerlArray',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '@costs',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          }, 'P6C::Binop' ),
          bless( {
            'P6C::prefix::name' => 'print',
            'P6C::prefix::args' => bless( {
              'P6C::sv_literal::lval' => '"Total expenditure: $( sum @costs )\\n"',
              'P6C::sv_literal::type' => 'PerlString'
            }, 'P6C::sv_literal' )
          }, 'P6C::prefix' ),
          bless( {
            'P6C::prefix::name' => 'print',
            'P6C::prefix::args' => bless( {
              'P6C::sv_literal::lval' => '"Major expenditure: $( sum @costs : {$^_ >= 1000} )\\n"',
              'P6C::sv_literal::type' => 'PerlString'
            }, 'P6C::sv_literal' )
          }, 'P6C::prefix' ),
          bless( {
            'P6C::prefix::name' => 'print',
            'P6C::prefix::args' => bless( {
              'P6C::sv_literal::lval' => '"Minor expenditure: $( sum @costs : {$^_ < 1000} )\\n"',
              'P6C::sv_literal::type' => 'PerlString'
            }, 'P6C::sv_literal' )
          }, 'P6C::prefix' )
        ]
      ]
    }, 'P6C::ValueList' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::prefix::name' => 'save_data',
    'P6C::prefix::args' => bless( {
      'P6C::ValueList::vals' => [
        bless( {
          'P6C::Binop::r' => bless( {
            'P6C::pair::l' => 'log',
            'P6C::pair::r' => bless( {
              'P6C::sv_literal::lval' => [
                bless( {
                  'P6C::pair::l' => 'name',
                  'P6C::pair::r' => bless( {
                    'P6C::sv_literal::lval' => '"metalog"',
                    'P6C::sv_literal::type' => 'PerlString'
                  }, 'P6C::sv_literal' )
                }, 'P6C::pair' ),
                bless( {
                  'P6C::pair::l' => 'vers',
                  'P6C::pair::r' => bless( {
                    'P6C::sv_literal::lval' => '1',
                    'P6C::sv_literal::type' => 'PerlInt'
                  }, 'P6C::sv_literal' )
                }, 'P6C::pair' ),
                bless( {
                  'P6C::pair::l' => 'costs',
                  'P6C::pair::r' => bless( {
                    'P6C::sv_literal::lval' => undef,
                    'P6C::sv_literal::type' => 'PerlArray'
                  }, 'P6C::sv_literal' )
                }, 'P6C::pair' ),
                bless( {
                  'P6C::pair::l' => 'stat',
                  'P6C::pair::r' => bless( {
                    'P6C::sv_literal::lval' => '0',
                    'P6C::sv_literal::type' => 'PerlInt'
                  }, 'P6C::sv_literal' )
                }, 'P6C::pair' )
              ],
              'P6C::sv_literal::type' => 'PerlHash'
            }, 'P6C::sv_literal' )
          }, 'P6C::pair' ),
          'P6C::Binop::op' => ',',
          'P6C::Binop::l' => bless( {
            'P6C::variable::type' => 'PerlHash',
            'P6C::variable::topical' => '',
            'P6C::variable::name' => '%data',
            'P6C::variable::global' => '',
            'P6C::variable::implicit' => 0
          }, 'P6C::variable' )
        }, 'P6C::Binop' )
      ]
    }, 'P6C::ValueList' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::class_def::block' => bless( {
      'P6C::yadda::msg' => undef
    }, 'P6C::yadda' ),
    'P6C::class_def::name' => 'Err::BadData',
    'P6C::class_def::qual' => undef,
    'P6C::class_def::props' => [
      bless( {
        'P6C::property::name' => 'Exception',
        'P6C::property::args' => undef
      }, 'P6C::property' )
    ]
  }, 'P6C::class_def' ),
  bless( {
    'P6C::directive::args' => undef,
    'P6C::directive::thing' => 'Calc',
    'P6C::directive::name' => 'module'
  }, 'P6C::directive' ),
  bless( {
    'P6C::class_def::block' => [
      bless( {
        'P6C::sub_def::props' => [],
        'P6C::sub_def::qual' => 'method',
        'P6C::sub_def::name' => 'warn',
        'P6C::sub_def::closure' => bless( {
          'P6C::closure::params' => bless( {
            'P6C::params::req' => [],
            'P6C::params::rest' => bless( {
              'P6C::param::init' => undef,
              'P6C::param::props' => [],
              'P6C::param::qual' => undef,
              'P6C::param::var' => bless( {
                'P6C::variable::type' => 'PerlArray',
                'P6C::variable::topical' => undef,
                'P6C::variable::name' => '@args',
                'P6C::variable::global' => undef,
                'P6C::variable::implicit' => undef
              }, 'P6C::variable' )
            }, 'P6C::param' ),
            'P6C::params::opt' => []
          }, 'P6C::params' ),
          'P6C::closure::block' => [
            bless( {
              'P6C::prefix::name' => 'die',
              'P6C::prefix::args' => bless( {
                'P6C::variable::type' => 'PerlArray',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '@args',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' )
            }, 'P6C::prefix' )
          ]
        }, 'P6C::closure' )
      }, 'P6C::sub_def' )
    ],
    'P6C::class_def::name' => 'NoData',
    'P6C::class_def::qual' => 'my',
    'P6C::class_def::props' => [
      bless( {
        'P6C::property::name' => 'Exception',
        'P6C::property::args' => undef
      }, 'P6C::property' )
    ]
  }, 'P6C::class_def' ),
  bless( {
    'P6C::decl::qual' => bless( {
      'P6C::scope_class::scope' => 'my',
      'P6C::scope_class::class' => undef
    }, 'P6C::scope_class' ),
    'P6C::decl::vars' => bless( {
      'P6C::variable::type' => 'PerlHash',
      'P6C::variable::topical' => '',
      'P6C::variable::name' => '%var',
      'P6C::variable::global' => '',
      'P6C::variable::implicit' => 0
    }, 'P6C::variable' ),
    'P6C::decl::props' => []
  }, 'P6C::decl' ),
  bless( {
    'P6C::sub_def::props' => [],
    'P6C::sub_def::qual' => 'my',
    'P6C::sub_def::name' => 'get_data',
    'P6C::sub_def::closure' => bless( {
      'P6C::closure::params' => bless( {
        'P6C::params::req' => [
          bless( {
            'P6C::param::init' => undef,
            'P6C::param::props' => [],
            'P6C::param::qual' => undef,
            'P6C::param::var' => bless( {
              'P6C::variable::type' => 'PerlUndef',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '$data',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          }, 'P6C::param' )
        ],
        'P6C::params::rest' => undef,
        'P6C::params::opt' => []
      }, 'P6C::params' ),
      'P6C::closure::block' => [
        bless( {
          'P6C::prefix::name' => 'given',
          'P6C::prefix::args' => bless( {
            'P6C::ValueList::vals' => [
              bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$data',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' ),
              bless( {
                'P6C::closure::params' => undef,
                'P6C::closure::block' => [
                  bless( {
                    'P6C::prefix::name' => 'when',
                    'P6C::prefix::args' => bless( {
                      'P6C::ValueList::vals' => [
                        bless( {
                          'P6C::sv_literal::lval' => '"^\\d+$"',
                          'P6C::sv_literal::type' => 'PerlString'
                        }, 'P6C::sv_literal' ),
                        bless( {
                          'P6C::closure::params' => undef,
                          'P6C::closure::block' => [
                            bless( {
                              'P6C::prefix::name' => 'return',
                              'P6C::prefix::args' => bless( {
                                'P6C::Binop::r' => bless( {
                                  'P6C::variable::type' => 'PerlUndef',
                                  'P6C::variable::topical' => '',
                                  'P6C::variable::name' => '$_',
                                  'P6C::variable::global' => '',
                                  'P6C::variable::implicit' => 0
                                }, 'P6C::variable' ),
                                'P6C::Binop::op' => '=',
                                'P6C::Binop::l' => bless( {
                                  'P6C::subscript_exp::subscripts' => [
                                    bless( {
                                      'P6C::indices::type' => 'PerlHash',
                                      'P6C::indices::indices' => bless( {
                                        'P6C::sv_literal::lval' => '""',
                                        'P6C::sv_literal::type' => 'PerlString'
                                      }, 'P6C::sv_literal' )
                                    }, 'P6C::indices' )
                                  ],
                                  'P6C::subscript_exp::thing' => bless( {
                                    'P6C::variable::type' => 'PerlHash',
                                    'P6C::variable::topical' => '',
                                    'P6C::variable::name' => '%var',
                                    'P6C::variable::global' => '',
                                    'P6C::variable::implicit' => 0
                                  }, 'P6C::variable' )
                                }, 'P6C::subscript_exp' )
                              }, 'P6C::Binop' )
                            }, 'P6C::prefix' )
                          ]
                        }, 'P6C::closure' )
                      ]
                    }, 'P6C::ValueList' )
                  }, 'P6C::prefix' ),
                  bless( {
                    'P6C::prefix::name' => 'when',
                    'P6C::prefix::args' => bless( {
                      'P6C::ValueList::vals' => [
                        bless( {
                          'P6C::sv_literal::lval' => '"previous"',
                          'P6C::sv_literal::type' => 'PerlString'
                        }, 'P6C::sv_literal' ),
                        bless( {
                          'P6C::closure::params' => undef,
                          'P6C::closure::block' => [
                            bless( {
                              'P6C::prefix::name' => 'return',
                              'P6C::prefix::args' => bless( {
                                'P6C::Binop::r' => bless( {
                                  'P6C::prefix::name' => 'fail',
                                  'P6C::prefix::args' => 'NoData'
                                }, 'P6C::prefix' ),
                                'P6C::Binop::op' => '//',
                                'P6C::Binop::l' => bless( {
                                  'P6C::subscript_exp::subscripts' => [
                                    bless( {
                                      'P6C::indices::type' => 'PerlHash',
                                      'P6C::indices::indices' => bless( {
                                        'P6C::sv_literal::lval' => '""',
                                        'P6C::sv_literal::type' => 'PerlString'
                                      }, 'P6C::sv_literal' )
                                    }, 'P6C::indices' )
                                  ],
                                  'P6C::subscript_exp::thing' => bless( {
                                    'P6C::variable::type' => 'PerlHash',
                                    'P6C::variable::topical' => '',
                                    'P6C::variable::name' => '%var',
                                    'P6C::variable::global' => '',
                                    'P6C::variable::implicit' => 0
                                  }, 'P6C::variable' )
                                }, 'P6C::subscript_exp' )
                              }, 'P6C::Binop' )
                            }, 'P6C::prefix' )
                          ]
                        }, 'P6C::closure' )
                      ]
                    }, 'P6C::ValueList' )
                  }, 'P6C::prefix' ),
                  bless( {
                    'P6C::prefix::name' => 'when',
                    'P6C::prefix::args' => bless( {
                      'P6C::ValueList::vals' => [
                        bless( {
                          'P6C::variable::type' => 'PerlHash',
                          'P6C::variable::topical' => '',
                          'P6C::variable::name' => '%var',
                          'P6C::variable::global' => '',
                          'P6C::variable::implicit' => 0
                        }, 'P6C::variable' ),
                        bless( {
                          'P6C::closure::params' => undef,
                          'P6C::closure::block' => [
                            bless( {
                              'P6C::prefix::name' => 'return',
                              'P6C::prefix::args' => bless( {
                                'P6C::Binop::r' => bless( {
                                  'P6C::subscript_exp::subscripts' => [
                                    bless( {
                                      'P6C::indices::type' => 'PerlHash',
                                      'P6C::indices::indices' => bless( {
                                        'P6C::variable::type' => 'PerlUndef',
                                        'P6C::variable::topical' => '',
                                        'P6C::variable::name' => '$_',
                                        'P6C::variable::global' => '',
                                        'P6C::variable::implicit' => 0
                                      }, 'P6C::variable' )
                                    }, 'P6C::indices' )
                                  ],
                                  'P6C::subscript_exp::thing' => bless( {
                                    'P6C::variable::type' => 'PerlHash',
                                    'P6C::variable::topical' => '',
                                    'P6C::variable::name' => '%var',
                                    'P6C::variable::global' => '',
                                    'P6C::variable::implicit' => 0
                                  }, 'P6C::variable' )
                                }, 'P6C::subscript_exp' ),
                                'P6C::Binop::op' => '=',
                                'P6C::Binop::l' => bless( {
                                  'P6C::subscript_exp::subscripts' => [
                                    bless( {
                                      'P6C::indices::type' => 'PerlHash',
                                      'P6C::indices::indices' => bless( {
                                        'P6C::sv_literal::lval' => '""',
                                        'P6C::sv_literal::type' => 'PerlString'
                                      }, 'P6C::sv_literal' )
                                    }, 'P6C::indices' )
                                  ],
                                  'P6C::subscript_exp::thing' => bless( {
                                    'P6C::variable::type' => 'PerlHash',
                                    'P6C::variable::topical' => '',
                                    'P6C::variable::name' => '%var',
                                    'P6C::variable::global' => '',
                                    'P6C::variable::implicit' => 0
                                  }, 'P6C::variable' )
                                }, 'P6C::subscript_exp' )
                              }, 'P6C::Binop' )
                            }, 'P6C::prefix' )
                          ]
                        }, 'P6C::closure' )
                      ]
                    }, 'P6C::ValueList' )
                  }, 'P6C::prefix' ),
                  bless( {
                    'P6C::prefix::name' => 'default',
                    'P6C::prefix::args' => bless( {
                      'P6C::closure::params' => undef,
                      'P6C::closure::block' => [
                        bless( {
                          'P6C::adverb::thing' => bless( {
                            'P6C::prefix::name' => 'die',
                            'P6C::prefix::args' => 'Err::BadData'
                          }, 'P6C::prefix' ),
                          'P6C::adverb::adv' => bless( {
                            'P6C::pair::l' => 'msg',
                            'P6C::pair::r' => bless( {
                              'P6C::sv_literal::lval' => '"Don\'t understand $_"',
                              'P6C::sv_literal::type' => 'PerlString'
                            }, 'P6C::sv_literal' )
                          }, 'P6C::pair' )
                        }, 'P6C::adverb' )
                      ]
                    }, 'P6C::closure' )
                  }, 'P6C::prefix' )
                ]
              }, 'P6C::closure' )
            ]
          }, 'P6C::ValueList' )
        }, 'P6C::prefix' )
      ]
    }, 'P6C::closure' )
  }, 'P6C::sub_def' ),
  bless( {
    'P6C::sub_def::props' => [],
    'P6C::sub_def::qual' => undef,
    'P6C::sub_def::name' => 'calc',
    'P6C::sub_def::closure' => bless( {
      'P6C::closure::params' => bless( {
        'P6C::params::req' => [
          bless( {
            'P6C::param::init' => undef,
            'P6C::param::props' => [],
            'P6C::param::qual' => bless( {
              'P6C::scope_class::scope' => undef,
              'P6C::scope_class::class' => 'str'
            }, 'P6C::scope_class' ),
            'P6C::param::var' => bless( {
              'P6C::variable::type' => 'PerlUndef',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '$expr',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          }, 'P6C::param' ),
          bless( {
            'P6C::param::init' => undef,
            'P6C::param::props' => [],
            'P6C::param::qual' => bless( {
              'P6C::scope_class::scope' => undef,
              'P6C::scope_class::class' => 'int'
            }, 'P6C::scope_class' ),
            'P6C::param::var' => bless( {
              'P6C::variable::type' => 'PerlUndef',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '$i',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          }, 'P6C::param' )
        ],
        'P6C::params::rest' => undef,
        'P6C::params::opt' => []
      }, 'P6C::params' ),
      'P6C::closure::block' => [
        bless( {
          'P6C::Binop::r' => bless( {
            'P6C::Binop::r' => bless( {
              'P6C::pair::l' => bless( {
                'P6C::sv_literal::lval' => '"~"',
                'P6C::sv_literal::type' => 'PerlString'
              }, 'P6C::sv_literal' ),
              'P6C::pair::r' => bless( {
                'P6C::closure::params' => undef,
                'P6C::closure::block' => [
                  bless( {
                    'P6C::Binop::r' => bless( {
                      'P6C::sv_literal::lval' => '2',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' ),
                    'P6C::Binop::op' => '/',
                    'P6C::Binop::l' => bless( {
                      'P6C::Binop::r' => bless( {
                        'P6C::variable::type' => 'PerlUndef',
                        'P6C::variable::topical' => 0,
                        'P6C::variable::name' => '$b',
                        'P6C::variable::global' => 0,
                        'P6C::variable::implicit' => 1
                      }, 'P6C::variable' ),
                      'P6C::Binop::op' => '+',
                      'P6C::Binop::l' => bless( {
                        'P6C::variable::type' => 'PerlUndef',
                        'P6C::variable::topical' => 0,
                        'P6C::variable::name' => '$a',
                        'P6C::variable::global' => 0,
                        'P6C::variable::implicit' => 1
                      }, 'P6C::variable' )
                    }, 'P6C::Binop' )
                  }, 'P6C::Binop' )
                ]
              }, 'P6C::closure' )
            }, 'P6C::pair' ),
            'P6C::Binop::op' => ',',
            'P6C::Binop::l' => bless( {
              'P6C::Binop::r' => bless( {
                'P6C::pair::l' => bless( {
                  'P6C::sv_literal::lval' => '"/"',
                  'P6C::sv_literal::type' => 'PerlString'
                }, 'P6C::sv_literal' ),
                'P6C::pair::r' => bless( {
                  'P6C::closure::params' => undef,
                  'P6C::closure::block' => [
                    bless( {
                      'P6C::Binop::r' => bless( {
                        'P6C::variable::type' => 'PerlUndef',
                        'P6C::variable::topical' => 0,
                        'P6C::variable::name' => '$b',
                        'P6C::variable::global' => 0,
                        'P6C::variable::implicit' => 1
                      }, 'P6C::variable' ),
                      'P6C::Binop::op' => '/',
                      'P6C::Binop::l' => bless( {
                        'P6C::variable::type' => 'PerlUndef',
                        'P6C::variable::topical' => 0,
                        'P6C::variable::name' => '$a',
                        'P6C::variable::global' => 0,
                        'P6C::variable::implicit' => 1
                      }, 'P6C::variable' )
                    }, 'P6C::Binop' )
                  ]
                }, 'P6C::closure' )
              }, 'P6C::pair' ),
              'P6C::Binop::op' => ',',
              'P6C::Binop::l' => bless( {
                'P6C::pair::l' => bless( {
                  'P6C::sv_literal::lval' => '"*"',
                  'P6C::sv_literal::type' => 'PerlString'
                }, 'P6C::sv_literal' ),
                'P6C::pair::r' => bless( {
                  'P6C::closure::params' => undef,
                  'P6C::closure::block' => [
                    bless( {
                      'P6C::Binop::r' => bless( {
                        'P6C::variable::type' => 'PerlUndef',
                        'P6C::variable::topical' => 0,
                        'P6C::variable::name' => '$b',
                        'P6C::variable::global' => 0,
                        'P6C::variable::implicit' => 1
                      }, 'P6C::variable' ),
                      'P6C::Binop::op' => '*',
                      'P6C::Binop::l' => bless( {
                        'P6C::variable::type' => 'PerlUndef',
                        'P6C::variable::topical' => 0,
                        'P6C::variable::name' => '$a',
                        'P6C::variable::global' => 0,
                        'P6C::variable::implicit' => 1
                      }, 'P6C::variable' )
                    }, 'P6C::Binop' )
                  ]
                }, 'P6C::closure' )
              }, 'P6C::pair' )
            }, 'P6C::Binop' )
          }, 'P6C::Binop' ),
          'P6C::Binop::op' => '//=',
          'P6C::Binop::l' => bless( {
            'P6C::decl::qual' => bless( {
              'P6C::scope_class::scope' => 'our',
              'P6C::scope_class::class' => undef
            }, 'P6C::scope_class' ),
            'P6C::decl::vars' => bless( {
              'P6C::variable::type' => 'PerlHash',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '%operator',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' ),
            'P6C::decl::props' => [
              bless( {
                'P6C::property::name' => 'private',
                'P6C::property::args' => undef
              }, 'P6C::property' )
            ]
          }, 'P6C::decl' )
        }, 'P6C::Binop' ),
        bless( {
          'P6C::decl::qual' => bless( {
            'P6C::scope_class::scope' => 'my',
            'P6C::scope_class::class' => undef
          }, 'P6C::scope_class' ),
          'P6C::decl::vars' => bless( {
            'P6C::variable::type' => 'PerlArray',
            'P6C::variable::topical' => '',
            'P6C::variable::name' => '@stack',
            'P6C::variable::global' => '',
            'P6C::variable::implicit' => 0
          }, 'P6C::variable' ),
          'P6C::decl::props' => []
        }, 'P6C::decl' ),
        bless( {
          'P6C::Binop::r' => bless( {
            'P6C::sv_literal::lval' => '1',
            'P6C::sv_literal::type' => 'PerlInt'
          }, 'P6C::sv_literal' ),
          'P6C::Binop::op' => '=',
          'P6C::Binop::l' => bless( {
            'P6C::decl::qual' => bless( {
              'P6C::scope_class::scope' => 'my',
              'P6C::scope_class::class' => undef
            }, 'P6C::scope_class' ),
            'P6C::decl::vars' => bless( {
              'P6C::variable::type' => 'PerlUndef',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '$toknum',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' ),
            'P6C::decl::props' => []
          }, 'P6C::decl' )
        }, 'P6C::Binop' ),
        bless( {
          'P6C::prefix::name' => 'for',
          'P6C::prefix::args' => bless( {
            'P6C::ValueList::vals' => [
              bless( {
                'P6C::prefix::name' => 'split',
                'P6C::prefix::args' => bless( {
                  'P6C::Binop::r' => bless( {
                    'P6C::variable::type' => 'PerlUndef',
                    'P6C::variable::topical' => '',
                    'P6C::variable::name' => '$expr',
                    'P6C::variable::global' => '',
                    'P6C::variable::implicit' => 0
                  }, 'P6C::variable' ),
                  'P6C::Binop::op' => ',',
                  'P6C::Binop::l' => bless( {
                    'P6C::sv_literal::lval' => '"\\s+"',
                    'P6C::sv_literal::type' => 'PerlString'
                  }, 'P6C::sv_literal' )
                }, 'P6C::Binop' )
              }, 'P6C::prefix' ),
              bless( {
                'P6C::closure::params' => bless( {
                  'P6C::variable::type' => 'PerlUndef',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '$token',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' ),
                'P6C::closure::block' => [
                  bless( {
                    'P6C::prefix::name' => 'try',
                    'P6C::prefix::args' => bless( {
                      'P6C::closure::params' => undef,
                      'P6C::closure::block' => [
                        bless( {
                          'P6C::prefix::name' => 'when',
                          'P6C::prefix::args' => bless( {
                            'P6C::ValueList::vals' => [
                              bless( {
                                'P6C::variable::type' => 'PerlHash',
                                'P6C::variable::topical' => '',
                                'P6C::variable::name' => '%operator',
                                'P6C::variable::global' => '',
                                'P6C::variable::implicit' => 0
                              }, 'P6C::variable' ),
                              bless( {
                                'P6C::closure::params' => undef,
                                'P6C::closure::block' => [
                                  bless( {
                                    'P6C::Binop::r' => bless( {
                                      'P6C::prefix::name' => 'splice',
                                      'P6C::prefix::args' => bless( {
                                        'P6C::Binop::r' => bless( {
                                          'P6C::prefix::name' => '-',
                                          'P6C::prefix::args' => bless( {
                                            'P6C::sv_literal::lval' => '2',
                                            'P6C::sv_literal::type' => 'PerlInt'
                                          }, 'P6C::sv_literal' )
                                        }, 'P6C::prefix' ),
                                        'P6C::Binop::op' => ',',
                                        'P6C::Binop::l' => bless( {
                                          'P6C::variable::type' => 'PerlArray',
                                          'P6C::variable::topical' => '',
                                          'P6C::variable::name' => '@stack',
                                          'P6C::variable::global' => '',
                                          'P6C::variable::implicit' => 0
                                        }, 'P6C::variable' )
                                      }, 'P6C::Binop' )
                                    }, 'P6C::prefix' ),
                                    'P6C::Binop::op' => '=',
                                    'P6C::Binop::l' => bless( {
                                      'P6C::decl::qual' => bless( {
                                        'P6C::scope_class::scope' => 'my',
                                        'P6C::scope_class::class' => undef
                                      }, 'P6C::scope_class' ),
                                      'P6C::decl::vars' => bless( {
                                        'P6C::variable::type' => 'PerlArray',
                                        'P6C::variable::topical' => '',
                                        'P6C::variable::name' => '@args',
                                        'P6C::variable::global' => '',
                                        'P6C::variable::implicit' => 0
                                      }, 'P6C::variable' ),
                                      'P6C::decl::props' => []
                                    }, 'P6C::decl' )
                                  }, 'P6C::Binop' ),
                                  bless( {
                                    'P6C::prefix::name' => 'push',
                                    'P6C::prefix::args' => bless( {
                                      'P6C::Binop::r' => bless( {
                                        'P6C::subscript_exp::subscripts' => [
                                          bless( {
                                            'P6C::indices::type' => 'PerlHash',
                                            'P6C::indices::indices' => bless( {
                                              'P6C::variable::type' => 'PerlUndef',
                                              'P6C::variable::topical' => '',
                                              'P6C::variable::name' => '$token',
                                              'P6C::variable::global' => '',
                                              'P6C::variable::implicit' => 0
                                            }, 'P6C::variable' )
                                          }, 'P6C::indices' ),
                                          bless( {
                                            'P6C::indices::type' => 'Sub',
                                            'P6C::indices::indices' => bless( {
                                              'P6C::context::thing' => bless( {
                                                'P6C::variable::type' => 'PerlArray',
                                                'P6C::variable::topical' => '',
                                                'P6C::variable::name' => '@args',
                                                'P6C::variable::global' => '',
                                                'P6C::variable::implicit' => 0
                                              }, 'P6C::variable' ),
                                              'P6C::context::ctx' => '*'
                                            }, 'P6C::context' )
                                          }, 'P6C::indices' )
                                        ],
                                        'P6C::subscript_exp::thing' => bless( {
                                          'P6C::variable::type' => 'PerlHash',
                                          'P6C::variable::topical' => '',
                                          'P6C::variable::name' => '%operator',
                                          'P6C::variable::global' => '',
                                          'P6C::variable::implicit' => 0
                                        }, 'P6C::variable' )
                                      }, 'P6C::subscript_exp' ),
                                      'P6C::Binop::op' => ',',
                                      'P6C::Binop::l' => bless( {
                                        'P6C::variable::type' => 'PerlArray',
                                        'P6C::variable::topical' => '',
                                        'P6C::variable::name' => '@stack',
                                        'P6C::variable::global' => '',
                                        'P6C::variable::implicit' => 0
                                      }, 'P6C::variable' )
                                    }, 'P6C::Binop' )
                                  }, 'P6C::prefix' )
                                ]
                              }, 'P6C::closure' )
                            ]
                          }, 'P6C::ValueList' )
                        }, 'P6C::prefix' ),
                        bless( {
                          'P6C::prefix::name' => 'when',
                          'P6C::prefix::args' => bless( {
                            'P6C::ValueList::vals' => [
                              bless( {
                                'P6C::Binop::r' => bless( {
                                  'P6C::sv_literal::lval' => '"="',
                                  'P6C::sv_literal::type' => 'PerlString'
                                }, 'P6C::sv_literal' ),
                                'P6C::Binop::op' => ',',
                                'P6C::Binop::l' => bless( {
                                  'P6C::Binop::r' => bless( {
                                    'P6C::sv_literal::lval' => '";"',
                                    'P6C::sv_literal::type' => 'PerlString'
                                  }, 'P6C::sv_literal' ),
                                  'P6C::Binop::op' => ',',
                                  'P6C::Binop::l' => bless( {
                                    'P6C::sv_literal::lval' => '"."',
                                    'P6C::sv_literal::type' => 'PerlString'
                                  }, 'P6C::sv_literal' )
                                }, 'P6C::Binop' )
                              }, 'P6C::Binop' ),
                              bless( {
                                'P6C::closure::params' => undef,
                                'P6C::closure::block' => [
                                  bless( {
                                    'P6C::prefix::name' => 'last',
                                    'P6C::prefix::args' => undef
                                  }, 'P6C::prefix' )
                                ]
                              }, 'P6C::closure' )
                            ]
                          }, 'P6C::ValueList' )
                        }, 'P6C::prefix' ),
                        bless( {
                          'P6C::directive::args' => undef,
                          'P6C::directive::thing' => 'fatal',
                          'P6C::directive::name' => 'use'
                        }, 'P6C::directive' ),
                        bless( {
                          'P6C::prefix::name' => 'push',
                          'P6C::prefix::args' => bless( {
                            'P6C::Binop::r' => bless( {
                              'P6C::prefix::name' => 'get_data',
                              'P6C::prefix::args' => bless( {
                                'P6C::ValueList::vals' => [
                                  bless( {
                                    'P6C::variable::type' => 'PerlUndef',
                                    'P6C::variable::topical' => '',
                                    'P6C::variable::name' => '$token',
                                    'P6C::variable::global' => '',
                                    'P6C::variable::implicit' => 0
                                  }, 'P6C::variable' )
                                ]
                              }, 'P6C::ValueList' )
                            }, 'P6C::prefix' ),
                            'P6C::Binop::op' => ',',
                            'P6C::Binop::l' => bless( {
                              'P6C::variable::type' => 'PerlArray',
                              'P6C::variable::topical' => '',
                              'P6C::variable::name' => '@stack',
                              'P6C::variable::global' => '',
                              'P6C::variable::implicit' => 0
                            }, 'P6C::variable' )
                          }, 'P6C::Binop' )
                        }, 'P6C::prefix' ),
                        bless( {
                          'P6C::prefix::name' => 'CATCH',
                          'P6C::prefix::args' => bless( {
                            'P6C::closure::params' => undef,
                            'P6C::closure::block' => []
                          }, 'P6C::closure' )
                        }, 'P6C::prefix' )
                      ]
                    }, 'P6C::closure' )
                  }, 'P6C::prefix' ),
                  bless( {
                    'P6C::prefix::name' => 'NEXT',
                    'P6C::prefix::args' => bless( {
                      'P6C::closure::params' => undef,
                      'P6C::closure::block' => [
                        bless( {
                          'P6C::incr::op' => '++',
                          'P6C::incr::post' => 1,
                          'P6C::incr::thing' => bless( {
                            'P6C::variable::type' => 'PerlUndef',
                            'P6C::variable::topical' => '',
                            'P6C::variable::name' => '$toknum',
                            'P6C::variable::global' => '',
                            'P6C::variable::implicit' => 0
                          }, 'P6C::variable' )
                        }, 'P6C::incr' )
                      ]
                    }, 'P6C::closure' )
                  }, 'P6C::prefix' )
                ]
              }, 'P6C::closure' )
            ]
          }, 'P6C::ValueList' )
        }, 'P6C::prefix' ),
        bless( {
          'P6C::guard::expr' => bless( {
            'P6C::adverb::thing' => bless( {
              'P6C::prefix::name' => 'fail',
              'P6C::prefix::args' => 'Err::BadData'
            }, 'P6C::prefix' ),
            'P6C::adverb::adv' => bless( {
              'P6C::pair::l' => 'msg',
              'P6C::pair::r' => bless( {
                'P6C::sv_literal::lval' => '"Too many operands"',
                'P6C::sv_literal::type' => 'PerlString'
              }, 'P6C::sv_literal' )
            }, 'P6C::pair' )
          }, 'P6C::adverb' ),
          'P6C::guard::name' => 'if',
          'P6C::guard::test' => bless( {
            'P6C::compare::seq' => [
              bless( {
                'P6C::variable::type' => 'PerlArray',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '@stack',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' ),
              '>',
              bless( {
                'P6C::sv_literal::lval' => '1',
                'P6C::sv_literal::type' => 'PerlInt'
              }, 'P6C::sv_literal' )
            ]
          }, 'P6C::compare' )
        }, 'P6C::guard' ),
        bless( {
          'P6C::prefix::name' => 'return',
          'P6C::prefix::args' => bless( {
            'P6C::Binop::r' => bless( {
              'P6C::but::thing' => bless( {
                'P6C::prefix::name' => 'pop',
                'P6C::prefix::args' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@stack',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::prefix' ),
              'P6C::but::buts' => [
                'true'
              ]
            }, 'P6C::but' ),
            'P6C::Binop::op' => '=',
            'P6C::Binop::l' => bless( {
              'P6C::subscript_exp::subscripts' => [
                bless( {
                  'P6C::indices::type' => 'PerlHash',
                  'P6C::indices::indices' => bless( {
                    'P6C::Binop::r' => bless( {
                      'P6C::variable::type' => 'PerlUndef',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '$i',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' ),
                    'P6C::Binop::op' => '_',
                    'P6C::Binop::l' => bless( {
                      'P6C::sv_literal::lval' => '"$"',
                      'P6C::sv_literal::type' => 'PerlString'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::Binop' )
                }, 'P6C::indices' )
              ],
              'P6C::subscript_exp::thing' => bless( {
                'P6C::variable::type' => 'PerlHash',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '%var',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' )
            }, 'P6C::subscript_exp' )
          }, 'P6C::Binop' )
        }, 'P6C::prefix' )
      ]
    }, 'P6C::closure' )
  }, 'P6C::sub_def' ),
  bless( {
    'P6C::directive::args' => undef,
    'P6C::directive::thing' => 'main',
    'P6C::directive::name' => 'module'
  }, 'P6C::directive' ),
  bless( {
    'P6C::prefix::name' => 'for',
    'P6C::prefix::args' => bless( {
      'P6C::ValueList::vals' => [
        bless( {
          'P6C::Binop::r' => bless( {
            'P6C::sv_literal::lval' => '10000',
            'P6C::sv_literal::type' => 'PerlInt'
          }, 'P6C::sv_literal' ),
          'P6C::Binop::op' => '..',
          'P6C::Binop::l' => bless( {
            'P6C::sv_literal::lval' => '1',
            'P6C::sv_literal::type' => 'PerlInt'
          }, 'P6C::sv_literal' )
        }, 'P6C::Binop' ),
        bless( {
          'P6C::closure::params' => bless( {
            'P6C::variable::type' => 'PerlUndef',
            'P6C::variable::topical' => '',
            'P6C::variable::name' => '$i',
            'P6C::variable::global' => '',
            'P6C::variable::implicit' => 0
          }, 'P6C::variable' ),
          'P6C::closure::block' => [
            bless( {
              'P6C::prefix::name' => 'print',
              'P6C::prefix::args' => bless( {
                'P6C::sv_literal::lval' => '"$i> "',
                'P6C::sv_literal::type' => 'PerlString'
              }, 'P6C::sv_literal' )
            }, 'P6C::prefix' ),
            bless( {
              'P6C::Binop::r' => bless( {
                'P6C::prefix::name' => 'last',
                'P6C::prefix::args' => undef
              }, 'P6C::prefix' ),
              'P6C::Binop::op' => 'err',
              'P6C::Binop::l' => bless( {
                'P6C::Binop::r' => bless( {
                  'P6C::prefix::name' => 'readline',
                  'P6C::prefix::args' => bless( {
                    'P6C::variable::type' => 'PerlIO',
                    'P6C::variable::topical' => undef,
                    'P6C::variable::name' => '*ARGS',
                    'P6C::variable::global' => undef,
                    'P6C::variable::implicit' => undef
                  }, 'P6C::variable' )
                }, 'P6C::prefix' ),
                'P6C::Binop::op' => '=',
                'P6C::Binop::l' => bless( {
                  'P6C::decl::qual' => bless( {
                    'P6C::scope_class::scope' => 'my',
                    'P6C::scope_class::class' => undef
                  }, 'P6C::scope_class' ),
                  'P6C::decl::vars' => bless( {
                    'P6C::variable::type' => 'PerlUndef',
                    'P6C::variable::topical' => '',
                    'P6C::variable::name' => '$expr',
                    'P6C::variable::global' => '',
                    'P6C::variable::implicit' => 0
                  }, 'P6C::variable' ),
                  'P6C::decl::props' => []
                }, 'P6C::decl' )
              }, 'P6C::Binop' )
            }, 'P6C::Binop' ),
            bless( {
              'P6C::prefix::name' => 'print',
              'P6C::prefix::args' => bless( {
                'P6C::sv_literal::lval' => '"$i> $( Calc::calc(i=>$i, expr=>$expr) )\\n"',
                'P6C::sv_literal::type' => 'PerlString'
              }, 'P6C::sv_literal' )
            }, 'P6C::prefix' )
          ]
        }, 'P6C::closure' )
      ]
    }, 'P6C::ValueList' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::directive::args' => undef,
    'P6C::directive::thing' => 'warnings',
    'P6C::directive::name' => 'use'
  }, 'P6C::directive' ),
  bless( {
    'P6C::guard::expr' => bless( {
      'P6C::prefix::name' => 'die',
      'P6C::prefix::args' => bless( {
        'P6C::ValueList::vals' => []
      }, 'P6C::ValueList' )
    }, 'P6C::prefix' ),
    'P6C::guard::name' => 'if',
    'P6C::guard::test' => bless( {
      'P6C::variable::type' => 'PerlUndef',
      'P6C::variable::topical' => 0,
      'P6C::variable::name' => '$!',
      'P6C::variable::global' => 0,
      'P6C::variable::implicit' => 0
    }, 'P6C::variable' )
  }, 'P6C::guard' ),
  bless( {
    'P6C::prefix::name' => 'while',
    'P6C::prefix::args' => bless( {
      'P6C::ValueList::vals' => [
        bless( {
          'P6C::prefix::name' => 'readline',
          'P6C::prefix::args' => bless( {
            'P6C::variable::type' => 'PerlIO',
            'P6C::variable::topical' => undef,
            'P6C::variable::name' => '*ARGS',
            'P6C::variable::global' => undef,
            'P6C::variable::implicit' => undef
          }, 'P6C::variable' )
        }, 'P6C::prefix' ),
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => [
            bless( {
              'P6C::prefix::name' => 'if',
              'P6C::prefix::args' => [
                [
                  undef,
                  bless( {
                    'P6C::sv_literal::lval' => '"^From "',
                    'P6C::sv_literal::type' => 'PerlString'
                  }, 'P6C::sv_literal' ),
                  bless( {
                    'P6C::closure::params' => undef,
                    'P6C::closure::block' => [
                      bless( {
                        'P6C::guard::expr' => bless( {
                          'P6C::subscript_exp::subscripts' => [
                            bless( {
                              'P6C::indices::type' => 'Sub',
                              'P6C::indices::indices' => bless( {
                                'P6C::variable::type' => 'PerlUndef',
                                'P6C::variable::topical' => '',
                                'P6C::variable::name' => '$msg',
                                'P6C::variable::global' => '',
                                'P6C::variable::implicit' => 0
                              }, 'P6C::variable' )
                            }, 'P6C::indices' )
                          ],
                          'P6C::subscript_exp::thing' => bless( {
                            'P6C::variable::type' => 'PerlUndef',
                            'P6C::variable::topical' => '',
                            'P6C::variable::name' => '$process',
                            'P6C::variable::global' => '',
                            'P6C::variable::implicit' => 0
                          }, 'P6C::variable' )
                        }, 'P6C::subscript_exp' ),
                        'P6C::guard::name' => 'if',
                        'P6C::guard::test' => bless( {
                          'P6C::variable::type' => 'PerlUndef',
                          'P6C::variable::topical' => '',
                          'P6C::variable::name' => '$msg',
                          'P6C::variable::global' => '',
                          'P6C::variable::implicit' => 0
                        }, 'P6C::variable' )
                      }, 'P6C::guard' ),
                      bless( {
                        'P6C::Binop::r' => bless( {
                          'P6C::sv_literal::lval' => '""',
                          'P6C::sv_literal::type' => 'PerlString'
                        }, 'P6C::sv_literal' ),
                        'P6C::Binop::op' => '=',
                        'P6C::Binop::l' => bless( {
                          'P6C::variable::type' => 'PerlUndef',
                          'P6C::variable::topical' => '',
                          'P6C::variable::name' => '$msg',
                          'P6C::variable::global' => '',
                          'P6C::variable::implicit' => 0
                        }, 'P6C::variable' )
                      }, 'P6C::Binop' )
                    ]
                  }, 'P6C::closure' )
                ]
              ]
            }, 'P6C::prefix' ),
            bless( {
              'P6C::Binop::r' => bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$_',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' ),
              'P6C::Binop::op' => '_=',
              'P6C::Binop::l' => bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$msg',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' )
            }, 'P6C::Binop' )
          ]
        }, 'P6C::closure' )
      ]
    }, 'P6C::ValueList' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::guard::expr' => bless( {
      'P6C::subscript_exp::subscripts' => [
        bless( {
          'P6C::indices::type' => 'Sub',
          'P6C::indices::indices' => bless( {
            'P6C::variable::type' => 'PerlUndef',
            'P6C::variable::topical' => '',
            'P6C::variable::name' => '$msg',
            'P6C::variable::global' => '',
            'P6C::variable::implicit' => 0
          }, 'P6C::variable' )
        }, 'P6C::indices' )
      ],
      'P6C::subscript_exp::thing' => bless( {
        'P6C::variable::type' => 'PerlUndef',
        'P6C::variable::topical' => '',
        'P6C::variable::name' => '$process',
        'P6C::variable::global' => '',
        'P6C::variable::implicit' => 0
      }, 'P6C::variable' )
    }, 'P6C::subscript_exp' ),
    'P6C::guard::name' => 'if',
    'P6C::guard::test' => bless( {
      'P6C::variable::type' => 'PerlUndef',
      'P6C::variable::topical' => '',
      'P6C::variable::name' => '$msg',
      'P6C::variable::global' => '',
      'P6C::variable::implicit' => 0
    }, 'P6C::variable' )
  }, 'P6C::guard' ),
  bless( {
    'P6C::sub_def::props' => [],
    'P6C::sub_def::qual' => undef,
    'P6C::sub_def::name' => 'action',
    'P6C::sub_def::closure' => bless( {
      'P6C::closure::params' => undef,
      'P6C::closure::block' => [
        bless( {
          'P6C::prefix::name' => 'print',
          'P6C::prefix::args' => bless( {
            'P6C::sv_literal::lval' => '"@_[0]\\n"',
            'P6C::sv_literal::type' => 'PerlString'
          }, 'P6C::sv_literal' )
        }, 'P6C::prefix' ),
        bless( {
          'P6C::prefix::name' => 'system',
          'P6C::prefix::args' => bless( {
            'P6C::subscript_exp::subscripts' => [
              bless( {
                'P6C::indices::type' => 'PerlArray',
                'P6C::indices::indices' => bless( {
                  'P6C::sv_literal::lval' => '1',
                  'P6C::sv_literal::type' => 'PerlInt'
                }, 'P6C::sv_literal' )
              }, 'P6C::indices' )
            ],
            'P6C::subscript_exp::thing' => bless( {
              'P6C::variable::type' => 'PerlArray',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '@_',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          }, 'P6C::subscript_exp' )
        }, 'P6C::prefix' )
      ]
    }, 'P6C::closure' )
  }, 'P6C::sub_def' ),
  bless( {
    'P6C::prefix::name' => 'foreach',
    'P6C::prefix::args' => bless( {
      'P6C::ValueList::vals' => [
        bless( {
          'P6C::decl::qual' => bless( {
            'P6C::scope_class::scope' => 'my',
            'P6C::scope_class::class' => undef
          }, 'P6C::scope_class' ),
          'P6C::decl::vars' => [
            bless( {
              'P6C::variable::type' => 'PerlUndef',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '$file',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          ],
          'P6C::decl::props' => []
        }, 'P6C::decl' ),
        bless( {
          'P6C::variable::type' => 'PerlArray',
          'P6C::variable::topical' => '',
          'P6C::variable::name' => '@ARGS',
          'P6C::variable::global' => '',
          'P6C::variable::implicit' => 0
        }, 'P6C::variable' ),
        [
          bless( {
            'P6C::Binop::r' => bless( {
              'P6C::variable::type' => 'PerlUndef',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '$file',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' ),
            'P6C::Binop::op' => '=',
            'P6C::Binop::l' => bless( {
              'P6C::decl::qual' => bless( {
                'P6C::scope_class::scope' => 'my',
                'P6C::scope_class::class' => undef
              }, 'P6C::scope_class' ),
              'P6C::decl::vars' => bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$original',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' ),
              'P6C::decl::props' => []
            }, 'P6C::decl' )
          }, 'P6C::Binop' ),
          bless( {
            'P6C::prefix::name' => 'if',
            'P6C::prefix::args' => [
              [
                undef,
                bless( {
                  'P6C::sv_literal::lval' => '1',
                  'P6C::sv_literal::type' => 'PerlInt'
                }, 'P6C::sv_literal' ),
                bless( {
                  'P6C::closure::params' => undef,
                  'P6C::closure::block' => [
                    bless( {
                      'P6C::prefix::name' => 'action',
                      'P6C::prefix::args' => bless( {
                        'P6C::Binop::r' => bless( {
                          'P6C::sv_literal::lval' => '"uudecode $file.$1"',
                          'P6C::sv_literal::type' => 'PerlString'
                        }, 'P6C::sv_literal' ),
                        'P6C::Binop::op' => ',',
                        'P6C::Binop::l' => bless( {
                          'P6C::sv_literal::lval' => '"unuu\'ing $file.$1"',
                          'P6C::sv_literal::type' => 'PerlString'
                        }, 'P6C::sv_literal' )
                      }, 'P6C::Binop' )
                    }, 'P6C::prefix' )
                  ]
                }, 'P6C::closure' )
              ]
            ]
          }, 'P6C::prefix' ),
          bless( {
            'P6C::prefix::name' => 'if',
            'P6C::prefix::args' => [
              [
                undef,
                bless( {
                  'P6C::sv_literal::lval' => '2',
                  'P6C::sv_literal::type' => 'PerlInt'
                }, 'P6C::sv_literal' ),
                bless( {
                  'P6C::closure::params' => undef,
                  'P6C::closure::block' => [
                    bless( {
                      'P6C::prefix::name' => 'action',
                      'P6C::prefix::args' => bless( {
                        'P6C::Binop::r' => bless( {
                          'P6C::sv_literal::lval' => '"gunzip $file.$1"',
                          'P6C::sv_literal::type' => 'PerlString'
                        }, 'P6C::sv_literal' ),
                        'P6C::Binop::op' => ',',
                        'P6C::Binop::l' => bless( {
                          'P6C::sv_literal::lval' => '"gunzip\'ing $file.$1"',
                          'P6C::sv_literal::type' => 'PerlString'
                        }, 'P6C::sv_literal' )
                      }, 'P6C::Binop' )
                    }, 'P6C::prefix' ),
                    bless( {
                      'P6C::guard::expr' => bless( {
                        'P6C::Binop::r' => bless( {
                          'P6C::sv_literal::lval' => '".tar"',
                          'P6C::sv_literal::type' => 'PerlString'
                        }, 'P6C::sv_literal' ),
                        'P6C::Binop::op' => '_=',
                        'P6C::Binop::l' => bless( {
                          'P6C::variable::type' => 'PerlUndef',
                          'P6C::variable::topical' => '',
                          'P6C::variable::name' => '$file',
                          'P6C::variable::global' => '',
                          'P6C::variable::implicit' => 0
                        }, 'P6C::variable' )
                      }, 'P6C::Binop' ),
                      'P6C::guard::name' => 'if',
                      'P6C::guard::test' => bless( {
                        'P6C::compare::seq' => [
                          bless( {
                            'P6C::variable::type' => 'PerlUndef',
                            'P6C::variable::topical' => 0,
                            'P6C::variable::name' => '$1',
                            'P6C::variable::global' => 0,
                            'P6C::variable::implicit' => 0
                          }, 'P6C::variable' ),
                          'eq',
                          bless( {
                            'P6C::sv_literal::lval' => '"tgz"',
                            'P6C::sv_literal::type' => 'PerlString'
                          }, 'P6C::sv_literal' )
                        ]
                      }, 'P6C::compare' )
                    }, 'P6C::guard' )
                  ]
                }, 'P6C::closure' )
              ]
            ]
          }, 'P6C::prefix' ),
          bless( {
            'P6C::Binop::r' => bless( {
              'P6C::prefix::name' => 'bundling_for',
              'P6C::prefix::args' => bless( {
                'P6C::Binop::r' => bless( {
                  'P6C::variable::type' => 'PerlUndef',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '$original',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' ),
                'P6C::Binop::op' => ',',
                'P6C::Binop::l' => bless( {
                  'P6C::variable::type' => 'PerlUndef',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '$file',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::Binop' )
            }, 'P6C::prefix' ),
            'P6C::Binop::op' => '=',
            'P6C::Binop::l' => bless( {
              'P6C::decl::qual' => bless( {
                'P6C::scope_class::scope' => 'my',
                'P6C::scope_class::class' => undef
              }, 'P6C::scope_class' ),
              'P6C::decl::vars' => [
                bless( {
                  'P6C::variable::type' => 'PerlUndef',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '$to',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' ),
                bless( {
                  'P6C::variable::type' => 'PerlUndef',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '$enbundle',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' ),
                bless( {
                  'P6C::variable::type' => 'PerlUndef',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '$relfile',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              ],
              'P6C::decl::props' => []
            }, 'P6C::decl' )
          }, 'P6C::Binop' ),
          bless( {
            'P6C::prefix::name' => 'action',
            'P6C::prefix::args' => bless( {
              'P6C::Binop::r' => bless( {
                'P6C::sv_literal::lval' => '"$enbundle tar -xpf $relfile"',
                'P6C::sv_literal::type' => 'PerlString'
              }, 'P6C::sv_literal' ),
              'P6C::Binop::op' => ',',
              'P6C::Binop::l' => bless( {
                'P6C::sv_literal::lval' => '"untar\'ing $file $to"',
                'P6C::sv_literal::type' => 'PerlString'
              }, 'P6C::sv_literal' )
            }, 'P6C::Binop' )
          }, 'P6C::prefix' )
        ]
      ]
    }, 'P6C::ValueList' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::sub_def::props' => [],
    'P6C::sub_def::qual' => undef,
    'P6C::sub_def::name' => 'bundling_for',
    'P6C::sub_def::closure' => bless( {
      'P6C::closure::params' => undef,
      'P6C::closure::block' => [
        bless( {
          'P6C::Binop::r' => bless( {
            'P6C::variable::type' => 'PerlArray',
            'P6C::variable::topical' => '',
            'P6C::variable::name' => '@_',
            'P6C::variable::global' => '',
            'P6C::variable::implicit' => 0
          }, 'P6C::variable' ),
          'P6C::Binop::op' => '=',
          'P6C::Binop::l' => bless( {
            'P6C::decl::qual' => bless( {
              'P6C::scope_class::scope' => 'my',
              'P6C::scope_class::class' => undef
            }, 'P6C::scope_class' ),
            'P6C::decl::vars' => [
              bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$file',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' ),
              bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$dir',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' )
            ],
            'P6C::decl::props' => []
          }, 'P6C::decl' )
        }, 'P6C::Binop' ),
        bless( {
          'P6C::prefix::name' => 'chomp',
          'P6C::prefix::args' => bless( {
            'P6C::Binop::r' => bless( {
              'P6C::Binop::r' => bless( {
                'P6C::prefix::name' => 'readline',
                'P6C::prefix::args' => bless( {
                  'P6C::variable::type' => 'PerlUndef',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '$FILELIST',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::prefix' ),
              'P6C::Binop::op' => '&&',
              'P6C::Binop::l' => bless( {
                'P6C::Binop::r' => bless( {
                  'P6C::prefix::name' => 'open',
                  'P6C::prefix::args' => bless( {
                    'P6C::sv_literal::lval' => '"tar t <$file|"',
                    'P6C::sv_literal::type' => 'PerlString'
                  }, 'P6C::sv_literal' )
                }, 'P6C::prefix' ),
                'P6C::Binop::op' => '=',
                'P6C::Binop::l' => bless( {
                  'P6C::variable::type' => 'PerlUndef',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '$FILELIST',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::Binop' )
            }, 'P6C::Binop' ),
            'P6C::Binop::op' => '=',
            'P6C::Binop::l' => bless( {
              'P6C::decl::qual' => bless( {
                'P6C::scope_class::scope' => 'my',
                'P6C::scope_class::class' => undef
              }, 'P6C::scope_class' ),
              'P6C::decl::vars' => bless( {
                'P6C::variable::type' => 'PerlArray',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '@files',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' ),
              'P6C::decl::props' => []
            }, 'P6C::decl' )
          }, 'P6C::Binop' )
        }, 'P6C::prefix' ),
        bless( {
          'P6C::guard::expr' => bless( {
            'P6C::prefix::name' => 'return',
            'P6C::prefix::args' => bless( {
              'P6C::Binop::r' => bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$file',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' ),
              'P6C::Binop::op' => ',',
              'P6C::Binop::l' => bless( {
                'P6C::Binop::r' => bless( {
                  'P6C::sv_literal::lval' => '""',
                  'P6C::sv_literal::type' => 'PerlString'
                }, 'P6C::sv_literal' ),
                'P6C::Binop::op' => ',',
                'P6C::Binop::l' => bless( {
                  'P6C::sv_literal::lval' => '"(no contents)"',
                  'P6C::sv_literal::type' => 'PerlString'
                }, 'P6C::sv_literal' )
              }, 'P6C::Binop' )
            }, 'P6C::Binop' )
          }, 'P6C::prefix' ),
          'P6C::guard::name' => 'if',
          'P6C::guard::test' => bless( {
            'P6C::prefix::name' => '!',
            'P6C::prefix::args' => bless( {
              'P6C::variable::type' => 'PerlArray',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '@files',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          }, 'P6C::prefix' )
        }, 'P6C::guard' ),
        bless( {
          'P6C::guard::expr' => bless( {
            'P6C::prefix::name' => 'return',
            'P6C::prefix::args' => bless( {
              'P6C::Binop::r' => bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$file',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' ),
              'P6C::Binop::op' => ',',
              'P6C::Binop::l' => bless( {
                'P6C::Binop::r' => bless( {
                  'P6C::sv_literal::lval' => '""',
                  'P6C::sv_literal::type' => 'PerlString'
                }, 'P6C::sv_literal' ),
                'P6C::Binop::op' => ',',
                'P6C::Binop::l' => bless( {
                  'P6C::sv_literal::lval' => '"to @files[0]"',
                  'P6C::sv_literal::type' => 'PerlString'
                }, 'P6C::sv_literal' )
              }, 'P6C::Binop' )
            }, 'P6C::Binop' )
          }, 'P6C::prefix' ),
          'P6C::guard::name' => 'if',
          'P6C::guard::test' => bless( {
            'P6C::Binop::r' => bless( {
              'P6C::Binop::r' => bless( {
                'P6C::prefix::name' => '!',
                'P6C::prefix::args' => bless( {
                  'P6C::prefix::name' => 'grep',
                  'P6C::prefix::args' => bless( {
                    'P6C::ValueList::vals' => [
                      bless( {
                        'P6C::closure::params' => undef,
                        'P6C::closure::block' => [
                          bless( {
                            'P6C::Binop::r' => bless( {
                              'P6C::sv_literal::lval' => '"^\\Q@files[0]"',
                              'P6C::sv_literal::type' => 'PerlString'
                            }, 'P6C::sv_literal' ),
                            'P6C::Binop::op' => '!~',
                            'P6C::Binop::l' => bless( {
                              'P6C::variable::type' => 'PerlUndef',
                              'P6C::variable::topical' => '',
                              'P6C::variable::name' => '$_',
                              'P6C::variable::global' => '',
                              'P6C::variable::implicit' => 0
                            }, 'P6C::variable' )
                          }, 'P6C::Binop' )
                        ]
                      }, 'P6C::closure' ),
                      bless( {
                        'P6C::subscript_exp::subscripts' => [
                          bless( {
                            'P6C::indices::type' => 'PerlArray',
                            'P6C::indices::indices' => bless( {
                              'P6C::Binop::r' => bless( {
                                'P6C::sv_literal::lval' => '10000',
                                'P6C::sv_literal::type' => 'PerlInt'
                              }, 'P6C::sv_literal' ),
                              'P6C::Binop::op' => '..',
                              'P6C::Binop::l' => bless( {
                                'P6C::sv_literal::lval' => '1',
                                'P6C::sv_literal::type' => 'PerlInt'
                              }, 'P6C::sv_literal' )
                            }, 'P6C::Binop' )
                          }, 'P6C::indices' )
                        ],
                        'P6C::subscript_exp::thing' => bless( {
                          'P6C::variable::type' => 'PerlArray',
                          'P6C::variable::topical' => '',
                          'P6C::variable::name' => '@files',
                          'P6C::variable::global' => '',
                          'P6C::variable::implicit' => 0
                        }, 'P6C::variable' )
                      }, 'P6C::subscript_exp' )
                    ]
                  }, 'P6C::ValueList' )
                }, 'P6C::prefix' )
              }, 'P6C::prefix' ),
              'P6C::Binop::op' => '&&',
              'P6C::Binop::l' => bless( {
                'P6C::Binop::r' => bless( {
                  'P6C::sv_literal::lval' => '"/$"',
                  'P6C::sv_literal::type' => 'PerlString'
                }, 'P6C::sv_literal' ),
                'P6C::Binop::op' => '=~',
                'P6C::Binop::l' => bless( {
                  'P6C::subscript_exp::subscripts' => [
                    bless( {
                      'P6C::indices::type' => 'PerlArray',
                      'P6C::indices::indices' => bless( {
                        'P6C::sv_literal::lval' => '0',
                        'P6C::sv_literal::type' => 'PerlInt'
                      }, 'P6C::sv_literal' )
                    }, 'P6C::indices' )
                  ],
                  'P6C::subscript_exp::thing' => bless( {
                    'P6C::variable::type' => 'PerlArray',
                    'P6C::variable::topical' => '',
                    'P6C::variable::name' => '@files',
                    'P6C::variable::global' => '',
                    'P6C::variable::implicit' => 0
                  }, 'P6C::variable' )
                }, 'P6C::subscript_exp' )
              }, 'P6C::Binop' )
            }, 'P6C::Binop' ),
            'P6C::Binop::op' => '||',
            'P6C::Binop::l' => bless( {
              'P6C::compare::seq' => [
                bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@files',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' ),
                '==',
                bless( {
                  'P6C::sv_literal::lval' => '1',
                  'P6C::sv_literal::type' => 'PerlInt'
                }, 'P6C::sv_literal' )
              ]
            }, 'P6C::compare' )
          }, 'P6C::Binop' )
        }, 'P6C::guard' ),
        bless( {
          'P6C::Binop::r' => bless( {
            'P6C::sv_literal::lval' => '".CONTENTS"',
            'P6C::sv_literal::type' => 'PerlString'
          }, 'P6C::sv_literal' ),
          'P6C::Binop::op' => '_=',
          'P6C::Binop::l' => bless( {
            'P6C::variable::type' => 'PerlUndef',
            'P6C::variable::topical' => '',
            'P6C::variable::name' => '$dir',
            'P6C::variable::global' => '',
            'P6C::variable::implicit' => 0
          }, 'P6C::variable' )
        }, 'P6C::Binop' ),
        bless( {
          'P6C::prefix::name' => 'return',
          'P6C::prefix::args' => bless( {
            'P6C::Binop::r' => bless( {
              'P6C::sv_literal::lval' => '"../$file"',
              'P6C::sv_literal::type' => 'PerlString'
            }, 'P6C::sv_literal' ),
            'P6C::Binop::op' => ',',
            'P6C::Binop::l' => bless( {
              'P6C::Binop::r' => bless( {
                'P6C::sv_literal::lval' => '"mkdir $dir; cd $dir;"',
                'P6C::sv_literal::type' => 'PerlString'
              }, 'P6C::sv_literal' ),
              'P6C::Binop::op' => ',',
              'P6C::Binop::l' => bless( {
                'P6C::sv_literal::lval' => '"to $dir"',
                'P6C::sv_literal::type' => 'PerlString'
              }, 'P6C::sv_literal' )
            }, 'P6C::Binop' )
          }, 'P6C::Binop' )
        }, 'P6C::prefix' )
      ]
    }, 'P6C::closure' )
  }, 'P6C::sub_def' ),
  bless( {
    'P6C::Binop::r' => bless( {
      'P6C::Binop::r' => bless( {
        'P6C::pair::l' => bless( {
          'P6C::prefix::name' => 'chr',
          'P6C::prefix::args' => bless( {
            'P6C::sv_literal::lval' => '255',
            'P6C::sv_literal::type' => 'PerlInt'
          }, 'P6C::sv_literal' )
        }, 'P6C::prefix' ),
        'P6C::pair::r' => bless( {
          'P6C::sv_literal::lval' => '""',
          'P6C::sv_literal::type' => 'PerlString'
        }, 'P6C::sv_literal' )
      }, 'P6C::pair' ),
      'P6C::Binop::op' => ',',
      'P6C::Binop::l' => bless( {
        'P6C::Binop::r' => bless( {
          'P6C::pair::l' => bless( {
            'P6C::prefix::name' => 'chr',
            'P6C::prefix::args' => bless( {
              'P6C::sv_literal::lval' => '254',
              'P6C::sv_literal::type' => 'PerlInt'
            }, 'P6C::sv_literal' )
          }, 'P6C::prefix' ),
          'P6C::pair::r' => bless( {
            'P6C::sv_literal::lval' => '""',
            'P6C::sv_literal::type' => 'PerlString'
          }, 'P6C::sv_literal' )
        }, 'P6C::pair' ),
        'P6C::Binop::op' => ',',
        'P6C::Binop::l' => bless( {
          'P6C::Binop::r' => bless( {
            'P6C::pair::l' => bless( {
              'P6C::prefix::name' => 'chr',
              'P6C::prefix::args' => bless( {
                'P6C::sv_literal::lval' => '253',
                'P6C::sv_literal::type' => 'PerlInt'
              }, 'P6C::sv_literal' )
            }, 'P6C::prefix' ),
            'P6C::pair::r' => bless( {
              'P6C::sv_literal::lval' => '""',
              'P6C::sv_literal::type' => 'PerlString'
            }, 'P6C::sv_literal' )
          }, 'P6C::pair' ),
          'P6C::Binop::op' => ',',
          'P6C::Binop::l' => bless( {
            'P6C::Binop::r' => bless( {
              'P6C::pair::l' => bless( {
                'P6C::prefix::name' => 'chr',
                'P6C::prefix::args' => bless( {
                  'P6C::sv_literal::lval' => '252',
                  'P6C::sv_literal::type' => 'PerlInt'
                }, 'P6C::sv_literal' )
              }, 'P6C::prefix' ),
              'P6C::pair::r' => bless( {
                'P6C::sv_literal::lval' => '""',
                'P6C::sv_literal::type' => 'PerlString'
              }, 'P6C::sv_literal' )
            }, 'P6C::pair' ),
            'P6C::Binop::op' => ',',
            'P6C::Binop::l' => bless( {
              'P6C::Binop::r' => bless( {
                'P6C::pair::l' => bless( {
                  'P6C::prefix::name' => 'chr',
                  'P6C::prefix::args' => bless( {
                    'P6C::sv_literal::lval' => '251',
                    'P6C::sv_literal::type' => 'PerlInt'
                  }, 'P6C::sv_literal' )
                }, 'P6C::prefix' ),
                'P6C::pair::r' => bless( {
                  'P6C::sv_literal::lval' => '""',
                  'P6C::sv_literal::type' => 'PerlString'
                }, 'P6C::sv_literal' )
              }, 'P6C::pair' ),
              'P6C::Binop::op' => ',',
              'P6C::Binop::l' => bless( {
                'P6C::Binop::r' => bless( {
                  'P6C::pair::l' => bless( {
                    'P6C::prefix::name' => 'chr',
                    'P6C::prefix::args' => bless( {
                      'P6C::sv_literal::lval' => '250',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::prefix' ),
                  'P6C::pair::r' => bless( {
                    'P6C::sv_literal::lval' => '""',
                    'P6C::sv_literal::type' => 'PerlString'
                  }, 'P6C::sv_literal' )
                }, 'P6C::pair' ),
                'P6C::Binop::op' => ',',
                'P6C::Binop::l' => bless( {
                  'P6C::Binop::r' => bless( {
                    'P6C::pair::l' => bless( {
                      'P6C::prefix::name' => 'chr',
                      'P6C::prefix::args' => bless( {
                        'P6C::sv_literal::lval' => '249',
                        'P6C::sv_literal::type' => 'PerlInt'
                      }, 'P6C::sv_literal' )
                    }, 'P6C::prefix' ),
                    'P6C::pair::r' => bless( {
                      'P6C::sv_literal::lval' => '""',
                      'P6C::sv_literal::type' => 'PerlString'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::pair' ),
                  'P6C::Binop::op' => ',',
                  'P6C::Binop::l' => bless( {
                    'P6C::Binop::r' => bless( {
                      'P6C::pair::l' => bless( {
                        'P6C::prefix::name' => 'chr',
                        'P6C::prefix::args' => bless( {
                          'P6C::sv_literal::lval' => '180',
                          'P6C::sv_literal::type' => 'PerlInt'
                        }, 'P6C::sv_literal' )
                      }, 'P6C::prefix' ),
                      'P6C::pair::r' => bless( {
                        'P6C::sv_literal::lval' => '"[JPY]"',
                        'P6C::sv_literal::type' => 'PerlString'
                      }, 'P6C::sv_literal' )
                    }, 'P6C::pair' ),
                    'P6C::Binop::op' => ',',
                    'P6C::Binop::l' => bless( {
                      'P6C::Binop::r' => bless( {
                        'P6C::pair::l' => bless( {
                          'P6C::prefix::name' => 'chr',
                          'P6C::prefix::args' => bless( {
                            'P6C::sv_literal::lval' => '179',
                            'P6C::sv_literal::type' => 'PerlInt'
                          }, 'P6C::sv_literal' )
                        }, 'P6C::prefix' ),
                        'P6C::pair::r' => bless( {
                          'P6C::sv_literal::lval' => '">="',
                          'P6C::sv_literal::type' => 'PerlString'
                        }, 'P6C::sv_literal' )
                      }, 'P6C::pair' ),
                      'P6C::Binop::op' => ',',
                      'P6C::Binop::l' => bless( {
                        'P6C::Binop::r' => bless( {
                          'P6C::pair::l' => bless( {
                            'P6C::prefix::name' => 'chr',
                            'P6C::prefix::args' => bless( {
                              'P6C::sv_literal::lval' => '178',
                              'P6C::sv_literal::type' => 'PerlInt'
                            }, 'P6C::sv_literal' )
                          }, 'P6C::prefix' ),
                          'P6C::pair::r' => bless( {
                            'P6C::sv_literal::lval' => '"<="',
                            'P6C::sv_literal::type' => 'PerlString'
                          }, 'P6C::sv_literal' )
                        }, 'P6C::pair' ),
                        'P6C::Binop::op' => ',',
                        'P6C::Binop::l' => bless( {
                          'P6C::Binop::r' => bless( {
                            'P6C::pair::l' => bless( {
                              'P6C::prefix::name' => 'chr',
                              'P6C::prefix::args' => bless( {
                                'P6C::sv_literal::lval' => '177',
                                'P6C::sv_literal::type' => 'PerlInt'
                              }, 'P6C::sv_literal' )
                            }, 'P6C::prefix' ),
                            'P6C::pair::r' => bless( {
                              'P6C::sv_literal::lval' => '"[+-]"',
                              'P6C::sv_literal::type' => 'PerlString'
                            }, 'P6C::sv_literal' )
                          }, 'P6C::pair' ),
                          'P6C::Binop::op' => ',',
                          'P6C::Binop::l' => bless( {
                            'P6C::Binop::r' => bless( {
                              'P6C::pair::l' => bless( {
                                'P6C::prefix::name' => 'chr',
                                'P6C::prefix::args' => bless( {
                                  'P6C::sv_literal::lval' => '176',
                                  'P6C::sv_literal::type' => 'PerlInt'
                                }, 'P6C::sv_literal' )
                              }, 'P6C::prefix' ),
                              'P6C::pair::r' => bless( {
                                'P6C::sv_literal::lval' => '"[inf]"',
                                'P6C::sv_literal::type' => 'PerlString'
                              }, 'P6C::sv_literal' )
                            }, 'P6C::pair' ),
                            'P6C::Binop::op' => ',',
                            'P6C::Binop::l' => bless( {
                              'P6C::Binop::r' => bless( {
                                'P6C::pair::l' => bless( {
                                  'P6C::prefix::name' => 'chr',
                                  'P6C::prefix::args' => bless( {
                                    'P6C::sv_literal::lval' => '133',
                                    'P6C::sv_literal::type' => 'PerlInt'
                                  }, 'P6C::sv_literal' )
                                }, 'P6C::prefix' ),
                                'P6C::pair::r' => bless( {
                                  'P6C::sv_literal::lval' => '"O"',
                                  'P6C::sv_literal::type' => 'PerlString'
                                }, 'P6C::sv_literal' )
                              }, 'P6C::pair' ),
                              'P6C::Binop::op' => ',',
                              'P6C::Binop::l' => bless( {
                                'P6C::Binop::r' => bless( {
                                  'P6C::pair::l' => bless( {
                                    'P6C::prefix::name' => 'chr',
                                    'P6C::prefix::args' => bless( {
                                      'P6C::sv_literal::lval' => '132',
                                      'P6C::sv_literal::type' => 'PerlInt'
                                    }, 'P6C::sv_literal' )
                                  }, 'P6C::prefix' ),
                                  'P6C::pair::r' => bless( {
                                    'P6C::sv_literal::lval' => '"N"',
                                    'P6C::sv_literal::type' => 'PerlString'
                                  }, 'P6C::sv_literal' )
                                }, 'P6C::pair' ),
                                'P6C::Binop::op' => ',',
                                'P6C::Binop::l' => bless( {
                                  'P6C::Binop::r' => bless( {
                                    'P6C::pair::l' => bless( {
                                      'P6C::prefix::name' => 'chr',
                                      'P6C::prefix::args' => bless( {
                                        'P6C::sv_literal::lval' => '131',
                                        'P6C::sv_literal::type' => 'PerlInt'
                                      }, 'P6C::sv_literal' )
                                    }, 'P6C::prefix' ),
                                    'P6C::pair::r' => bless( {
                                      'P6C::sv_literal::lval' => '"E"',
                                      'P6C::sv_literal::type' => 'PerlString'
                                    }, 'P6C::sv_literal' )
                                  }, 'P6C::pair' ),
                                  'P6C::Binop::op' => ',',
                                  'P6C::Binop::l' => bless( {
                                    'P6C::Binop::r' => bless( {
                                      'P6C::pair::l' => bless( {
                                        'P6C::prefix::name' => 'chr',
                                        'P6C::prefix::args' => bless( {
                                          'P6C::sv_literal::lval' => '130',
                                          'P6C::sv_literal::type' => 'PerlInt'
                                        }, 'P6C::sv_literal' )
                                      }, 'P6C::prefix' ),
                                      'P6C::pair::r' => bless( {
                                        'P6C::sv_literal::lval' => '"C"',
                                        'P6C::sv_literal::type' => 'PerlString'
                                      }, 'P6C::sv_literal' )
                                    }, 'P6C::pair' ),
                                    'P6C::Binop::op' => ',',
                                    'P6C::Binop::l' => bless( {
                                      'P6C::Binop::r' => bless( {
                                        'P6C::pair::l' => bless( {
                                          'P6C::prefix::name' => 'chr',
                                          'P6C::prefix::args' => bless( {
                                            'P6C::sv_literal::lval' => '129',
                                            'P6C::sv_literal::type' => 'PerlInt'
                                          }, 'P6C::sv_literal' )
                                        }, 'P6C::prefix' ),
                                        'P6C::pair::r' => bless( {
                                          'P6C::sv_literal::lval' => '"A"',
                                          'P6C::sv_literal::type' => 'PerlString'
                                        }, 'P6C::sv_literal' )
                                      }, 'P6C::pair' ),
                                      'P6C::Binop::op' => ',',
                                      'P6C::Binop::l' => bless( {
                                        'P6C::Binop::r' => bless( {
                                          'P6C::pair::l' => bless( {
                                            'P6C::prefix::name' => 'chr',
                                            'P6C::prefix::args' => bless( {
                                              'P6C::sv_literal::lval' => '128',
                                              'P6C::sv_literal::type' => 'PerlInt'
                                            }, 'P6C::sv_literal' )
                                          }, 'P6C::prefix' ),
                                          'P6C::pair::r' => bless( {
                                            'P6C::sv_literal::lval' => '"A"',
                                            'P6C::sv_literal::type' => 'PerlString'
                                          }, 'P6C::sv_literal' )
                                        }, 'P6C::pair' ),
                                        'P6C::Binop::op' => ',',
                                        'P6C::Binop::l' => bless( {
                                          'P6C::pair::l' => bless( {
                                            'P6C::sv_literal::lval' => '"\\r"',
                                            'P6C::sv_literal::type' => 'PerlString'
                                          }, 'P6C::sv_literal' ),
                                          'P6C::pair::r' => bless( {
                                            'P6C::sv_literal::lval' => '"\\n"',
                                            'P6C::sv_literal::type' => 'PerlString'
                                          }, 'P6C::sv_literal' )
                                        }, 'P6C::pair' )
                                      }, 'P6C::Binop' )
                                    }, 'P6C::Binop' )
                                  }, 'P6C::Binop' )
                                }, 'P6C::Binop' )
                              }, 'P6C::Binop' )
                            }, 'P6C::Binop' )
                          }, 'P6C::Binop' )
                        }, 'P6C::Binop' )
                      }, 'P6C::Binop' )
                    }, 'P6C::Binop' )
                  }, 'P6C::Binop' )
                }, 'P6C::Binop' )
              }, 'P6C::Binop' )
            }, 'P6C::Binop' )
          }, 'P6C::Binop' )
        }, 'P6C::Binop' )
      }, 'P6C::Binop' )
    }, 'P6C::Binop' ),
    'P6C::Binop::op' => '=',
    'P6C::Binop::l' => bless( {
      'P6C::decl::qual' => bless( {
        'P6C::scope_class::scope' => 'my',
        'P6C::scope_class::class' => undef
      }, 'P6C::scope_class' ),
      'P6C::decl::vars' => bless( {
        'P6C::variable::type' => 'PerlHash',
        'P6C::variable::topical' => '',
        'P6C::variable::name' => '%translate',
        'P6C::variable::global' => '',
        'P6C::variable::implicit' => 0
      }, 'P6C::variable' ),
      'P6C::decl::props' => []
    }, 'P6C::decl' )
  }, 'P6C::Binop' ),
  bless( {
    'P6C::prefix::name' => 'while',
    'P6C::prefix::args' => bless( {
      'P6C::ValueList::vals' => [
        bless( {
          'P6C::prefix::name' => 'readline',
          'P6C::prefix::args' => bless( {
            'P6C::variable::type' => 'PerlIO',
            'P6C::variable::topical' => undef,
            'P6C::variable::name' => '*ARGS',
            'P6C::variable::global' => undef,
            'P6C::variable::implicit' => undef
          }, 'P6C::variable' )
        }, 'P6C::prefix' ),
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => [
            bless( {
              'P6C::prefix::name' => 'print',
              'P6C::prefix::args' => bless( {
                'P6C::ValueList::vals' => []
              }, 'P6C::ValueList' )
            }, 'P6C::prefix' )
          ]
        }, 'P6C::closure' )
      ]
    }, 'P6C::ValueList' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::directive::args' => undef,
    'P6C::directive::thing' => 'strict',
    'P6C::directive::name' => 'use'
  }, 'P6C::directive' ),
  bless( {
    'P6C::decl::qual' => bless( {
      'P6C::scope_class::scope' => 'my',
      'P6C::scope_class::class' => undef
    }, 'P6C::scope_class' ),
    'P6C::decl::vars' => [
      bless( {
        'P6C::variable::type' => 'PerlUndef',
        'P6C::variable::topical' => '',
        'P6C::variable::name' => '$ffrom',
        'P6C::variable::global' => '',
        'P6C::variable::implicit' => 0
      }, 'P6C::variable' ),
      bless( {
        'P6C::variable::type' => 'PerlUndef',
        'P6C::variable::topical' => '',
        'P6C::variable::name' => '$fto',
        'P6C::variable::global' => '',
        'P6C::variable::implicit' => 0
      }, 'P6C::variable' ),
      bless( {
        'P6C::variable::type' => 'PerlUndef',
        'P6C::variable::topical' => '',
        'P6C::variable::name' => '$file',
        'P6C::variable::global' => '',
        'P6C::variable::implicit' => 0
      }, 'P6C::variable' )
    ],
    'P6C::decl::props' => []
  }, 'P6C::decl' ),
  bless( {
    'P6C::prefix::name' => 'foreach',
    'P6C::prefix::args' => bless( {
      'P6C::ValueList::vals' => [
        bless( {
          'P6C::decl::qual' => undef,
          'P6C::decl::vars' => [
            bless( {
              'P6C::variable::type' => 'PerlUndef',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '$file',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          ],
          'P6C::decl::props' => []
        }, 'P6C::decl' ),
        bless( {
          'P6C::variable::type' => 'PerlArray',
          'P6C::variable::topical' => '',
          'P6C::variable::name' => '@ARGS',
          'P6C::variable::global' => '',
          'P6C::variable::implicit' => 0
        }, 'P6C::variable' ),
        [
          bless( {
            'P6C::guard::expr' => bless( {
              'P6C::prefix::name' => 'next',
              'P6C::prefix::args' => undef
            }, 'P6C::prefix' ),
            'P6C::guard::name' => 'unless',
            'P6C::guard::test' => bless( {
              'P6C::prefix::name' => '-l',
              'P6C::prefix::args' => bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$file',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' )
            }, 'P6C::prefix' )
          }, 'P6C::guard' ),
          bless( {
            'P6C::Binop::r' => bless( {
              'P6C::prefix::name' => 'readlink',
              'P6C::prefix::args' => bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$file',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' )
            }, 'P6C::prefix' ),
            'P6C::Binop::op' => '=',
            'P6C::Binop::l' => bless( {
              'P6C::variable::type' => 'PerlUndef',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '$ffrom',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          }, 'P6C::Binop' ),
          bless( {
            'P6C::prefix::name' => 'unless',
            'P6C::prefix::args' => [
              [
                undef,
                bless( {
                  'P6C::prefix::name' => 'defined',
                  'P6C::prefix::args' => bless( {
                    'P6C::variable::type' => 'PerlUndef',
                    'P6C::variable::topical' => '',
                    'P6C::variable::name' => '$ffrom',
                    'P6C::variable::global' => '',
                    'P6C::variable::implicit' => 0
                  }, 'P6C::variable' )
                }, 'P6C::prefix' ),
                bless( {
                  'P6C::closure::params' => undef,
                  'P6C::closure::block' => [
                    bless( {
                      'P6C::prefix::name' => 'warn',
                      'P6C::prefix::args' => bless( {
                        'P6C::sv_literal::lval' => '"$file: $!\\n"',
                        'P6C::sv_literal::type' => 'PerlString'
                      }, 'P6C::sv_literal' )
                    }, 'P6C::prefix' ),
                    bless( {
                      'P6C::prefix::name' => 'next',
                      'P6C::prefix::args' => undef
                    }, 'P6C::prefix' )
                  ]
                }, 'P6C::closure' )
              ]
            ]
          }, 'P6C::prefix' ),
          bless( {
            'P6C::prefix::name' => 'if',
            'P6C::prefix::args' => [
              [
                undef,
                bless( {
                  'P6C::sv_literal::lval' => '1',
                  'P6C::sv_literal::type' => 'PerlInt'
                }, 'P6C::sv_literal' ),
                bless( {
                  'P6C::closure::params' => undef,
                  'P6C::closure::block' => [
                    bless( {
                      'P6C::prefix::name' => 'unlink',
                      'P6C::prefix::args' => bless( {
                        'P6C::variable::type' => 'PerlUndef',
                        'P6C::variable::topical' => '',
                        'P6C::variable::name' => '$file',
                        'P6C::variable::global' => '',
                        'P6C::variable::implicit' => 0
                      }, 'P6C::variable' )
                    }, 'P6C::prefix' ),
                    bless( {
                      'P6C::prefix::name' => 'if',
                      'P6C::prefix::args' => [
                        [
                          undef,
                          bless( {
                            'P6C::prefix::name' => 'symlink',
                            'P6C::prefix::args' => bless( {
                              'P6C::Binop::r' => bless( {
                                'P6C::variable::type' => 'PerlUndef',
                                'P6C::variable::topical' => '',
                                'P6C::variable::name' => '$file',
                                'P6C::variable::global' => '',
                                'P6C::variable::implicit' => 0
                              }, 'P6C::variable' ),
                              'P6C::Binop::op' => ',',
                              'P6C::Binop::l' => bless( {
                                'P6C::variable::type' => 'PerlUndef',
                                'P6C::variable::topical' => '',
                                'P6C::variable::name' => '$fto',
                                'P6C::variable::global' => '',
                                'P6C::variable::implicit' => 0
                              }, 'P6C::variable' )
                            }, 'P6C::Binop' )
                          }, 'P6C::prefix' ),
                          bless( {
                            'P6C::closure::params' => undef,
                            'P6C::closure::block' => [
                              bless( {
                                'P6C::prefix::name' => 'print',
                                'P6C::prefix::args' => bless( {
                                  'P6C::sv_literal::lval' => '"$file: $ffrom -> $fto\\n"',
                                  'P6C::sv_literal::type' => 'PerlString'
                                }, 'P6C::sv_literal' )
                              }, 'P6C::prefix' )
                            ]
                          }, 'P6C::closure' )
                        ],
                        [
                          'else',
                          1,
                          bless( {
                            'P6C::closure::params' => undef,
                            'P6C::closure::block' => [
                              bless( {
                                'P6C::prefix::name' => 'warn',
                                'P6C::prefix::args' => bless( {
                                  'P6C::Binop::r' => bless( {
                                    'P6C::sv_literal::lval' => '"$ffrom -> $fto: $!\\n"',
                                    'P6C::sv_literal::type' => 'PerlString'
                                  }, 'P6C::sv_literal' ),
                                  'P6C::Binop::op' => ',',
                                  'P6C::Binop::l' => bless( {
                                    'P6C::sv_literal::lval' => '"Couldn\'t create link $file: "',
                                    'P6C::sv_literal::type' => 'PerlString'
                                  }, 'P6C::sv_literal' )
                                }, 'P6C::Binop' )
                              }, 'P6C::prefix' )
                            ]
                          }, 'P6C::closure' )
                        ]
                      ]
                    }, 'P6C::prefix' )
                  ]
                }, 'P6C::closure' )
              ]
            ]
          }, 'P6C::prefix' )
        ]
      ]
    }, 'P6C::ValueList' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::Binop::r' => bless( {
      'P6C::sv_literal::lval' => '"text"',
      'P6C::sv_literal::type' => 'PerlString'
    }, 'P6C::sv_literal' ),
    'P6C::Binop::op' => '=',
    'P6C::Binop::l' => bless( {
      'P6C::decl::qual' => bless( {
        'P6C::scope_class::scope' => 'my',
        'P6C::scope_class::class' => undef
      }, 'P6C::scope_class' ),
      'P6C::decl::vars' => bless( {
        'P6C::variable::type' => 'PerlUndef',
        'P6C::variable::topical' => '',
        'P6C::variable::name' => '$section_type',
        'P6C::variable::global' => '',
        'P6C::variable::implicit' => 0
      }, 'P6C::variable' ),
      'P6C::decl::props' => []
    }, 'P6C::decl' )
  }, 'P6C::Binop' ),
  bless( {
    'P6C::sub_def::props' => [],
    'P6C::sub_def::qual' => undef,
    'P6C::sub_def::name' => 'start',
    'P6C::sub_def::closure' => bless( {
      'P6C::closure::params' => bless( {
        'P6C::params::req' => [
          bless( {
            'P6C::param::init' => undef,
            'P6C::param::props' => [],
            'P6C::param::qual' => undef,
            'P6C::param::var' => bless( {
              'P6C::variable::type' => 'PerlUndef',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '$type',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          }, 'P6C::param' ),
          bless( {
            'P6C::param::init' => undef,
            'P6C::param::props' => [],
            'P6C::param::qual' => undef,
            'P6C::param::var' => bless( {
              'P6C::variable::type' => 'PerlUndef',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '$intro',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          }, 'P6C::param' )
        ],
        'P6C::params::rest' => undef,
        'P6C::params::opt' => []
      }, 'P6C::params' ),
      'P6C::closure::block' => [
        bless( {
          'P6C::prefix::name' => 'unless',
          'P6C::prefix::args' => [
            [
              undef,
              bless( {
                'P6C::compare::seq' => [
                  bless( {
                    'P6C::variable::type' => 'PerlUndef',
                    'P6C::variable::topical' => '',
                    'P6C::variable::name' => '$section_type',
                    'P6C::variable::global' => '',
                    'P6C::variable::implicit' => 0
                  }, 'P6C::variable' ),
                  'eq',
                  bless( {
                    'P6C::variable::type' => 'PerlUndef',
                    'P6C::variable::topical' => '',
                    'P6C::variable::name' => '$type',
                    'P6C::variable::global' => '',
                    'P6C::variable::implicit' => 0
                  }, 'P6C::variable' )
                ]
              }, 'P6C::compare' ),
              bless( {
                'P6C::closure::params' => undef,
                'P6C::closure::block' => [
                  bless( {
                    'P6C::prefix::name' => 'print',
                    'P6C::prefix::args' => bless( {
                      'P6C::variable::type' => 'PerlUndef',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '$intro',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' )
                  }, 'P6C::prefix' ),
                  bless( {
                    'P6C::Binop::r' => bless( {
                      'P6C::variable::type' => 'PerlUndef',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '$type',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' ),
                    'P6C::Binop::op' => '=',
                    'P6C::Binop::l' => bless( {
                      'P6C::variable::type' => 'PerlUndef',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '$section_type',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' )
                  }, 'P6C::Binop' )
                ]
              }, 'P6C::closure' )
            ]
          ]
        }, 'P6C::prefix' )
      ]
    }, 'P6C::closure' )
  }, 'P6C::sub_def' ),
  bless( {
    'P6C::label::name' => 'loop'
  }, 'P6C::label' ),
  bless( {
    'P6C::prefix::name' => 'while',
    'P6C::prefix::args' => bless( {
      'P6C::ValueList::vals' => [
        bless( {
          'P6C::prefix::name' => 'readline',
          'P6C::prefix::args' => bless( {
            'P6C::variable::type' => 'PerlIO',
            'P6C::variable::topical' => undef,
            'P6C::variable::name' => '*ARGS',
            'P6C::variable::global' => undef,
            'P6C::variable::implicit' => undef
          }, 'P6C::variable' )
        }, 'P6C::prefix' ),
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => [
            bless( {
              'P6C::prefix::name' => 'given',
              'P6C::prefix::args' => bless( {
                'P6C::ValueList::vals' => [
                  bless( {
                    'P6C::variable::type' => 'PerlUndef',
                    'P6C::variable::topical' => '',
                    'P6C::variable::name' => '$_',
                    'P6C::variable::global' => '',
                    'P6C::variable::implicit' => 0
                  }, 'P6C::variable' ),
                  bless( {
                    'P6C::closure::params' => undef,
                    'P6C::closure::block' => [
                      bless( {
                        'P6C::prefix::name' => 'when',
                        'P6C::prefix::args' => bless( {
                          'P6C::ValueList::vals' => [
                            bless( {
                              'P6C::sv_literal::lval' => '"^\\s*$"',
                              'P6C::sv_literal::type' => 'PerlString'
                            }, 'P6C::sv_literal' ),
                            bless( {
                              'P6C::closure::params' => undef,
                              'P6C::closure::block' => [
                                bless( {
                                  'P6C::prefix::name' => 'print',
                                  'P6C::prefix::args' => bless( {
                                    'P6C::ValueList::vals' => []
                                  }, 'P6C::ValueList' )
                                }, 'P6C::prefix' )
                              ]
                            }, 'P6C::closure' )
                          ]
                        }, 'P6C::ValueList' )
                      }, 'P6C::prefix' ),
                      bless( {
                        'P6C::prefix::name' => 'when',
                        'P6C::prefix::args' => bless( {
                          'P6C::ValueList::vals' => [
                            bless( {
                              'P6C::sv_literal::lval' => '"foo"',
                              'P6C::sv_literal::type' => 'PerlString'
                            }, 'P6C::sv_literal' ),
                            bless( {
                              'P6C::closure::params' => undef,
                              'P6C::closure::block' => [
                                bless( {
                                  'P6C::prefix::name' => 'start',
                                  'P6C::prefix::args' => bless( {
                                    'P6C::Binop::r' => bless( {
                                      'P6C::sv_literal::lval' => '"\\n=over\\n"',
                                      'P6C::sv_literal::type' => 'PerlString'
                                    }, 'P6C::sv_literal' ),
                                    'P6C::Binop::op' => ',',
                                    'P6C::Binop::l' => bless( {
                                      'P6C::sv_literal::lval' => '"list"',
                                      'P6C::sv_literal::type' => 'PerlString'
                                    }, 'P6C::sv_literal' )
                                  }, 'P6C::Binop' )
                                }, 'P6C::prefix' ),
                                bless( {
                                  'P6C::prefix::name' => 'print',
                                  'P6C::prefix::args' => bless( {
                                    'P6C::sv_literal::lval' => '"\\n=item $_\\n"',
                                    'P6C::sv_literal::type' => 'PerlString'
                                  }, 'P6C::sv_literal' )
                                }, 'P6C::prefix' )
                              ]
                            }, 'P6C::closure' )
                          ]
                        }, 'P6C::ValueList' )
                      }, 'P6C::prefix' ),
                      bless( {
                        'P6C::guard::expr' => bless( {
                          'P6C::prefix::name' => 'start',
                          'P6C::prefix::args' => bless( {
                            'P6C::Binop::r' => bless( {
                              'P6C::sv_literal::lval' => '"\\n=back\\n\\n"',
                              'P6C::sv_literal::type' => 'PerlString'
                            }, 'P6C::sv_literal' ),
                            'P6C::Binop::op' => ',',
                            'P6C::Binop::l' => bless( {
                              'P6C::sv_literal::lval' => '"text"',
                              'P6C::sv_literal::type' => 'PerlString'
                            }, 'P6C::sv_literal' )
                          }, 'P6C::Binop' )
                        }, 'P6C::prefix' ),
                        'P6C::guard::name' => 'if',
                        'P6C::guard::test' => bless( {
                          'P6C::compare::seq' => [
                            bless( {
                              'P6C::variable::type' => 'PerlUndef',
                              'P6C::variable::topical' => '',
                              'P6C::variable::name' => '$section_type',
                              'P6C::variable::global' => '',
                              'P6C::variable::implicit' => 0
                            }, 'P6C::variable' ),
                            'eq',
                            bless( {
                              'P6C::sv_literal::lval' => '"list"',
                              'P6C::sv_literal::type' => 'PerlString'
                            }, 'P6C::sv_literal' )
                          ]
                        }, 'P6C::compare' )
                      }, 'P6C::guard' ),
                      bless( {
                        'P6C::prefix::name' => 'when',
                        'P6C::prefix::args' => bless( {
                          'P6C::ValueList::vals' => [
                            bless( {
                              'P6C::sv_literal::lval' => '"bar"',
                              'P6C::sv_literal::type' => 'PerlString'
                            }, 'P6C::sv_literal' ),
                            bless( {
                              'P6C::closure::params' => undef,
                              'P6C::closure::block' => [
                                bless( {
                                  'P6C::prefix::name' => 'start',
                                  'P6C::prefix::args' => bless( {
                                    'P6C::Binop::r' => bless( {
                                      'P6C::sv_literal::lval' => '"\\n"',
                                      'P6C::sv_literal::type' => 'PerlString'
                                    }, 'P6C::sv_literal' ),
                                    'P6C::Binop::op' => ',',
                                    'P6C::Binop::l' => bless( {
                                      'P6C::sv_literal::lval' => '"text"',
                                      'P6C::sv_literal::type' => 'PerlString'
                                    }, 'P6C::sv_literal' )
                                  }, 'P6C::Binop' )
                                }, 'P6C::prefix' ),
                                bless( {
                                  'P6C::prefix::name' => 'print',
                                  'P6C::prefix::args' => bless( {
                                    'P6C::Binop::r' => bless( {
                                      'P6C::sv_literal::lval' => '" $_\\n"',
                                      'P6C::sv_literal::type' => 'PerlString'
                                    }, 'P6C::sv_literal' ),
                                    'P6C::Binop::op' => ',',
                                    'P6C::Binop::l' => bless( {
                                      'P6C::Binop::r' => bless( {
                                        'P6C::prefix::name' => 'length',
                                        'P6C::prefix::args' => bless( {
                                          'P6C::variable::type' => 'PerlUndef',
                                          'P6C::variable::topical' => 0,
                                          'P6C::variable::name' => '$1',
                                          'P6C::variable::global' => 0,
                                          'P6C::variable::implicit' => 0
                                        }, 'P6C::variable' )
                                      }, 'P6C::prefix' ),
                                      'P6C::Binop::op' => ',',
                                      'P6C::Binop::l' => bless( {
                                        'P6C::sv_literal::lval' => '"=head"',
                                        'P6C::sv_literal::type' => 'PerlString'
                                      }, 'P6C::sv_literal' )
                                    }, 'P6C::Binop' )
                                  }, 'P6C::Binop' )
                                }, 'P6C::prefix' )
                              ]
                            }, 'P6C::closure' )
                          ]
                        }, 'P6C::ValueList' )
                      }, 'P6C::prefix' ),
                      bless( {
                        'P6C::prefix::name' => 'when',
                        'P6C::prefix::args' => bless( {
                          'P6C::ValueList::vals' => [
                            bless( {
                              'P6C::sv_literal::lval' => '"^\\s"',
                              'P6C::sv_literal::type' => 'PerlString'
                            }, 'P6C::sv_literal' ),
                            bless( {
                              'P6C::closure::params' => undef,
                              'P6C::closure::block' => [
                                bless( {
                                  'P6C::prefix::name' => 'start',
                                  'P6C::prefix::args' => bless( {
                                    'P6C::Binop::r' => bless( {
                                      'P6C::sv_literal::lval' => '"\\n"',
                                      'P6C::sv_literal::type' => 'PerlString'
                                    }, 'P6C::sv_literal' ),
                                    'P6C::Binop::op' => ',',
                                    'P6C::Binop::l' => bless( {
                                      'P6C::sv_literal::lval' => '"formatted"',
                                      'P6C::sv_literal::type' => 'PerlString'
                                    }, 'P6C::sv_literal' )
                                  }, 'P6C::Binop' )
                                }, 'P6C::prefix' ),
                                bless( {
                                  'P6C::prefix::name' => 'print',
                                  'P6C::prefix::args' => bless( {
                                    'P6C::ValueList::vals' => []
                                  }, 'P6C::ValueList' )
                                }, 'P6C::prefix' )
                              ]
                            }, 'P6C::closure' )
                          ]
                        }, 'P6C::ValueList' )
                      }, 'P6C::prefix' ),
                      bless( {
                        'P6C::prefix::name' => 'default',
                        'P6C::prefix::args' => bless( {
                          'P6C::closure::params' => undef,
                          'P6C::closure::block' => [
                            bless( {
                              'P6C::prefix::name' => 'start',
                              'P6C::prefix::args' => bless( {
                                'P6C::Binop::r' => bless( {
                                  'P6C::sv_literal::lval' => '"\\n"',
                                  'P6C::sv_literal::type' => 'PerlString'
                                }, 'P6C::sv_literal' ),
                                'P6C::Binop::op' => ',',
                                'P6C::Binop::l' => bless( {
                                  'P6C::sv_literal::lval' => '"text"',
                                  'P6C::sv_literal::type' => 'PerlString'
                                }, 'P6C::sv_literal' )
                              }, 'P6C::Binop' )
                            }, 'P6C::prefix' ),
                            bless( {
                              'P6C::prefix::name' => 'print',
                              'P6C::prefix::args' => bless( {
                                'P6C::ValueList::vals' => []
                              }, 'P6C::ValueList' )
                            }, 'P6C::prefix' )
                          ]
                        }, 'P6C::closure' )
                      }, 'P6C::prefix' )
                    ]
                  }, 'P6C::closure' )
                ]
              }, 'P6C::ValueList' )
            }, 'P6C::prefix' ),
            bless( {
              'P6C::prefix::name' => 'print',
              'P6C::prefix::args' => bless( {
                'P6C::ValueList::vals' => []
              }, 'P6C::ValueList' )
            }, 'P6C::prefix' )
          ]
        }, 'P6C::closure' )
      ]
    }, 'P6C::ValueList' )
  }, 'P6C::prefix' ),
  bless( {
    'P6C::Binop::r' => bless( {
      'P6C::sv_literal::lval' => '"text"',
      'P6C::sv_literal::type' => 'PerlString'
    }, 'P6C::sv_literal' ),
    'P6C::Binop::op' => '=',
    'P6C::Binop::l' => bless( {
      'P6C::decl::qual' => bless( {
        'P6C::scope_class::scope' => 'my',
        'P6C::scope_class::class' => undef
      }, 'P6C::scope_class' ),
      'P6C::decl::vars' => bless( {
        'P6C::variable::type' => 'PerlUndef',
        'P6C::variable::topical' => '',
        'P6C::variable::name' => '$section_type',
        'P6C::variable::global' => '',
        'P6C::variable::implicit' => 0
      }, 'P6C::variable' ),
      'P6C::decl::props' => []
    }, 'P6C::decl' )
  }, 'P6C::Binop' ),
  bless( {
    'P6C::sub_def::props' => [],
    'P6C::sub_def::qual' => undef,
    'P6C::sub_def::name' => 'start',
    'P6C::sub_def::closure' => bless( {
      'P6C::closure::params' => undef,
      'P6C::closure::block' => [
        bless( {
          'P6C::Binop::r' => bless( {
            'P6C::variable::type' => 'PerlArray',
            'P6C::variable::topical' => '',
            'P6C::variable::name' => '@_',
            'P6C::variable::global' => '',
            'P6C::variable::implicit' => 0
          }, 'P6C::variable' ),
          'P6C::Binop::op' => '=',
          'P6C::Binop::l' => bless( {
            'P6C::decl::qual' => bless( {
              'P6C::scope_class::scope' => 'my',
              'P6C::scope_class::class' => undef
            }, 'P6C::scope_class' ),
            'P6C::decl::vars' => [
              bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$type',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' ),
              bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$intro',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' )
            ],
            'P6C::decl::props' => []
          }, 'P6C::decl' )
        }, 'P6C::Binop' ),
        bless( {
          'P6C::prefix::name' => 'unless',
          'P6C::prefix::args' => [
            [
              undef,
              bless( {
                'P6C::compare::seq' => [
                  bless( {
                    'P6C::variable::type' => 'PerlUndef',
                    'P6C::variable::topical' => '',
                    'P6C::variable::name' => '$section_type',
                    'P6C::variable::global' => '',
                    'P6C::variable::implicit' => 0
                  }, 'P6C::variable' ),
                  'eq',
                  bless( {
                    'P6C::variable::type' => 'PerlUndef',
                    'P6C::variable::topical' => '',
                    'P6C::variable::name' => '$type',
                    'P6C::variable::global' => '',
                    'P6C::variable::implicit' => 0
                  }, 'P6C::variable' )
                ]
              }, 'P6C::compare' ),
              bless( {
                'P6C::closure::params' => undef,
                'P6C::closure::block' => [
                  bless( {
                    'P6C::prefix::name' => 'print',
                    'P6C::prefix::args' => bless( {
                      'P6C::variable::type' => 'PerlUndef',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '$intro',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' )
                  }, 'P6C::prefix' ),
                  bless( {
                    'P6C::Binop::r' => bless( {
                      'P6C::variable::type' => 'PerlUndef',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '$type',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' ),
                    'P6C::Binop::op' => '=',
                    'P6C::Binop::l' => bless( {
                      'P6C::variable::type' => 'PerlUndef',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '$section_type',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' )
                  }, 'P6C::Binop' )
                ]
              }, 'P6C::closure' )
            ]
          ]
        }, 'P6C::prefix' )
      ]
    }, 'P6C::closure' )
  }, 'P6C::sub_def' ),
  bless( {
    'P6C::label::name' => 'loop'
  }, 'P6C::label' ),
  bless( {
    'P6C::prefix::name' => 'while',
    'P6C::prefix::args' => bless( {
      'P6C::ValueList::vals' => [
        bless( {
          'P6C::prefix::name' => 'readline',
          'P6C::prefix::args' => bless( {
            'P6C::variable::type' => 'PerlIO',
            'P6C::variable::topical' => undef,
            'P6C::variable::name' => '*ARGS',
            'P6C::variable::global' => undef,
            'P6C::variable::implicit' => undef
          }, 'P6C::variable' )
        }, 'P6C::prefix' ),
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => [
            bless( {
              'P6C::guard::expr' => bless( {
                'P6C::Binop::r' => bless( {
                  'P6C::prefix::name' => 'next',
                  'P6C::prefix::args' => 'loop'
                }, 'P6C::prefix' ),
                'P6C::Binop::op' => 'and',
                'P6C::Binop::l' => bless( {
                  'P6C::prefix::name' => 'print',
                  'P6C::prefix::args' => bless( {
                    'P6C::ValueList::vals' => []
                  }, 'P6C::ValueList' )
                }, 'P6C::prefix' )
              }, 'P6C::Binop' ),
              'P6C::guard::name' => 'if',
              'P6C::guard::test' => bless( {
                'P6C::sv_literal::lval' => '"^\\s*$"',
                'P6C::sv_literal::type' => 'PerlString'
              }, 'P6C::sv_literal' )
            }, 'P6C::guard' ),
            bless( {
              'P6C::prefix::name' => 'if',
              'P6C::prefix::args' => [
                [
                  undef,
                  bless( {
                    'P6C::sv_literal::lval' => '"^[*]{3}\\s+"',
                    'P6C::sv_literal::type' => 'PerlString'
                  }, 'P6C::sv_literal' ),
                  bless( {
                    'P6C::closure::params' => undef,
                    'P6C::closure::block' => [
                      bless( {
                        'P6C::prefix::name' => 'start',
                        'P6C::prefix::args' => bless( {
                          'P6C::Binop::r' => bless( {
                            'P6C::sv_literal::lval' => '"\\n=over\\n"',
                            'P6C::sv_literal::type' => 'PerlString'
                          }, 'P6C::sv_literal' ),
                          'P6C::Binop::op' => ',',
                          'P6C::Binop::l' => bless( {
                            'P6C::sv_literal::lval' => '"list"',
                            'P6C::sv_literal::type' => 'PerlString'
                          }, 'P6C::sv_literal' )
                        }, 'P6C::Binop' )
                      }, 'P6C::prefix' ),
                      bless( {
                        'P6C::prefix::name' => 'print',
                        'P6C::prefix::args' => bless( {
                          'P6C::sv_literal::lval' => '"\\n=item $_\\n"',
                          'P6C::sv_literal::type' => 'PerlString'
                        }, 'P6C::sv_literal' )
                      }, 'P6C::prefix' ),
                      bless( {
                        'P6C::prefix::name' => 'next',
                        'P6C::prefix::args' => 'loop'
                      }, 'P6C::prefix' )
                    ]
                  }, 'P6C::closure' )
                ]
              ]
            }, 'P6C::prefix' ),
            bless( {
              'P6C::guard::expr' => bless( {
                'P6C::prefix::name' => 'start',
                'P6C::prefix::args' => bless( {
                  'P6C::Binop::r' => bless( {
                    'P6C::sv_literal::lval' => '"\\n=back\\n\\n"',
                    'P6C::sv_literal::type' => 'PerlString'
                  }, 'P6C::sv_literal' ),
                  'P6C::Binop::op' => ',',
                  'P6C::Binop::l' => bless( {
                    'P6C::sv_literal::lval' => '"text"',
                    'P6C::sv_literal::type' => 'PerlString'
                  }, 'P6C::sv_literal' )
                }, 'P6C::Binop' )
              }, 'P6C::prefix' ),
              'P6C::guard::name' => 'if',
              'P6C::guard::test' => bless( {
                'P6C::compare::seq' => [
                  bless( {
                    'P6C::variable::type' => 'PerlUndef',
                    'P6C::variable::topical' => '',
                    'P6C::variable::name' => '$section_type',
                    'P6C::variable::global' => '',
                    'P6C::variable::implicit' => 0
                  }, 'P6C::variable' ),
                  'eq',
                  bless( {
                    'P6C::sv_literal::lval' => '"list"',
                    'P6C::sv_literal::type' => 'PerlString'
                  }, 'P6C::sv_literal' )
                ]
              }, 'P6C::compare' )
            }, 'P6C::guard' ),
            bless( {
              'P6C::prefix::name' => 'if',
              'P6C::prefix::args' => [
                [
                  undef,
                  bless( {
                    'P6C::sv_literal::lval' => '"^([*]{1,2})\\s+"',
                    'P6C::sv_literal::type' => 'PerlString'
                  }, 'P6C::sv_literal' ),
                  bless( {
                    'P6C::closure::params' => undef,
                    'P6C::closure::block' => [
                      bless( {
                        'P6C::prefix::name' => 'start',
                        'P6C::prefix::args' => bless( {
                          'P6C::Binop::r' => bless( {
                            'P6C::sv_literal::lval' => '"\\n"',
                            'P6C::sv_literal::type' => 'PerlString'
                          }, 'P6C::sv_literal' ),
                          'P6C::Binop::op' => ',',
                          'P6C::Binop::l' => bless( {
                            'P6C::sv_literal::lval' => '"text"',
                            'P6C::sv_literal::type' => 'PerlString'
                          }, 'P6C::sv_literal' )
                        }, 'P6C::Binop' )
                      }, 'P6C::prefix' ),
                      bless( {
                        'P6C::prefix::name' => 'print',
                        'P6C::prefix::args' => bless( {
                          'P6C::Binop::r' => bless( {
                            'P6C::sv_literal::lval' => '" $_\\n"',
                            'P6C::sv_literal::type' => 'PerlString'
                          }, 'P6C::sv_literal' ),
                          'P6C::Binop::op' => ',',
                          'P6C::Binop::l' => bless( {
                            'P6C::Binop::r' => bless( {
                              'P6C::prefix::name' => 'length',
                              'P6C::prefix::args' => bless( {
                                'P6C::variable::type' => 'PerlUndef',
                                'P6C::variable::topical' => 0,
                                'P6C::variable::name' => '$1',
                                'P6C::variable::global' => 0,
                                'P6C::variable::implicit' => 0
                              }, 'P6C::variable' )
                            }, 'P6C::prefix' ),
                            'P6C::Binop::op' => ',',
                            'P6C::Binop::l' => bless( {
                              'P6C::sv_literal::lval' => '"=head"',
                              'P6C::sv_literal::type' => 'PerlString'
                            }, 'P6C::sv_literal' )
                          }, 'P6C::Binop' )
                        }, 'P6C::Binop' )
                      }, 'P6C::prefix' ),
                      bless( {
                        'P6C::prefix::name' => 'next',
                        'P6C::prefix::args' => 'loop'
                      }, 'P6C::prefix' )
                    ]
                  }, 'P6C::closure' )
                ],
                [
                  'elsif',
                  bless( {
                    'P6C::sv_literal::lval' => '"^\\s"',
                    'P6C::sv_literal::type' => 'PerlString'
                  }, 'P6C::sv_literal' ),
                  bless( {
                    'P6C::closure::params' => undef,
                    'P6C::closure::block' => [
                      bless( {
                        'P6C::prefix::name' => 'start',
                        'P6C::prefix::args' => bless( {
                          'P6C::Binop::r' => bless( {
                            'P6C::sv_literal::lval' => '"\\n"',
                            'P6C::sv_literal::type' => 'PerlString'
                          }, 'P6C::sv_literal' ),
                          'P6C::Binop::op' => ',',
                          'P6C::Binop::l' => bless( {
                            'P6C::sv_literal::lval' => '"formatted"',
                            'P6C::sv_literal::type' => 'PerlString'
                          }, 'P6C::sv_literal' )
                        }, 'P6C::Binop' )
                      }, 'P6C::prefix' )
                    ]
                  }, 'P6C::closure' )
                ],
                [
                  'else',
                  1,
                  bless( {
                    'P6C::closure::params' => undef,
                    'P6C::closure::block' => [
                      bless( {
                        'P6C::prefix::name' => 'start',
                        'P6C::prefix::args' => bless( {
                          'P6C::Binop::r' => bless( {
                            'P6C::sv_literal::lval' => '"\\n"',
                            'P6C::sv_literal::type' => 'PerlString'
                          }, 'P6C::sv_literal' ),
                          'P6C::Binop::op' => ',',
                          'P6C::Binop::l' => bless( {
                            'P6C::sv_literal::lval' => '"text"',
                            'P6C::sv_literal::type' => 'PerlString'
                          }, 'P6C::sv_literal' )
                        }, 'P6C::Binop' )
                      }, 'P6C::prefix' )
                    ]
                  }, 'P6C::closure' )
                ]
              ]
            }, 'P6C::prefix' ),
            bless( {
              'P6C::prefix::name' => 'print',
              'P6C::prefix::args' => bless( {
                'P6C::ValueList::vals' => []
              }, 'P6C::ValueList' )
            }, 'P6C::prefix' )
          ]
        }, 'P6C::closure' )
      ]
    }, 'P6C::ValueList' )
  }, 'P6C::prefix' )
]
