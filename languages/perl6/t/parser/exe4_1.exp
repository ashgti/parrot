[
  bless( {
    'P6C::class_def::block' => bless( {
      'P6C::yadda::msg' => undef
    }, 'P6C::yadda' ),
    'P6C::class_def::name' => 'Err::BadData',
    'P6C::class_def::qual' => undef,
    'P6C::class_def::props' => [
      bless( {
        'P6C::property::name' => 'Exception',
        'P6C::property::args' => undef
      }, 'P6C::property' )
    ]
  }, 'P6C::class_def' ),
  bless( {
    'P6C::directive::args' => undef,
    'P6C::directive::thing' => 'Calc',
    'P6C::directive::name' => 'module'
  }, 'P6C::directive' ),
  bless( {
    'P6C::class_def::block' => [
      bless( {
        'P6C::sub_def::props' => [],
        'P6C::sub_def::qual' => 'method',
        'P6C::sub_def::name' => 'warn',
        'P6C::sub_def::closure' => bless( {
          'P6C::closure::params' => bless( {
            'P6C::params::req' => [],
            'P6C::params::rest' => bless( {
              'P6C::param::init' => undef,
              'P6C::param::props' => [],
              'P6C::param::qual' => undef,
              'P6C::param::var' => bless( {
                'P6C::variable::type' => 'PerlArray',
                'P6C::variable::topical' => undef,
                'P6C::variable::name' => '@args',
                'P6C::variable::global' => undef,
                'P6C::variable::implicit' => undef
              }, 'P6C::variable' )
            }, 'P6C::param' ),
            'P6C::params::opt' => []
          }, 'P6C::params' ),
          'P6C::closure::block' => [
            bless( {
              'P6C::prefix::name' => 'die',
              'P6C::prefix::args' => bless( {
                'P6C::variable::type' => 'PerlArray',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '@args',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' )
            }, 'P6C::prefix' )
          ]
        }, 'P6C::closure' )
      }, 'P6C::sub_def' )
    ],
    'P6C::class_def::name' => 'NoData',
    'P6C::class_def::qual' => 'my',
    'P6C::class_def::props' => [
      bless( {
        'P6C::property::name' => 'Exception',
        'P6C::property::args' => undef
      }, 'P6C::property' )
    ]
  }, 'P6C::class_def' ),
  bless( {
    'P6C::decl::qual' => bless( {
      'P6C::scope_class::scope' => 'my',
      'P6C::scope_class::class' => undef
    }, 'P6C::scope_class' ),
    'P6C::decl::vars' => bless( {
      'P6C::variable::type' => 'PerlHash',
      'P6C::variable::topical' => '',
      'P6C::variable::name' => '%var',
      'P6C::variable::global' => '',
      'P6C::variable::implicit' => 0
    }, 'P6C::variable' ),
    'P6C::decl::props' => []
  }, 'P6C::decl' ),
  bless( {
    'P6C::sub_def::props' => [],
    'P6C::sub_def::qual' => 'my',
    'P6C::sub_def::name' => 'get_data',
    'P6C::sub_def::closure' => bless( {
      'P6C::closure::params' => bless( {
        'P6C::params::req' => [
          bless( {
            'P6C::param::init' => undef,
            'P6C::param::props' => [],
            'P6C::param::qual' => undef,
            'P6C::param::var' => bless( {
              'P6C::variable::type' => 'PerlUndef',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '$data',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          }, 'P6C::param' )
        ],
        'P6C::params::rest' => undef,
        'P6C::params::opt' => []
      }, 'P6C::params' ),
      'P6C::closure::block' => [
        bless( {
          'P6C::prefix::name' => 'given',
          'P6C::prefix::args' => bless( {
            'P6C::ValueList::vals' => [
              bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$data',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' ),
              bless( {
                'P6C::closure::params' => undef,
                'P6C::closure::block' => [
                  bless( {
                    'P6C::prefix::name' => 'when',
                    'P6C::prefix::args' => bless( {
                      'P6C::ValueList::vals' => [
                        bless( {
                          'P6C::sv_literal::lval' => '"^\\d+$"',
                          'P6C::sv_literal::type' => 'PerlString'
                        }, 'P6C::sv_literal' ),
                        bless( {
                          'P6C::closure::params' => undef,
                          'P6C::closure::block' => [
                            bless( {
                              'P6C::prefix::name' => 'return',
                              'P6C::prefix::args' => bless( {
                                'P6C::Binop::r' => bless( {
                                  'P6C::variable::type' => 'PerlUndef',
                                  'P6C::variable::topical' => '',
                                  'P6C::variable::name' => '$_',
                                  'P6C::variable::global' => '',
                                  'P6C::variable::implicit' => 0
                                }, 'P6C::variable' ),
                                'P6C::Binop::op' => '=',
                                'P6C::Binop::l' => bless( {
                                  'P6C::subscript_exp::subscripts' => [
                                    bless( {
                                      'P6C::indices::type' => 'PerlHash',
                                      'P6C::indices::indices' => bless( {
                                        'P6C::sv_literal::lval' => '""',
                                        'P6C::sv_literal::type' => 'PerlString'
                                      }, 'P6C::sv_literal' )
                                    }, 'P6C::indices' )
                                  ],
                                  'P6C::subscript_exp::thing' => bless( {
                                    'P6C::variable::type' => 'PerlHash',
                                    'P6C::variable::topical' => '',
                                    'P6C::variable::name' => '%var',
                                    'P6C::variable::global' => '',
                                    'P6C::variable::implicit' => 0
                                  }, 'P6C::variable' )
                                }, 'P6C::subscript_exp' )
                              }, 'P6C::Binop' )
                            }, 'P6C::prefix' )
                          ]
                        }, 'P6C::closure' )
                      ]
                    }, 'P6C::ValueList' )
                  }, 'P6C::prefix' ),
                  bless( {
                    'P6C::prefix::name' => 'when',
                    'P6C::prefix::args' => bless( {
                      'P6C::ValueList::vals' => [
                        bless( {
                          'P6C::sv_literal::lval' => '"previous"',
                          'P6C::sv_literal::type' => 'PerlString'
                        }, 'P6C::sv_literal' ),
                        bless( {
                          'P6C::closure::params' => undef,
                          'P6C::closure::block' => [
                            bless( {
                              'P6C::prefix::name' => 'return',
                              'P6C::prefix::args' => bless( {
                                'P6C::Binop::r' => bless( {
                                  'P6C::prefix::name' => 'fail',
                                  'P6C::prefix::args' => 'NoData'
                                }, 'P6C::prefix' ),
                                'P6C::Binop::op' => '//',
                                'P6C::Binop::l' => bless( {
                                  'P6C::subscript_exp::subscripts' => [
                                    bless( {
                                      'P6C::indices::type' => 'PerlHash',
                                      'P6C::indices::indices' => bless( {
                                        'P6C::sv_literal::lval' => '""',
                                        'P6C::sv_literal::type' => 'PerlString'
                                      }, 'P6C::sv_literal' )
                                    }, 'P6C::indices' )
                                  ],
                                  'P6C::subscript_exp::thing' => bless( {
                                    'P6C::variable::type' => 'PerlHash',
                                    'P6C::variable::topical' => '',
                                    'P6C::variable::name' => '%var',
                                    'P6C::variable::global' => '',
                                    'P6C::variable::implicit' => 0
                                  }, 'P6C::variable' )
                                }, 'P6C::subscript_exp' )
                              }, 'P6C::Binop' )
                            }, 'P6C::prefix' )
                          ]
                        }, 'P6C::closure' )
                      ]
                    }, 'P6C::ValueList' )
                  }, 'P6C::prefix' ),
                  bless( {
                    'P6C::prefix::name' => 'when',
                    'P6C::prefix::args' => bless( {
                      'P6C::ValueList::vals' => [
                        bless( {
                          'P6C::variable::type' => 'PerlHash',
                          'P6C::variable::topical' => '',
                          'P6C::variable::name' => '%var',
                          'P6C::variable::global' => '',
                          'P6C::variable::implicit' => 0
                        }, 'P6C::variable' ),
                        bless( {
                          'P6C::closure::params' => undef,
                          'P6C::closure::block' => [
                            bless( {
                              'P6C::prefix::name' => 'return',
                              'P6C::prefix::args' => bless( {
                                'P6C::Binop::r' => bless( {
                                  'P6C::subscript_exp::subscripts' => [
                                    bless( {
                                      'P6C::indices::type' => 'PerlHash',
                                      'P6C::indices::indices' => bless( {
                                        'P6C::variable::type' => 'PerlUndef',
                                        'P6C::variable::topical' => '',
                                        'P6C::variable::name' => '$_',
                                        'P6C::variable::global' => '',
                                        'P6C::variable::implicit' => 0
                                      }, 'P6C::variable' )
                                    }, 'P6C::indices' )
                                  ],
                                  'P6C::subscript_exp::thing' => bless( {
                                    'P6C::variable::type' => 'PerlHash',
                                    'P6C::variable::topical' => '',
                                    'P6C::variable::name' => '%var',
                                    'P6C::variable::global' => '',
                                    'P6C::variable::implicit' => 0
                                  }, 'P6C::variable' )
                                }, 'P6C::subscript_exp' ),
                                'P6C::Binop::op' => '=',
                                'P6C::Binop::l' => bless( {
                                  'P6C::subscript_exp::subscripts' => [
                                    bless( {
                                      'P6C::indices::type' => 'PerlHash',
                                      'P6C::indices::indices' => bless( {
                                        'P6C::sv_literal::lval' => '""',
                                        'P6C::sv_literal::type' => 'PerlString'
                                      }, 'P6C::sv_literal' )
                                    }, 'P6C::indices' )
                                  ],
                                  'P6C::subscript_exp::thing' => bless( {
                                    'P6C::variable::type' => 'PerlHash',
                                    'P6C::variable::topical' => '',
                                    'P6C::variable::name' => '%var',
                                    'P6C::variable::global' => '',
                                    'P6C::variable::implicit' => 0
                                  }, 'P6C::variable' )
                                }, 'P6C::subscript_exp' )
                              }, 'P6C::Binop' )
                            }, 'P6C::prefix' )
                          ]
                        }, 'P6C::closure' )
                      ]
                    }, 'P6C::ValueList' )
                  }, 'P6C::prefix' ),
                  bless( {
                    'P6C::prefix::name' => 'default',
                    'P6C::prefix::args' => bless( {
                      'P6C::closure::params' => undef,
                      'P6C::closure::block' => [
                        bless( {
                          'P6C::adverb::thing' => bless( {
                            'P6C::prefix::name' => 'die',
                            'P6C::prefix::args' => 'Err::BadData'
                          }, 'P6C::prefix' ),
                          'P6C::adverb::adv' => bless( {
                            'P6C::pair::l' => 'msg',
                            'P6C::pair::r' => bless( {
                              'P6C::sv_literal::lval' => '"Don\'t understand $_"',
                              'P6C::sv_literal::type' => 'PerlString'
                            }, 'P6C::sv_literal' )
                          }, 'P6C::pair' )
                        }, 'P6C::adverb' )
                      ]
                    }, 'P6C::closure' )
                  }, 'P6C::prefix' )
                ]
              }, 'P6C::closure' )
            ]
          }, 'P6C::ValueList' )
        }, 'P6C::prefix' )
      ]
    }, 'P6C::closure' )
  }, 'P6C::sub_def' ),
  bless( {
    'P6C::sub_def::props' => [],
    'P6C::sub_def::qual' => undef,
    'P6C::sub_def::name' => 'calc',
    'P6C::sub_def::closure' => bless( {
      'P6C::closure::params' => bless( {
        'P6C::params::req' => [
          bless( {
            'P6C::param::init' => undef,
            'P6C::param::props' => [],
            'P6C::param::qual' => bless( {
              'P6C::scope_class::scope' => undef,
              'P6C::scope_class::class' => 'str'
            }, 'P6C::scope_class' ),
            'P6C::param::var' => bless( {
              'P6C::variable::type' => 'PerlUndef',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '$expr',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          }, 'P6C::param' ),
          bless( {
            'P6C::param::init' => undef,
            'P6C::param::props' => [],
            'P6C::param::qual' => bless( {
              'P6C::scope_class::scope' => undef,
              'P6C::scope_class::class' => 'int'
            }, 'P6C::scope_class' ),
            'P6C::param::var' => bless( {
              'P6C::variable::type' => 'PerlUndef',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '$i',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' )
          }, 'P6C::param' )
        ],
        'P6C::params::rest' => undef,
        'P6C::params::opt' => []
      }, 'P6C::params' ),
      'P6C::closure::block' => [
        bless( {
          'P6C::Binop::r' => bless( {
            'P6C::Binop::r' => bless( {
              'P6C::pair::l' => bless( {
                'P6C::sv_literal::lval' => '"~"',
                'P6C::sv_literal::type' => 'PerlString'
              }, 'P6C::sv_literal' ),
              'P6C::pair::r' => bless( {
                'P6C::closure::params' => undef,
                'P6C::closure::block' => [
                  bless( {
                    'P6C::Binop::r' => bless( {
                      'P6C::sv_literal::lval' => '2',
                      'P6C::sv_literal::type' => 'PerlInt'
                    }, 'P6C::sv_literal' ),
                    'P6C::Binop::op' => '/',
                    'P6C::Binop::l' => bless( {
                      'P6C::Binop::r' => bless( {
                        'P6C::variable::type' => 'PerlUndef',
                        'P6C::variable::topical' => 0,
                        'P6C::variable::name' => '$b',
                        'P6C::variable::global' => 0,
                        'P6C::variable::implicit' => 1
                      }, 'P6C::variable' ),
                      'P6C::Binop::op' => '+',
                      'P6C::Binop::l' => bless( {
                        'P6C::variable::type' => 'PerlUndef',
                        'P6C::variable::topical' => 0,
                        'P6C::variable::name' => '$a',
                        'P6C::variable::global' => 0,
                        'P6C::variable::implicit' => 1
                      }, 'P6C::variable' )
                    }, 'P6C::Binop' )
                  }, 'P6C::Binop' )
                ]
              }, 'P6C::closure' )
            }, 'P6C::pair' ),
            'P6C::Binop::op' => ',',
            'P6C::Binop::l' => bless( {
              'P6C::Binop::r' => bless( {
                'P6C::pair::l' => bless( {
                  'P6C::sv_literal::lval' => '"/"',
                  'P6C::sv_literal::type' => 'PerlString'
                }, 'P6C::sv_literal' ),
                'P6C::pair::r' => bless( {
                  'P6C::closure::params' => undef,
                  'P6C::closure::block' => [
                    bless( {
                      'P6C::Binop::r' => bless( {
                        'P6C::variable::type' => 'PerlUndef',
                        'P6C::variable::topical' => 0,
                        'P6C::variable::name' => '$b',
                        'P6C::variable::global' => 0,
                        'P6C::variable::implicit' => 1
                      }, 'P6C::variable' ),
                      'P6C::Binop::op' => '/',
                      'P6C::Binop::l' => bless( {
                        'P6C::variable::type' => 'PerlUndef',
                        'P6C::variable::topical' => 0,
                        'P6C::variable::name' => '$a',
                        'P6C::variable::global' => 0,
                        'P6C::variable::implicit' => 1
                      }, 'P6C::variable' )
                    }, 'P6C::Binop' )
                  ]
                }, 'P6C::closure' )
              }, 'P6C::pair' ),
              'P6C::Binop::op' => ',',
              'P6C::Binop::l' => bless( {
                'P6C::pair::l' => bless( {
                  'P6C::sv_literal::lval' => '"*"',
                  'P6C::sv_literal::type' => 'PerlString'
                }, 'P6C::sv_literal' ),
                'P6C::pair::r' => bless( {
                  'P6C::closure::params' => undef,
                  'P6C::closure::block' => [
                    bless( {
                      'P6C::Binop::r' => bless( {
                        'P6C::variable::type' => 'PerlUndef',
                        'P6C::variable::topical' => 0,
                        'P6C::variable::name' => '$b',
                        'P6C::variable::global' => 0,
                        'P6C::variable::implicit' => 1
                      }, 'P6C::variable' ),
                      'P6C::Binop::op' => '*',
                      'P6C::Binop::l' => bless( {
                        'P6C::variable::type' => 'PerlUndef',
                        'P6C::variable::topical' => 0,
                        'P6C::variable::name' => '$a',
                        'P6C::variable::global' => 0,
                        'P6C::variable::implicit' => 1
                      }, 'P6C::variable' )
                    }, 'P6C::Binop' )
                  ]
                }, 'P6C::closure' )
              }, 'P6C::pair' )
            }, 'P6C::Binop' )
          }, 'P6C::Binop' ),
          'P6C::Binop::op' => '//=',
          'P6C::Binop::l' => bless( {
            'P6C::decl::qual' => bless( {
              'P6C::scope_class::scope' => 'our',
              'P6C::scope_class::class' => undef
            }, 'P6C::scope_class' ),
            'P6C::decl::vars' => bless( {
              'P6C::variable::type' => 'PerlHash',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '%operator',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' ),
            'P6C::decl::props' => [
              bless( {
                'P6C::property::name' => 'private',
                'P6C::property::args' => undef
              }, 'P6C::property' )
            ]
          }, 'P6C::decl' )
        }, 'P6C::Binop' ),
        bless( {
          'P6C::decl::qual' => bless( {
            'P6C::scope_class::scope' => 'my',
            'P6C::scope_class::class' => undef
          }, 'P6C::scope_class' ),
          'P6C::decl::vars' => bless( {
            'P6C::variable::type' => 'PerlArray',
            'P6C::variable::topical' => '',
            'P6C::variable::name' => '@stack',
            'P6C::variable::global' => '',
            'P6C::variable::implicit' => 0
          }, 'P6C::variable' ),
          'P6C::decl::props' => []
        }, 'P6C::decl' ),
        bless( {
          'P6C::Binop::r' => bless( {
            'P6C::sv_literal::lval' => '1',
            'P6C::sv_literal::type' => 'PerlInt'
          }, 'P6C::sv_literal' ),
          'P6C::Binop::op' => '=',
          'P6C::Binop::l' => bless( {
            'P6C::decl::qual' => bless( {
              'P6C::scope_class::scope' => 'my',
              'P6C::scope_class::class' => undef
            }, 'P6C::scope_class' ),
            'P6C::decl::vars' => bless( {
              'P6C::variable::type' => 'PerlUndef',
              'P6C::variable::topical' => '',
              'P6C::variable::name' => '$toknum',
              'P6C::variable::global' => '',
              'P6C::variable::implicit' => 0
            }, 'P6C::variable' ),
            'P6C::decl::props' => []
          }, 'P6C::decl' )
        }, 'P6C::Binop' ),
        bless( {
          'P6C::prefix::name' => 'for',
          'P6C::prefix::args' => bless( {
            'P6C::ValueList::vals' => [
              bless( {
                'P6C::prefix::name' => 'split',
                'P6C::prefix::args' => bless( {
                  'P6C::Binop::r' => bless( {
                    'P6C::variable::type' => 'PerlUndef',
                    'P6C::variable::topical' => '',
                    'P6C::variable::name' => '$expr',
                    'P6C::variable::global' => '',
                    'P6C::variable::implicit' => 0
                  }, 'P6C::variable' ),
                  'P6C::Binop::op' => ',',
                  'P6C::Binop::l' => bless( {
                    'P6C::sv_literal::lval' => '"\\s+"',
                    'P6C::sv_literal::type' => 'PerlString'
                  }, 'P6C::sv_literal' )
                }, 'P6C::Binop' )
              }, 'P6C::prefix' ),
              bless( {
                'P6C::closure::params' => bless( {
                  'P6C::variable::type' => 'PerlUndef',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '$token',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' ),
                'P6C::closure::block' => [
                  bless( {
                    'P6C::prefix::name' => 'try',
                    'P6C::prefix::args' => bless( {
                      'P6C::closure::params' => undef,
                      'P6C::closure::block' => [
                        bless( {
                          'P6C::prefix::name' => 'when',
                          'P6C::prefix::args' => bless( {
                            'P6C::ValueList::vals' => [
                              bless( {
                                'P6C::variable::type' => 'PerlHash',
                                'P6C::variable::topical' => '',
                                'P6C::variable::name' => '%operator',
                                'P6C::variable::global' => '',
                                'P6C::variable::implicit' => 0
                              }, 'P6C::variable' ),
                              bless( {
                                'P6C::closure::params' => undef,
                                'P6C::closure::block' => [
                                  bless( {
                                    'P6C::Binop::r' => bless( {
                                      'P6C::prefix::name' => 'splice',
                                      'P6C::prefix::args' => bless( {
                                        'P6C::Binop::r' => bless( {
                                          'P6C::prefix::name' => '-',
                                          'P6C::prefix::args' => bless( {
                                            'P6C::sv_literal::lval' => '2',
                                            'P6C::sv_literal::type' => 'PerlInt'
                                          }, 'P6C::sv_literal' )
                                        }, 'P6C::prefix' ),
                                        'P6C::Binop::op' => ',',
                                        'P6C::Binop::l' => bless( {
                                          'P6C::variable::type' => 'PerlArray',
                                          'P6C::variable::topical' => '',
                                          'P6C::variable::name' => '@stack',
                                          'P6C::variable::global' => '',
                                          'P6C::variable::implicit' => 0
                                        }, 'P6C::variable' )
                                      }, 'P6C::Binop' )
                                    }, 'P6C::prefix' ),
                                    'P6C::Binop::op' => '=',
                                    'P6C::Binop::l' => bless( {
                                      'P6C::decl::qual' => bless( {
                                        'P6C::scope_class::scope' => 'my',
                                        'P6C::scope_class::class' => undef
                                      }, 'P6C::scope_class' ),
                                      'P6C::decl::vars' => bless( {
                                        'P6C::variable::type' => 'PerlArray',
                                        'P6C::variable::topical' => '',
                                        'P6C::variable::name' => '@args',
                                        'P6C::variable::global' => '',
                                        'P6C::variable::implicit' => 0
                                      }, 'P6C::variable' ),
                                      'P6C::decl::props' => []
                                    }, 'P6C::decl' )
                                  }, 'P6C::Binop' ),
                                  bless( {
                                    'P6C::prefix::name' => 'push',
                                    'P6C::prefix::args' => bless( {
                                      'P6C::Binop::r' => bless( {
                                        'P6C::subscript_exp::subscripts' => [
                                          bless( {
                                            'P6C::indices::type' => 'PerlHash',
                                            'P6C::indices::indices' => bless( {
                                              'P6C::variable::type' => 'PerlUndef',
                                              'P6C::variable::topical' => '',
                                              'P6C::variable::name' => '$token',
                                              'P6C::variable::global' => '',
                                              'P6C::variable::implicit' => 0
                                            }, 'P6C::variable' )
                                          }, 'P6C::indices' ),
                                          bless( {
                                            'P6C::indices::type' => 'Sub',
                                            'P6C::indices::indices' => bless( {
                                              'P6C::context::thing' => bless( {
                                                'P6C::variable::type' => 'PerlArray',
                                                'P6C::variable::topical' => '',
                                                'P6C::variable::name' => '@args',
                                                'P6C::variable::global' => '',
                                                'P6C::variable::implicit' => 0
                                              }, 'P6C::variable' ),
                                              'P6C::context::ctx' => '*'
                                            }, 'P6C::context' )
                                          }, 'P6C::indices' )
                                        ],
                                        'P6C::subscript_exp::thing' => bless( {
                                          'P6C::variable::type' => 'PerlHash',
                                          'P6C::variable::topical' => '',
                                          'P6C::variable::name' => '%operator',
                                          'P6C::variable::global' => '',
                                          'P6C::variable::implicit' => 0
                                        }, 'P6C::variable' )
                                      }, 'P6C::subscript_exp' ),
                                      'P6C::Binop::op' => ',',
                                      'P6C::Binop::l' => bless( {
                                        'P6C::variable::type' => 'PerlArray',
                                        'P6C::variable::topical' => '',
                                        'P6C::variable::name' => '@stack',
                                        'P6C::variable::global' => '',
                                        'P6C::variable::implicit' => 0
                                      }, 'P6C::variable' )
                                    }, 'P6C::Binop' )
                                  }, 'P6C::prefix' )
                                ]
                              }, 'P6C::closure' )
                            ]
                          }, 'P6C::ValueList' )
                        }, 'P6C::prefix' ),
                        bless( {
                          'P6C::prefix::name' => 'when',
                          'P6C::prefix::args' => bless( {
                            'P6C::ValueList::vals' => [
                              bless( {
                                'P6C::Binop::r' => bless( {
                                  'P6C::sv_literal::lval' => '"="',
                                  'P6C::sv_literal::type' => 'PerlString'
                                }, 'P6C::sv_literal' ),
                                'P6C::Binop::op' => ',',
                                'P6C::Binop::l' => bless( {
                                  'P6C::Binop::r' => bless( {
                                    'P6C::sv_literal::lval' => '";"',
                                    'P6C::sv_literal::type' => 'PerlString'
                                  }, 'P6C::sv_literal' ),
                                  'P6C::Binop::op' => ',',
                                  'P6C::Binop::l' => bless( {
                                    'P6C::sv_literal::lval' => '"."',
                                    'P6C::sv_literal::type' => 'PerlString'
                                  }, 'P6C::sv_literal' )
                                }, 'P6C::Binop' )
                              }, 'P6C::Binop' ),
                              bless( {
                                'P6C::closure::params' => undef,
                                'P6C::closure::block' => [
                                  bless( {
                                    'P6C::prefix::name' => 'last',
                                    'P6C::prefix::args' => undef
                                  }, 'P6C::prefix' )
                                ]
                              }, 'P6C::closure' )
                            ]
                          }, 'P6C::ValueList' )
                        }, 'P6C::prefix' ),
                        bless( {
                          'P6C::directive::args' => undef,
                          'P6C::directive::thing' => 'fatal',
                          'P6C::directive::name' => 'use'
                        }, 'P6C::directive' ),
                        bless( {
                          'P6C::prefix::name' => 'push',
                          'P6C::prefix::args' => bless( {
                            'P6C::Binop::r' => bless( {
                              'P6C::prefix::name' => 'get_data',
                              'P6C::prefix::args' => bless( {
                                'P6C::ValueList::vals' => [
                                  bless( {
                                    'P6C::variable::type' => 'PerlUndef',
                                    'P6C::variable::topical' => '',
                                    'P6C::variable::name' => '$token',
                                    'P6C::variable::global' => '',
                                    'P6C::variable::implicit' => 0
                                  }, 'P6C::variable' )
                                ]
                              }, 'P6C::ValueList' )
                            }, 'P6C::prefix' ),
                            'P6C::Binop::op' => ',',
                            'P6C::Binop::l' => bless( {
                              'P6C::variable::type' => 'PerlArray',
                              'P6C::variable::topical' => '',
                              'P6C::variable::name' => '@stack',
                              'P6C::variable::global' => '',
                              'P6C::variable::implicit' => 0
                            }, 'P6C::variable' )
                          }, 'P6C::Binop' )
                        }, 'P6C::prefix' ),
                        bless( {
                          'P6C::prefix::name' => 'CATCH',
                          'P6C::prefix::args' => bless( {
                            'P6C::closure::params' => undef,
                            'P6C::closure::block' => []
                          }, 'P6C::closure' )
                        }, 'P6C::prefix' )
                      ]
                    }, 'P6C::closure' )
                  }, 'P6C::prefix' ),
                  bless( {
                    'P6C::prefix::name' => 'NEXT',
                    'P6C::prefix::args' => bless( {
                      'P6C::closure::params' => undef,
                      'P6C::closure::block' => [
                        bless( {
                          'P6C::incr::op' => '++',
                          'P6C::incr::post' => 1,
                          'P6C::incr::thing' => bless( {
                            'P6C::variable::type' => 'PerlUndef',
                            'P6C::variable::topical' => '',
                            'P6C::variable::name' => '$toknum',
                            'P6C::variable::global' => '',
                            'P6C::variable::implicit' => 0
                          }, 'P6C::variable' )
                        }, 'P6C::incr' )
                      ]
                    }, 'P6C::closure' )
                  }, 'P6C::prefix' )
                ]
              }, 'P6C::closure' )
            ]
          }, 'P6C::ValueList' )
        }, 'P6C::prefix' ),
        bless( {
          'P6C::guard::expr' => bless( {
            'P6C::adverb::thing' => bless( {
              'P6C::prefix::name' => 'fail',
              'P6C::prefix::args' => 'Err::BadData'
            }, 'P6C::prefix' ),
            'P6C::adverb::adv' => bless( {
              'P6C::pair::l' => 'msg',
              'P6C::pair::r' => bless( {
                'P6C::sv_literal::lval' => '"Too many operands"',
                'P6C::sv_literal::type' => 'PerlString'
              }, 'P6C::sv_literal' )
            }, 'P6C::pair' )
          }, 'P6C::adverb' ),
          'P6C::guard::name' => 'if',
          'P6C::guard::test' => bless( {
            'P6C::compare::seq' => [
              bless( {
                'P6C::variable::type' => 'PerlArray',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '@stack',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' ),
              '>',
              bless( {
                'P6C::sv_literal::lval' => '1',
                'P6C::sv_literal::type' => 'PerlInt'
              }, 'P6C::sv_literal' )
            ]
          }, 'P6C::compare' )
        }, 'P6C::guard' ),
        bless( {
          'P6C::prefix::name' => 'return',
          'P6C::prefix::args' => bless( {
            'P6C::Binop::r' => bless( {
              'P6C::but::thing' => bless( {
                'P6C::prefix::name' => 'pop',
                'P6C::prefix::args' => bless( {
                  'P6C::variable::type' => 'PerlArray',
                  'P6C::variable::topical' => '',
                  'P6C::variable::name' => '@stack',
                  'P6C::variable::global' => '',
                  'P6C::variable::implicit' => 0
                }, 'P6C::variable' )
              }, 'P6C::prefix' ),
              'P6C::but::buts' => [
                'true'
              ]
            }, 'P6C::but' ),
            'P6C::Binop::op' => '=',
            'P6C::Binop::l' => bless( {
              'P6C::subscript_exp::subscripts' => [
                bless( {
                  'P6C::indices::type' => 'PerlHash',
                  'P6C::indices::indices' => bless( {
                    'P6C::Binop::r' => bless( {
                      'P6C::variable::type' => 'PerlUndef',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '$i',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' ),
                    'P6C::Binop::op' => '_',
                    'P6C::Binop::l' => bless( {
                      'P6C::sv_literal::lval' => '"$"',
                      'P6C::sv_literal::type' => 'PerlString'
                    }, 'P6C::sv_literal' )
                  }, 'P6C::Binop' )
                }, 'P6C::indices' )
              ],
              'P6C::subscript_exp::thing' => bless( {
                'P6C::variable::type' => 'PerlHash',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '%var',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' )
            }, 'P6C::subscript_exp' )
          }, 'P6C::Binop' )
        }, 'P6C::prefix' )
      ]
    }, 'P6C::closure' )
  }, 'P6C::sub_def' ),
  bless( {
    'P6C::directive::args' => undef,
    'P6C::directive::thing' => 'main',
    'P6C::directive::name' => 'module'
  }, 'P6C::directive' ),
  bless( {
    'P6C::prefix::name' => 'for',
    'P6C::prefix::args' => bless( {
      'P6C::ValueList::vals' => [
        bless( {
          'P6C::Binop::r' => bless( {
            'P6C::sv_literal::lval' => '10000',
            'P6C::sv_literal::type' => 'PerlInt'
          }, 'P6C::sv_literal' ),
          'P6C::Binop::op' => '..',
          'P6C::Binop::l' => bless( {
            'P6C::sv_literal::lval' => '1',
            'P6C::sv_literal::type' => 'PerlInt'
          }, 'P6C::sv_literal' )
        }, 'P6C::Binop' ),
        bless( {
          'P6C::closure::params' => bless( {
            'P6C::variable::type' => 'PerlUndef',
            'P6C::variable::topical' => '',
            'P6C::variable::name' => '$i',
            'P6C::variable::global' => '',
            'P6C::variable::implicit' => 0
          }, 'P6C::variable' ),
          'P6C::closure::block' => [
            bless( {
              'P6C::prefix::name' => 'print',
              'P6C::prefix::args' => bless( {
                'P6C::sv_literal::lval' => '"$i> "',
                'P6C::sv_literal::type' => 'PerlString'
              }, 'P6C::sv_literal' )
            }, 'P6C::prefix' ),
            bless( {
              'P6C::Binop::r' => bless( {
                'P6C::prefix::name' => 'last',
                'P6C::prefix::args' => undef
              }, 'P6C::prefix' ),
              'P6C::Binop::op' => 'err',
              'P6C::Binop::l' => bless( {
                'P6C::Binop::r' => bless( {
                  'P6C::prefix::name' => 'readline',
                  'P6C::prefix::args' => bless( {
                    'P6C::variable::type' => 'PerlIO',
                    'P6C::variable::topical' => undef,
                    'P6C::variable::name' => '*ARGS',
                    'P6C::variable::global' => undef,
                    'P6C::variable::implicit' => undef
                  }, 'P6C::variable' )
                }, 'P6C::prefix' ),
                'P6C::Binop::op' => '=',
                'P6C::Binop::l' => bless( {
                  'P6C::decl::qual' => bless( {
                    'P6C::scope_class::scope' => 'my',
                    'P6C::scope_class::class' => undef
                  }, 'P6C::scope_class' ),
                  'P6C::decl::vars' => bless( {
                    'P6C::variable::type' => 'PerlUndef',
                    'P6C::variable::topical' => '',
                    'P6C::variable::name' => '$expr',
                    'P6C::variable::global' => '',
                    'P6C::variable::implicit' => 0
                  }, 'P6C::variable' ),
                  'P6C::decl::props' => []
                }, 'P6C::decl' )
              }, 'P6C::Binop' )
            }, 'P6C::Binop' ),
            bless( {
              'P6C::prefix::name' => 'print',
              'P6C::prefix::args' => bless( {
                'P6C::sv_literal::lval' => '"$i> $( Calc::calc(i=>$i, expr=>$expr) )\\n"',
                'P6C::sv_literal::type' => 'PerlString'
              }, 'P6C::sv_literal' )
            }, 'P6C::prefix' )
          ]
        }, 'P6C::closure' )
      ]
    }, 'P6C::ValueList' )
  }, 'P6C::prefix' )
]
