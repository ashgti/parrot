[
  bless( {
    'P6C::Binop::r' => bless( {
      'P6C::sv_literal::lval' => '"text"',
      'P6C::sv_literal::type' => 'PerlString'
    }, 'P6C::sv_literal' ),
    'P6C::Binop::op' => '=',
    'P6C::Binop::l' => bless( {
      'P6C::decl::qual' => bless( {
        'P6C::scope_class::scope' => 'my',
        'P6C::scope_class::class' => undef
      }, 'P6C::scope_class' ),
      'P6C::decl::vars' => bless( {
        'P6C::variable::type' => 'PerlUndef',
        'P6C::variable::topical' => '',
        'P6C::variable::name' => '$section_type',
        'P6C::variable::global' => '',
        'P6C::variable::implicit' => 0
      }, 'P6C::variable' ),
      'P6C::decl::props' => []
    }, 'P6C::decl' )
  }, 'P6C::Binop' ),
  bless( {
    'P6C::sub_def::props' => [],
    'P6C::sub_def::qual' => undef,
    'P6C::sub_def::name' => 'start',
    'P6C::sub_def::closure' => bless( {
      'P6C::closure::params' => undef,
      'P6C::closure::block' => [
        bless( {
          'P6C::Binop::r' => bless( {
            'P6C::variable::type' => 'PerlArray',
            'P6C::variable::topical' => '',
            'P6C::variable::name' => '@_',
            'P6C::variable::global' => '',
            'P6C::variable::implicit' => 0
          }, 'P6C::variable' ),
          'P6C::Binop::op' => '=',
          'P6C::Binop::l' => bless( {
            'P6C::decl::qual' => bless( {
              'P6C::scope_class::scope' => 'my',
              'P6C::scope_class::class' => undef
            }, 'P6C::scope_class' ),
            'P6C::decl::vars' => [
              bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$type',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' ),
              bless( {
                'P6C::variable::type' => 'PerlUndef',
                'P6C::variable::topical' => '',
                'P6C::variable::name' => '$intro',
                'P6C::variable::global' => '',
                'P6C::variable::implicit' => 0
              }, 'P6C::variable' )
            ],
            'P6C::decl::props' => []
          }, 'P6C::decl' )
        }, 'P6C::Binop' ),
        bless( {
          'P6C::prefix::name' => 'unless',
          'P6C::prefix::args' => [
            [
              undef,
              bless( {
                'P6C::compare::seq' => [
                  bless( {
                    'P6C::variable::type' => 'PerlUndef',
                    'P6C::variable::topical' => '',
                    'P6C::variable::name' => '$section_type',
                    'P6C::variable::global' => '',
                    'P6C::variable::implicit' => 0
                  }, 'P6C::variable' ),
                  'eq',
                  bless( {
                    'P6C::variable::type' => 'PerlUndef',
                    'P6C::variable::topical' => '',
                    'P6C::variable::name' => '$type',
                    'P6C::variable::global' => '',
                    'P6C::variable::implicit' => 0
                  }, 'P6C::variable' )
                ]
              }, 'P6C::compare' ),
              bless( {
                'P6C::closure::params' => undef,
                'P6C::closure::block' => [
                  bless( {
                    'P6C::prefix::name' => 'print',
                    'P6C::prefix::args' => bless( {
                      'P6C::variable::type' => 'PerlUndef',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '$intro',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' )
                  }, 'P6C::prefix' ),
                  bless( {
                    'P6C::Binop::r' => bless( {
                      'P6C::variable::type' => 'PerlUndef',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '$type',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' ),
                    'P6C::Binop::op' => '=',
                    'P6C::Binop::l' => bless( {
                      'P6C::variable::type' => 'PerlUndef',
                      'P6C::variable::topical' => '',
                      'P6C::variable::name' => '$section_type',
                      'P6C::variable::global' => '',
                      'P6C::variable::implicit' => 0
                    }, 'P6C::variable' )
                  }, 'P6C::Binop' )
                ]
              }, 'P6C::closure' )
            ]
          ]
        }, 'P6C::prefix' )
      ]
    }, 'P6C::closure' )
  }, 'P6C::sub_def' ),
  bless( {
    'P6C::label::name' => 'loop'
  }, 'P6C::label' ),
  bless( {
    'P6C::prefix::name' => 'while',
    'P6C::prefix::args' => bless( {
      'P6C::ValueList::vals' => [
        bless( {
          'P6C::prefix::name' => 'readline',
          'P6C::prefix::args' => bless( {
            'P6C::variable::type' => 'PerlIO',
            'P6C::variable::topical' => undef,
            'P6C::variable::name' => '*ARGS',
            'P6C::variable::global' => undef,
            'P6C::variable::implicit' => undef
          }, 'P6C::variable' )
        }, 'P6C::prefix' ),
        bless( {
          'P6C::closure::params' => undef,
          'P6C::closure::block' => [
            bless( {
              'P6C::guard::expr' => bless( {
                'P6C::Binop::r' => bless( {
                  'P6C::prefix::name' => 'next',
                  'P6C::prefix::args' => 'loop'
                }, 'P6C::prefix' ),
                'P6C::Binop::op' => 'and',
                'P6C::Binop::l' => bless( {
                  'P6C::prefix::name' => 'print',
                  'P6C::prefix::args' => bless( {
                    'P6C::ValueList::vals' => []
                  }, 'P6C::ValueList' )
                }, 'P6C::prefix' )
              }, 'P6C::Binop' ),
              'P6C::guard::name' => 'if',
              'P6C::guard::test' => bless( {
                'P6C::sv_literal::lval' => '"^\\s*$"',
                'P6C::sv_literal::type' => 'PerlString'
              }, 'P6C::sv_literal' )
            }, 'P6C::guard' ),
            bless( {
              'P6C::prefix::name' => 'if',
              'P6C::prefix::args' => [
                [
                  undef,
                  bless( {
                    'P6C::sv_literal::lval' => '"^[*]{3}\\s+"',
                    'P6C::sv_literal::type' => 'PerlString'
                  }, 'P6C::sv_literal' ),
                  bless( {
                    'P6C::closure::params' => undef,
                    'P6C::closure::block' => [
                      bless( {
                        'P6C::prefix::name' => 'start',
                        'P6C::prefix::args' => bless( {
                          'P6C::Binop::r' => bless( {
                            'P6C::sv_literal::lval' => '"\\n=over\\n"',
                            'P6C::sv_literal::type' => 'PerlString'
                          }, 'P6C::sv_literal' ),
                          'P6C::Binop::op' => ',',
                          'P6C::Binop::l' => bless( {
                            'P6C::sv_literal::lval' => '"list"',
                            'P6C::sv_literal::type' => 'PerlString'
                          }, 'P6C::sv_literal' )
                        }, 'P6C::Binop' )
                      }, 'P6C::prefix' ),
                      bless( {
                        'P6C::prefix::name' => 'print',
                        'P6C::prefix::args' => bless( {
                          'P6C::sv_literal::lval' => '"\\n=item $_\\n"',
                          'P6C::sv_literal::type' => 'PerlString'
                        }, 'P6C::sv_literal' )
                      }, 'P6C::prefix' ),
                      bless( {
                        'P6C::prefix::name' => 'next',
                        'P6C::prefix::args' => 'loop'
                      }, 'P6C::prefix' )
                    ]
                  }, 'P6C::closure' )
                ]
              ]
            }, 'P6C::prefix' ),
            bless( {
              'P6C::guard::expr' => bless( {
                'P6C::prefix::name' => 'start',
                'P6C::prefix::args' => bless( {
                  'P6C::Binop::r' => bless( {
                    'P6C::sv_literal::lval' => '"\\n=back\\n\\n"',
                    'P6C::sv_literal::type' => 'PerlString'
                  }, 'P6C::sv_literal' ),
                  'P6C::Binop::op' => ',',
                  'P6C::Binop::l' => bless( {
                    'P6C::sv_literal::lval' => '"text"',
                    'P6C::sv_literal::type' => 'PerlString'
                  }, 'P6C::sv_literal' )
                }, 'P6C::Binop' )
              }, 'P6C::prefix' ),
              'P6C::guard::name' => 'if',
              'P6C::guard::test' => bless( {
                'P6C::compare::seq' => [
                  bless( {
                    'P6C::variable::type' => 'PerlUndef',
                    'P6C::variable::topical' => '',
                    'P6C::variable::name' => '$section_type',
                    'P6C::variable::global' => '',
                    'P6C::variable::implicit' => 0
                  }, 'P6C::variable' ),
                  'eq',
                  bless( {
                    'P6C::sv_literal::lval' => '"list"',
                    'P6C::sv_literal::type' => 'PerlString'
                  }, 'P6C::sv_literal' )
                ]
              }, 'P6C::compare' )
            }, 'P6C::guard' ),
            bless( {
              'P6C::prefix::name' => 'if',
              'P6C::prefix::args' => [
                [
                  undef,
                  bless( {
                    'P6C::sv_literal::lval' => '"^([*]{1,2})\\s+"',
                    'P6C::sv_literal::type' => 'PerlString'
                  }, 'P6C::sv_literal' ),
                  bless( {
                    'P6C::closure::params' => undef,
                    'P6C::closure::block' => [
                      bless( {
                        'P6C::prefix::name' => 'start',
                        'P6C::prefix::args' => bless( {
                          'P6C::Binop::r' => bless( {
                            'P6C::sv_literal::lval' => '"\\n"',
                            'P6C::sv_literal::type' => 'PerlString'
                          }, 'P6C::sv_literal' ),
                          'P6C::Binop::op' => ',',
                          'P6C::Binop::l' => bless( {
                            'P6C::sv_literal::lval' => '"text"',
                            'P6C::sv_literal::type' => 'PerlString'
                          }, 'P6C::sv_literal' )
                        }, 'P6C::Binop' )
                      }, 'P6C::prefix' ),
                      bless( {
                        'P6C::prefix::name' => 'print',
                        'P6C::prefix::args' => bless( {
                          'P6C::Binop::r' => bless( {
                            'P6C::sv_literal::lval' => '" $_\\n"',
                            'P6C::sv_literal::type' => 'PerlString'
                          }, 'P6C::sv_literal' ),
                          'P6C::Binop::op' => ',',
                          'P6C::Binop::l' => bless( {
                            'P6C::Binop::r' => bless( {
                              'P6C::prefix::name' => 'length',
                              'P6C::prefix::args' => bless( {
                                'P6C::variable::type' => 'PerlUndef',
                                'P6C::variable::topical' => 0,
                                'P6C::variable::name' => '$1',
                                'P6C::variable::global' => 0,
                                'P6C::variable::implicit' => 0
                              }, 'P6C::variable' )
                            }, 'P6C::prefix' ),
                            'P6C::Binop::op' => ',',
                            'P6C::Binop::l' => bless( {
                              'P6C::sv_literal::lval' => '"=head"',
                              'P6C::sv_literal::type' => 'PerlString'
                            }, 'P6C::sv_literal' )
                          }, 'P6C::Binop' )
                        }, 'P6C::Binop' )
                      }, 'P6C::prefix' ),
                      bless( {
                        'P6C::prefix::name' => 'next',
                        'P6C::prefix::args' => 'loop'
                      }, 'P6C::prefix' )
                    ]
                  }, 'P6C::closure' )
                ],
                [
                  'elsif',
                  bless( {
                    'P6C::sv_literal::lval' => '"^\\s"',
                    'P6C::sv_literal::type' => 'PerlString'
                  }, 'P6C::sv_literal' ),
                  bless( {
                    'P6C::closure::params' => undef,
                    'P6C::closure::block' => [
                      bless( {
                        'P6C::prefix::name' => 'start',
                        'P6C::prefix::args' => bless( {
                          'P6C::Binop::r' => bless( {
                            'P6C::sv_literal::lval' => '"\\n"',
                            'P6C::sv_literal::type' => 'PerlString'
                          }, 'P6C::sv_literal' ),
                          'P6C::Binop::op' => ',',
                          'P6C::Binop::l' => bless( {
                            'P6C::sv_literal::lval' => '"formatted"',
                            'P6C::sv_literal::type' => 'PerlString'
                          }, 'P6C::sv_literal' )
                        }, 'P6C::Binop' )
                      }, 'P6C::prefix' )
                    ]
                  }, 'P6C::closure' )
                ],
                [
                  'else',
                  1,
                  bless( {
                    'P6C::closure::params' => undef,
                    'P6C::closure::block' => [
                      bless( {
                        'P6C::prefix::name' => 'start',
                        'P6C::prefix::args' => bless( {
                          'P6C::Binop::r' => bless( {
                            'P6C::sv_literal::lval' => '"\\n"',
                            'P6C::sv_literal::type' => 'PerlString'
                          }, 'P6C::sv_literal' ),
                          'P6C::Binop::op' => ',',
                          'P6C::Binop::l' => bless( {
                            'P6C::sv_literal::lval' => '"text"',
                            'P6C::sv_literal::type' => 'PerlString'
                          }, 'P6C::sv_literal' )
                        }, 'P6C::Binop' )
                      }, 'P6C::prefix' )
                    ]
                  }, 'P6C::closure' )
                ]
              ]
            }, 'P6C::prefix' ),
            bless( {
              'P6C::prefix::name' => 'print',
              'P6C::prefix::args' => bless( {
                'P6C::ValueList::vals' => []
              }, 'P6C::ValueList' )
            }, 'P6C::prefix' )
          ]
        }, 'P6C::closure' )
      ]
    }, 'P6C::ValueList' )
  }, 'P6C::prefix' )
]
