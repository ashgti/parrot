Files
=====

prd-perl6.pl		interactive and batch interface to compiler
test.pl			test suite
Makefile
README
mkdistro.sh		bundle things up.
P6C/Addcontext.pm	Context propagation.
P6C/Builtins.pm		"built-in" function code and prototypes
P6C/Context.pm		evaluation context structure
P6C/IMCC.pm		code generation utilities; generation for
			common types
P6C/IMCC/*.pm		code generation for less common types
P6C/Nodes.pm		parse tree node types
P6C/Parser.pm		the grammar
P6C/Tree.pm		functions translating parser output to tree
P6C/Util.pm		miscellaneous utility functions
t/compiler		compiler tests
t/parser		parser tests

Notes
=====

Before you begin, make sure that imcc (../imcc) is compiled.  Typing
"make" should do this.

Then, type "make test".  All the compiler test cases pass on my
machine (except where noted in ChangeLog), and compile in less than
five seconds each.  However, your mileage may vary for a number of
reasons:

- The parser may be unusably slow on Windows.
- your version of IMCC may be less hacked than mine (see the ChangeLog
  for what this should affect).

Take a look at t/compiler/*.t for an idea of the kinds of operations
currently supported.  For more internal details, see the POD
documentation in P6C/*.pm, especially P6C/Nodes.pm.

Overview
========

The compiler currently operates in four passes.  The first (Parser.pm)
takes the source and produces a very raw parse tree.  The second
(Tree.pm) turns this data structure into a more manageable parse tree.
The third pass (Addcontext.pm) figures out context information,
storing it in the parse tree nodes.  The final pass (IMCC.pm) uses
this context to emit IMCC code (higher-level than assembler).

The resulting code is then run through imcc (parrot/languages/imcc), which
handles register allocation and spilling, and then finally assembled
by the parrot assembler (parrot/assembler.pl).

Nodes.pm is probably the best place to start.  If you're not sure
where to go from there, you might look for "XXX:", which I use to mark
things that need fixing.  If you're interested in getting involved,
drop me an email.

Sean O'Rourke
seano@cpan.org

Contributors
============

John Kingsley		Numerous bug fixes to the parser, parser
			tests.
Leopold Toetsch		5.005_03 compatibility fixes.
