# $Id$

grammar Perl6::Grammar;


## builtin sub prototypes
## XXX: this is incomplete and incorrect, but it's a start :)

proto abs($?) { ... }
proto truncate($?) { ... }
proto round($?) { ... }
proto floor($?) { ... }
proto ceiling($?) { ... }
proto atan($) { ... }
proto atan($$) { ... }
proto cos($?) { ... }
proto sin($?) { ... }
proto tan($?) { ... }
proto pi() { ... }
proto self() { ... }
proto nothing() { ... }
proto exp() { ... }
proto sqrt($?) { ... }
proto readline($?) { ... }
proto readline($?) { ... }
proto getc($?) { ... }
proto int($?) { ... }
proto list($) { ... }
proto hash($) { ... }
proto pair($) { ... }
proto item($) { ... }
proto reverse($) { ... }
proto undef() { ... }
proto undefine($?) { ... }
proto chop($?) { ... }
proto chomp($?) { ... }
proto index() { ... }
proto rindex() { ... }
proto substr() { ... }
proto lc($?) { ... }
proto lcfirst($?) { ... }
proto uc($?) { ... }
proto ucfirst($?) { ... }
proto capitalize($?) { ... }
proto not($) { ... }
proto true($) { ... }
proto gather($) { ... }
proto map() { ... }
proto grep() { ... }
proto sort() { ... }
proto reduce() { ... }
proto sort($) { ... }
proto map() { ... }
proto grep() { ... }
proto sort() { ... }
proto reduce() { ... }
proto splice() { ... }
proto push() { ... }
proto unshift() { ... }
proto pop() { ... }
proto shift() { ... }
proto sum($) { ... }
proto min($) { ... }
proto max($) { ... }
proto uniq($) { ... }
proto join($) { ... }
proto detach($) { ... }
proto zip($) { ... }
proto keys($) { ... }
proto values($) { ... }
proto kv($) { ... }
proto pairs($) { ... }
proto delete($) { ... }
proto exists($) { ... }
proto perl($) { ... }
proto try($) { ... }
proto lazy($) { ... }
proto eval($) { ... }
proto evalfile($) { ... }
proto require($?) { ... }
proto use($?) { ... }
proto last($?) { ... }
proto next($?) { ... }
proto redo($?) { ... }
proto exit($?) { ... }
proto rand($?) { ... }
proto defined($) { ... }
proto ref($$) { ... }
proto isa($$) { ... }
proto does($$) { ... }
proto time() { ... }
proto times() { ... }
proto localtime($$$) { ... }
proto want() { ... }
proto print() { ... }
proto print($) { ... }
proto sprintf($$) { ... }
proto say() { ... }
proto say($) { ... }
proto close($) { ... }
proto flush($) { ... }
proto close($) { ... }
proto die($?) { ... }
proto warn($) { ... }
proto fail($?) { ... }
proto listen($) { ... }
proto connect($$) { ... }
proto accept($) { ... }
proto slurp($?) { ... }
proto slurp($) { ... }
proto readdir($) { ... }
proto exec($) { ... }
proto system($) { ... }
proto system($) { ... }
proto binmode($) { ... }
proto return() { ... }
proto return($) { ... }
proto yield() { ... }
proto yield($) { ... }
proto take() { ... }
proto take($) { ... }
proto any($) { ... }
proto all($) { ... }
proto one($) { ... }
proto none($) { ... }
proto sleep($) { ... }
proto rmdir($?) { ... }
proto mkdir($) { ... }
proto chdir($) { ... }
proto elems($) { ... }
proto graphs($?) { ... }
proto codes($?) { ... }
proto chars($?) { ... }
proto bytes($?) { ... }
proto chmod($$) { ... }
proto key($) { ... }
proto value($) { ... }
proto keys($) { ... }
proto values($) { ... }
proto pairs($) { ... }
proto pick($) { ... }
proto rename($$) { ... }
proto symlink($$) { ... }
proto link($$) { ... }
proto unlink($) { ... }
proto readlink($) { ... }
proto split($$) { ... }
proto split($$$) { ... }
proto chr($?) { ... }
proto ord($?) { ... }
proto oct($?) { ... }
proto from($) { ... }
proto to($) { ... }
proto matches($) { ... }
proto oct($) { ... }
proto log($) { ... }
proto log($) { ... }
proto log10($) { ... }
proto async($) { ... }
proto sign($) { ... }
proto kill($) { ... }
proto kill($$) { ... }
proto new($) { ... }
proto clone($) { ... }
proto id($) { ... }
proto seek($$$) { ... }
proto tell($) { ... }
proto Bool::True() { ... }
proto Bool::False() { ... }
proto opendir($) { ... }
proto readdir($) { ... }
proto closedir($) { ... }
proto rewinddir($) { ... }
proto base($$) { ... }

## vim: expandtab sw=4
