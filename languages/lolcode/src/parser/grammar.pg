# $Id$

=begin overview

This is the grammar for lolcode written as a sequence of Perl 6 rules.

=end overview

grammar lolcode::Grammar is PCT::Grammar;

rule TOP {
    'HAI' <float> <statement_terminator>
    [<statement> <statement_terminator>]*
    'KTHXBYE' <statement_terminator>
    [ $ || <panic: Syntax error> ]
    {*}
}

rule statement {
    | <visible> {*}   #= visible
    | <declare> {*}   #= declare
    | <assign>  {*}   #= assign
    | <function> {*}  #= function
}

token statement_terminator { [ ',' | \n+ | $ ] }

rule visible {
    'VISIBLE' <value> [ <value> ]* [$<no_newline>='!']?
    {*}
}

rule declare {
    'I HAS A' <variable> [ 'ITZ' <value> ]?
    {*}
}

rule assign {
    <variable> 'R' <value> {*}
}

rule function {
    'HOW' 'DUZ' 'I' <variable> <statement_terminator>
    <block>
    'IF' 'U' 'SAY' 'SO'
    {*}
}

rule block {
    [<statement> <statement_terminator>]* {*}
}

rule parameters {
    'YR' <variable> [ 'AN' 'YR' <variable> ]*
}

rule value {
    | <integer>  {*}                             #= integer
    | <quote>    {*}                             #= quote
    | <variable> {*}                             #= variable
}

token variable { <!keyword> $<name>=( <[a..zA..Z]> \w+ ) {*} }

token keyword {
    'HOW' | 'I' | 'SAY' | 'SO' | 'U' | 'YR' | 'R' | 'AN'  | 'IF'
}

rule integer { \d+ {*} }

token float { \d+ [ '.' \d+ ]? }

rule quote {
    [ \" <string_literal: "> \" ]
    {*}
}

token ws { <!ww> [
    | ^^ \h* BTW \h \N* \n+
    | ^^ \h* OBTW .*? ^^ \h* TLDR \n+
    | \h+
    ]*
}
