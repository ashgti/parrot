#! perl
# $Id$

=head1 NAME

languages/pipp/t/harness - A harness for Pipp

=head1 SYNOPSIS

  cd languages && perl -I../lib pipp/t/harness --files

  cd languages && perl -I../lib pipp/t/harness 

  cd languages && perl -I../lib pipp/t/harness --with-php

  cd languages && perl -I../lib pipp/t/harness --with-phc

  cd languages && perl -I../lib pipp/t/harness --with-antlr3

  cd languages && perl -I../lib pipp/t/harness --with-pct

  cd languages && perl -I../lib pipp/t/harness \
                   pipp/t/hello.t 

=head1 DESCRIPTION

If I'm called with a single
argument of "--files", I just return a list of files to process.
This list is one per line, and is relative to the languages dir.

If I'm called with no args, I run the complete suite.

Otherwise I run the tests that were passed on the command line.

=cut

# pragmata
use strict;
use warnings;
use lib '..';

use Cwd           ();
use File::Spec    ();
use TAP::Harness  3.0;
use Parrot::Config;

my $language = 'pipp';

if ( grep { m/^--files$/ } @ARGV ) {
    # Only the Makefile in 'parrot/languages' uses --files
    my $dir = File::Spec->catfile( $language, 't' );
    my @files = glob( File::Spec->catfile( $dir, '*/*.t' ) );
    print join( "\n", @files );
    print "\n" if scalar(@files);
} else { 
    # TODO: use Getopt::Long or such
    my @cmd = ( "../parrot$PConfig{exe}", 'pipp/pipp.pbc' );
    $ENV{PARROT_PIPP_TEST_MODULE} = 'Parrot::Test::Pipp::Phc';

    if ( grep { m/^--with-php$/ } @ARGV ) { 
         @ARGV = grep { ! m/^--with-php$/ } @ARGV;
         $ENV{PARROT_PIPP_TEST_MODULE} = 'Parrot::Test::Pipp::PHP';
         @cmd = qw{ php-cgi -q -C -n } ;
    }
    elsif ( grep { m/^--with-phc$/ } @ARGV ) {
        @ARGV = grep { ! m/^--with-phc$/ } @ARGV;
        $ENV{PARROT_PIPP_TEST_MODULE} = 'Parrot::Test::Pipp::Phc';
        push @cmd, '--variant=phc';
    }
    elsif ( grep { m/^--with-antlr3$/ } @ARGV ) {
        @ARGV = grep { ! m/^--with-antlr3$/ } @ARGV;
        $ENV{PARROT_PIPP_TEST_MODULE} = 'Parrot::Test::Pipp::Antlr3';
        push @cmd, '--variant=antlr3';
    }
    elsif ( grep { m/^--with-pct$/ } @ARGV ) {
        @ARGV = grep { ! m/^--with-pct$/ } @ARGV;
        $ENV{PARROT_PIPP_TEST_MODULE} = 'Parrot::Test::Pipp::PCT';
        push @cmd, '--variant=pct';
    }

    my @files;
    if ( scalar(@ARGV) ) {
        # Someone specified tests for me to run.
        @files = grep { -f $_ } @ARGV
    } else {
        ( undef, undef, my $current_dir ) = File::Spec->splitpath( Cwd::getcwd() );
        if ( $current_dir eq 'languages' ) {
            @files = glob( File::Spec->catfile( $language, 't', '*/*.t' ) );
        }
        elsif ( $current_dir eq $language ) {
            @files = glob( File::Spec->catfile( 't', '*/*.t' ) );
        }
        else {
            die "Where am I?";
        }
    }

    my $harness = TAP::Harness->new( {
                      exec => sub {
                                       my ( $harness, $test_file ) = @_;
                                       
                                       # the directory t/pmc contains only PIR test files
                                       return [ "../parrot$PConfig{exe}", $test_file ] if $test_file =~ m!t/pmc/.*[.]t$!;

                                       # the directory t/in_php contains only test scripts written in PHP
                                       return [ @cmd, $test_file ] if $test_file =~ m!t/in_php/.*[.]t$!;

                                       # all other directories contain test scripts written in Perl
                                       return [ $PConfig{perl}, $test_file ];
                                  }
                  } ); 
    $harness->runtests(@files);
}

=head1 HISTORY

Mostly taken from bc/t/harness.

=head1 SEE ALSO

  F<languages/perl6/t/harness>

=head1 AUTHOR

Bernhard Schmalhofer - <Bernhard.Schmalhofer@gmx.de>

=cut

# Local Variables:
#   mode: cperl
#   cperl-indent-level: 4
#   fill-column: 100
# End:
# vim: expandtab shiftwidth=4:
