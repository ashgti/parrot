# Copyright: 2005-2006 The Perl Foundation.  All Rights Reserved.
# $Id$

# Setup of some commands
PERL           = @perl@
RM_RF          = @rm_rf@
CP             = @cp@

# The runtime files are also in SVN, need to be generated only by maintainer
PYTHON_RUNTIME_FILES = \
    python/lib/bc/BcLexer.py \
    python/lib/bc/BcParser.py \
    python/lib/bc/BcTreeWalker.py \
    python/lib/antlr_past2pir_past/AntlrPast2PirPastTreeWalker.py

# the default target
all: build 

# This is a listing of all targets, that are meant to be called by users
help:
	@echo ""
	@echo "Following targets are available for the user:"
	@echo ""
	@echo "Building:"
	@echo "  all:               BcLexer.py and BcParser.py"
	@echo "                     This is the default."
	@echo "  build_python:      Build implementation in Python"
	@echo ""
	@echo "  build_java:        Build implementation in Java"
	@echo ""
	@echo "Testing:"
	@echo "  test:              Run the test suite."
	@echo "  test_python:       Run the test suite for Parrot bc in Python."
	@echo "  test_java:         Run the test suite for Parrot bc in Java."
	@echo "  test_posix:        Run the test suite for POSIX bc."
	@echo ""
	@echo "Cleaning:"
	@echo "  clean:             Basic cleaning up."
	@echo "  distclean:         Remove everything not in MANIFEST."
	@echo ""
	@echo "Misc:"
	@echo "  help:              Print this help message."
	@echo ""
	@echo "Only for maintainer:"
	@echo "  maintain:          Generate Python runtime files"
	@echo "                     Needs ANTLR and Python"
	@echo ""

test: test_python test_posix test_java

test_python: build_python
	cd .. && $(PERL) -I../lib -I bc/lib bc/t/harness --with-python

test_posix: 
	cd .. && $(PERL) -I../lib -I bc/lib bc/t/harness --with-posix

test_java: build_java
	cd .. && $(PERL) -I../lib -I bc/lib bc/t/harness --with-java

# For smoke testing build only the Implementation in Python
build: build_python

build_python:
# Nothing to do

build_java: Bc.class 

Bc.class: 
	@echo 'Be sure to set CLASSPATH first'
	javac Bc.java 

maintain: maintain_python maintain_java

maintain_python: $(PYTHON_RUNTIME_FILES)

maintain_java:
# Nothing to do yet

# BcLexer.py will be created too
# TODO: antlr_past2pir_past shouldn't need BcLexerTokenTypes.txt
$(PYTHON_RUNTIME_FILES): grammar/antlr_2/bc_python.g grammar/antlr_2/antlr_past2pir_past.g
	antlr -o python/lib/bc grammar/antlr_2/bc_python.g
	$(CP) python/lib/bc/BcLexerTokenTypes.txt python/lib/antlr_past2pir_past
	antlr -o python/lib/antlr_past2pir_past grammar/antlr_2/antlr_past2pir_past.g

clean: clean_python clean_java
	$(RM_RF) \
    "t/*.bc" "t/*.pir" "t/*.out" "t/*.out"

clean_python:
	$(RM_RF) \
    "python/lib/bc/*.pyc" \
    "python/lib/antlr_past2pir_past/*.pyc" 

clean_java:
	$(RM_RF) \
    "*.class"

realclean: clean
	$(RM_RF) \
    Makefile

distclean: realclean
