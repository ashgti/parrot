# Copyright (C) 2005-2006, The Perl Foundation.
# $Id$

# Some tidbits on what is to do for Parrot bc.
# See docs/parrot_bc.pod for visions.

- Generate PRINT_OP and SAY_OP within the ANTLR3 AST

- Keep track of named variables and initialize them during execution

- Get rid of ANTLR 2

- Switch to C# backend, run with languages/dotnet

- Custom PMCs for Parrot bc
  - Decimal BigNum libraries
 
- Handle newlines in strings

- Print no output when there is a "quit" in the input item

- 4.3.5.3: Honour locale settings from the environment

- driver program bc.py
  - 4.3.3: Implement command line switch '-l'
  - use invoke() like in ast2past.py
  - interactive mode
  - 4.3.5.2: Allow multiple file on command line

- Keep track of scale, and do the printing accordingly

- Complete the Lexer and the Parser
  - Test parsing only by putting things into functions
  - handle keywords

- Format 0.1 as .1

- Administrative
  - Open a ticket in RT, language 'bc' in RT
  - Update ChangeLog according to 'svn log'

- Testing
  - Find a test suite for bc
