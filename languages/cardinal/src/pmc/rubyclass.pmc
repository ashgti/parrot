/* rubyclass.pmc
 *  Copyright (C) 2001-2003, The Perl Foundation.
 *  SVN Info
 *     $Id$
 *  Overview:
 *     These are the vtable functions for the rubyclass base class
 *  Data Structure and Algorithms:
 *    The following primary native types exist that we wish to track:
 *    strings, integers, floats, lists {@array}, arrays, {%hash}.
 *    when parsing code, everything starts out as a string. When we ask
 *    for another representation, we do the conversion once and store it.
 *    this way, the next time it's needed, we can just return it. Several
 *    commands may generate a native type without first going through the
 *    string representation - by avoiding conversion to and from string,
 *    we can maintain a speed enhancement.
 *  History:
 *  Notes:
 *  References:
 */

#include "parrot/parrot.h"

static INTVAL dynpmc_RubyString;
static INTVAL dynpmc_RubyFloat;
static INTVAL dynpmc_RubyInteger;

pmclass RubyClass
        dynpmc
        group ruby_group
{
}

/*
 * Local variables:
 *   c-file-style: "parrot"
 * End:
 * vim: expandtab shiftwidth=4:
 */
