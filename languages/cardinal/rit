#!/usr/bin/perl -w

# vim: syntax=perl
use strict;
use warnings;

my $PARROT = '../../parrot';
my $CARDINAL = 'cardinal.pbc';
my $CURRENT_TEST = 't/00_assignment_1.rb';
my $TRACE_ARGS = "-t 4";

if ( @ARGV > 1 )
{
  $CURRENT_TEST = $ARGV[1];
}

if ( @ARGV > 0 )
{
  if ( $ARGV[0] eq "--help" )
  {
    help();
    exit;
  }
  eval($ARGV[0]);
}
else
{
  execute();
}

sub help
{
  print <<"EOF"
./rit command program.rb
Commands
  trace :-> parrot -t
  execute :-> executes the 
  debug executes cardinal.pbc w/ -d
  gdb executes cardinal under gdb
EOF
}

sub trace
{
  $TRACE_ARGS = "-t 5";
  execute();
}

sub execute
{
  execute_cmd( "make ; $PARROT $TRACE_ARGS $CARDINAL $CURRENT_TEST" );
}

sub test
{
  execute_cmd( "make ; $PARROT $TRACE_ARGS $CARDINAL $CURRENT_TEST" );
}

sub debug
{
  execute_cmd( "make ; $PARROT $TRACE_ARGS $CARDINAL -d $CURRENT_TEST" );
}

sub gdb
{
  execute_cmd( "echo 'set args $CARDINAL $CURRENT_TEST\n run\n set print pretty \n' > .rit_gdb_cmds");
  exec( "gdb -x .rit_gdb_cmds ../../parrot" );
}

sub execute_cmd
{
my ($cmd) = @_;
print $cmd . "\n";
print `$cmd`;
$$;
}

sub publish
{
  print `cd ..; tar zcf cardinal.tgz cardinal; date; ls -al cardinal.tgz ; scp cardinal.tgz tewk\@tewk.com:www/www ; cd cardinal`;
}
