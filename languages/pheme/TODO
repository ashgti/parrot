http://schemers.org/Documents/Standards/R5RS/HTML/

Atom:
	- create atom object
	- add subtypes for string, number, etc.?

Cons:
	- fix cons count for empty cons?

Builtins:
	- get rid of argument counting thunks when :flat works correctly
	- consider if eq? and eqlist? should really be multis
		- add varieties for mismatched parameters if not
	- refactor is_deeply() and is() in Pheme::Test
		- add diagnostics too, if possible
	- add nil?
	- fix car on empty cons

Compiler:
	- extract and merge POST improvements with Punie
		- publish them under compilers/
		- share those nodes somehow
	- port to new TGE, when the branch lands
	- fix load_bytecode section in generated code
	- refactor compiler backend object
		- make parameters available for TGE files
		- share with Perl 6 and Punie
		- move somewhere in Parrot lib path
		- allow dumping of trees and (runnable) PIR

Fix namespace:
	- lowercase
	- directly under Parrot root
	- use nested namespaces properly

Grammar:
	- tighten identifiers
		- allow ! $ % & * + - . / : < = > ? @ ^ _ ~ 
		- start with any non-number-beginning character
		- . + - not allowed at the start of an identifier
		- + - themselves can be an identifier
		- ... can be an identifier
	- fix whitespace
		- space, newline (also tab, carriage return)
	- allow comments
		- semicolon to end of line
		- can be at start of line
	- parse numbers
		- . + - allowed at the start of a number
	- add more rules
		- ` indicates almost constant data
		- ' indicates literal data
		- " delimits strings
		- \ is an escape character

Predicates:
	- boolean?
		- everything but #f is true (conditionals, not true here)
	- symbol?
	- char?
	- vector?
	- procedure?
	- pair?
	- number?
	- string?
	- port?
	- predicates are disjoint
	- empty list satisfies none
