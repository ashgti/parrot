/*
Copyright (C) 2008, Parrot Foundation.
$Id$

=head1 NAME

src/dynpmc/@TEMP_md_file@.pmc - @TEMP_md_name@ wrapper of libcrypto (libssl)

=head1 DESCRIPTION

See L<www.openssl.org>

=head2 Methods

=over 4

=cut

*/

#include <openssl/@TEMP_md_inc@.h>

pmclass @TEMP_md_name@
    dynpmc
    group digest_group
    lib crypto {

/*

=item C<void init()>

=cut

*/
    VTABLE void init() {
@TEMP_md_guard@
        @TEMP_md_ctx@ *c    = mem_allocate_zeroed_typed(@TEMP_md_ctx@);
        PMC_data(SELF) = c;
        PObj_custom_destroy_SET(SELF);
#else
        Parrot_ex_throw_from_c_args(interp, NULL, EXCEPTION_ILL_INHERIT,
            "@TEMP_md_name@ is disabled");
#endif
    }

/*

=item C<void destroy()>

=cut

*/
    VTABLE void destroy() {
@TEMP_md_guard@
        @TEMP_md_ctx@ *c = PMC_data_typed(SELF, @TEMP_md_ctx@ *);
        if (c) {
            mem_sys_free(c);
            PMC_data(SELF) = NULL;
        }
#endif
    }

/*

=item C<PMC* clone()>

=cut

*/
    VTABLE PMC* clone() {
@TEMP_md_guard@
        PMC     *retval  = pmc_new_noinit(INTERP, SELF->vtable->base_type);
        @TEMP_md_ctx@ *c       = mem_allocate_zeroed_typed(@TEMP_md_ctx@);

        memcpy(c, PMC_data(SELF), sizeof (@TEMP_md_ctx@));
        PMC_data(retval) = c;

        PObj_custom_destroy_SET(retval);
        return retval;
#else
        return NULL;
#endif
    }


/*

=back

=head2 Specific Methods

=over 4

=item C<void Init()>

=cut

*/
    METHOD void Init() {
@TEMP_md_guard@
        @TEMP_md_ctx@ *c = PMC_data_typed(SELF, @TEMP_md_ctx@ *);
        (void)@TEMP_md_name@_Init(c);
#endif
    }

/*

=item C<void Update(STRING *buf)>

=cut

*/
    METHOD void Update(STRING *buf) {
@TEMP_md_guard@
        @TEMP_md_ctx@ *c = PMC_data_typed(SELF, @TEMP_md_ctx@ *);
        (void)@TEMP_md_name@_Update(c, (const unsigned char *)Buffer_bufstart(buf), buf->bufused);
#endif
    }

/*

=item C<STRING* Final()>

=cut

*/
    METHOD STRING* Final() {
@TEMP_md_guard@
        unsigned char digest[@TEMP_md_digest@_LENGTH];
        @TEMP_md_ctx@      *c = PMC_data_typed(SELF, @TEMP_md_ctx@ *);
        STRING       *retval;

        (void)@TEMP_md_name@_Final(digest, c);
        retval = Parrot_str_new(INTERP, (char *)digest, @TEMP_md_digest@_LENGTH);

        RETURN(STRING *retval);
#else
        return;
#endif
    }

}

/*

=back

=head1 AUTHORS

Francois Perrad

=cut

*/

/*
 * Local variables:
 *   c-file-style: "parrot"
 * End:
 * vim: expandtab shiftwidth=4:
 */
