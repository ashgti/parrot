PERL = ${perl}
${make_set_make}
MAKE_C = ${make_c}

all : regex befunge bf cola ook perl6 urm
	@echo "SKIPPED: scheme (nothing to make, but should not default to make test)"
	@echo "SKIPPED: jako (fallen behind imcc changes)"

complete-all : jako regex scheme befunge bf cola ook perl6 urm

test: regex.test scheme.test befunge.test bf.test ook.test perl6.test urm.test
	@echo "SKIPPED: jako (fallen behind imcc changes)"
	@echo "SKIPPED: cola (no make test)"

complete-test: jako.test regex.test scheme.test befunge.test bf.test cola.test ook.test perl6.test

# Could someone please comment on the reason for all these *.dummy
# targets?
jako: jako.dummy

jako.dummy:
	$(MAKE_C) jako

jako.test:
	cd jako && $(MAKE) test && cd ..

scheme: scheme.dummy

scheme.dummy:
	$(MAKE_C) scheme

scheme.test:
	$(MAKE_C) scheme test

regex: regex.dummy

regex.dummy:
	$(MAKE_C) regex

regex.test :
	$(MAKE_C) regex test

befunge : befunge.dummy

befunge.dummy:
	$(MAKE_C) befunge

befunge.test:
	$(MAKE_C) befunge test

bf : bf.dummy

bf.dummy:
	$(MAKE_C) bf

bf.test:
	$(MAKE_C) bf test

cola : cola.dummy

cola.dummy:
	$(MAKE_C) cola

cola.test:
	cd cola && $(MAKE) test && cd ..

ook : ook.dummy

ook.dummy:
	$(MAKE_C) ook

ook.test:
	$(MAKE_C) ook test

perl6 : perl6.dummy

perl6.dummy:
	$(MAKE_C) perl6

perl6.test:
	$(MAKE_C) perl6 test

urm: urm.dummy

urm.dummy:
	$(MAKE_C) urm

urm.test:
	$(MAKE_C) test

clean:
	$(MAKE_C) jako clean
	$(MAKE_C) scheme clean

update:
	cvs -q update -dP
