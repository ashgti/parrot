# $Id$

PERL        = @perl@
RM_F        = @rm_f@
LOAD_EXT    = @load_ext@
RUNTIME_DIR = @build_dir@/runtime/parrot/dynext
O           = @o@

# add your dynamic pmcs here
#
# gdbmhash is only built when 'libgdbm.so' is available
#
PMCS = \
  dynlexpad \
  foo \
  rotest \
#CONDITIONED_LINE(has_gdbm):  gdbmhash \
  rational \
#CONDITIONED_LINE(has_crypto):  md2 \
#CONDITIONED_LINE(has_crypto):  md4 \
#CONDITIONED_LINE(has_crypto):  md5 \
#CONDITIONED_LINE(has_crypto):  ripemd160 \
#CONDITIONED_LINE(has_crypto):  sha \
#CONDITIONED_LINE(has_crypto):  sha1 \
#CONDITIONED_LINE(has_crypto):  sha256 \
#CONDITIONED_LINE(has_crypto):  sha512 \
  subproxy 

DIGEST = md2.pmc md4.pmc md5.pmc ripemd160.pmc sha.pmc sha1.pmc sha256.pmc sha512.pmc

BUILD = $(PERL) @build_dir@/tools/build/dynpmc.pl

all : $(DIGEST)
	@$(BUILD) generate $(PMCS)
	@$(BUILD) compile $(PMCS)
	@$(BUILD) linklibs $(PMCS)
	@$(BUILD) copy --destination=$(RUNTIME_DIR) $(PMCS)

md2.pmc : mdx.pmc
	$(PERL) -pe "s|mdx|md2|g; s|MDx|MD2|g" mdx.pmc > md2.pmc

md4.pmc : mdx.pmc
	$(PERL) -pe "s|mdx|md4|g; s|MDx|MD4|g" mdx.pmc > md4.pmc

md5.pmc : mdx.pmc
	$(PERL) -pe "s|mdx|md5|g; s|MDx|MD5|g" mdx.pmc > md5.pmc

ripemd160.pmc : mdx.pmc
	$(PERL) -pe "s|mdx|ripemd|g; s|MDx|RIPEMD160|g" mdx.pmc > ripemd160.pmc

sha.pmc : mdx.pmc
	$(PERL) -pe "s|mdx|sha|g; s|MDx|SHA|g" mdx.pmc > sha.pmc

sha1.pmc : mdx.pmc
	$(PERL) -pe "s|mdx|sha|g; s|MDx_CTX|SHA_CTX|g; s|MDx_DIGEST|SHA_DIGEST|g; s|MDx|SHA1|g" mdx.pmc > sha1.pmc

sha256.pmc : mdx.pmc
	$(PERL) -pe "s|mdx|sha|g; s|MDx|SHA256|g" mdx.pmc > sha256.pmc

sha512.pmc : mdx.pmc
	$(PERL) -pe "s|mdx|sha|g; s|MDx|SHA512|g" mdx.pmc > sha512.pmc

test : all
	cd ../.. ; perl -Ilib t/harness t/dynpmc/*.t

testclean :
	$(RM_F) "../../t/dynpmc/*.pir" "../../t/dynpmc/*.pbc"
	$(RM_F) $(DIGEST)

# win32 import library
# win32 program data base - contains debugging info
# win32 incremental link status files
# win32 exported functions and data items
# win32 export definition files
dynext-clean :
	$(RM_F) "*.lib" "*.pdb" "*.ilk" "*.exp" "*.def" "*.manifest"

clean : testclean dynext-clean
	$(RM_F) "*.c" "pmc_*.h" "*_group.h" "*$(LOAD_EXT)" "*.dump" "lib-*" "*$(O)"

archclean :
	$(RM_F) "*$(LOAD_EXT)" "*$(O)" Makefile

realclean: clean
	$(RM_F) Makefile build.pl

distclean: realclean

svnclean: realclean
