PERL = ${perl}
RM_F = ${rm_f}
LOAD_EXT = ${load_ext}
DESTDIR = ${build_dir}${slash}runtime${slash}parrot${slash}dynext
O = ${o}

# add your dynamic pmcs here
#
# gdbmhash is only built when 'libgdbm.so' is available
#
# There is no config probe for libquantum yet, so add 'quantumreg' manually if desired
#
PMCS = \
#CONDITIONED_LINE(has_gdbm):gdbmhash \
  dynlexpad \
  match \
  matchrange \
  subproxy \
  foo

DISABLED_PMCS = \
  pybuiltin \
  pyclass \
  pyobject \
  pyboolean \
  pycomplex \
  pydict \
  pyexception \
  pyfloat \
  pyfunc \
  pyboundmeth \
  pyboundcall \
  pynci \
  pystaticmeth \
  pygen \
  pyint \
  pylist \
  pylong \
  pymodule \
  pynone \
  pytype \
  pyslice \
  pystring \
  pytuple \
  pyproxytype \
  pyproxyclass \
  pyiter

BUILD = $(PERL) "${build_dir}${slash}tools${slash}build${slash}dynclasses.pl"

all :
	@$(BUILD) generate $(PMCS)
	@$(BUILD) compile $(PMCS)
	@$(BUILD) linklibs $(PMCS)
	@$(BUILD) copy "--destination=$(DESTDIR)" $(PMCS)

test : all
	cd .. ; perl -Ilib t/harness t/dynclass/*.t

testclean :
	$(RM_F) "../../t/dynclass/*.pir" "../../t/dynclass/*.pbc"

# win32 import library
# win32 program data base - contains debugging info
# win32 incremental link status files
# win32 exported functions and data items
# win32 export definition files
dynext-clean :
	$(RM_F) "*.lib" "*.pdb" "*.ilk" "*.exp" "*.def"

clean : testclean dynext-clean
	$(RM_F) "*.c" "pmc_*.h" "*_group.h" "*$(LOAD_EXT)" "*.dump" "lib-*" "*$(O)"

realclean: clean
	$(RM_F) Makefile build.pl

distclean: realclean

cvsclean: realclean
