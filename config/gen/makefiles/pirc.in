

# Setup	some commands
LN_S	 = @lns@
PERL	 = @perl@
RM_RF	 = @rm_rf@
PARROT	 = ../../parrot@exe@
TOOL_DIR = ../..
CC		 = @cc@
CP		 = @cp@
BUILD	 = $(PERL) @build_dir@/tools/build/dynpmc.pl
O		 = @o@
EXE		 = @exe@

CC_INC	   = @cc_inc@
C_LIBS	   = @libs@
CC_SHARED  = @cc_shared@
CFLAGS	   = $(CC_INC) @ccflags@ @cc_debug@	@ccwarn@ @cc_hasjit@ @cg_flag@ @gc_flag@ $(CC_SHARED)
LINK_DYNAMIC  =	@link_dynamic@
LINK	   = @link@
LINKFLAGS  = @linkflags@ @link_debug@ @ld_debug@
LD		   = @ld@
LDFLAGS	   = @ldflags@ @ld_debug@



# the default target
all: pirc


SOURCES	= src/pirmain.c	\
  src/pirparser.c \
  src/pirlexer.c \
  src/pirout.c \
  src/pastout.c	\
  src/pirvtable.c \
  src/jsonout.c \
  src/pirutil.c


pirc: pirmain$(O) pirparser$(O)	pirlexer$(O) pirout$(O)	pastout$(O)	pirvtable$(O) jsonout$(O) pbcout$(O) pirutil$(O)
	$(CC) -o pirc$(EXE)	pirmain$(O)	pirparser$(O) pirlexer$(O) pirout$(O) pastout$(O) pirvtable$(O) jsonout$(O) pbcout$(O) pirutil$(O)

pirmain$(O): src/pirmain.c src/pirparser.h
	$(CC) $(CFLAGS)	-c src/pirmain.c

pirparser$(O): src/pirparser.c src/pirparser.h src/pirlexer.h
	$(CC) $(CFLAGS)	-c src/pirparser.c

pirlexer$(O): src/pirlexer.c src/pirlexer.h
	$(CC) $(CFLAGS)	-c src/pirlexer.c

pirout$(O):	src/pirout.c src/pirout.h
	$(CC) $(CFLAGS)	-c src/pirout.c

pastout$(O): src/pastout.c src/pastout.h
	$(CC) $(CFLAGS)	-c src/pastout.c

pbcout$(O): src/pbcout.c src/pbcout.h
	$(CC) $(CFLAGS)	-c src/pbcout.c

pirvtable$(O): src/pirvtable.c src/pirvtable.h
	$(CC) $(CFLAGS)	-c src/pirvtable.c

jsonout$(O): src/jsonout.c src/jsonout.h
	$(CC) $(CFLAGS)	-c src/jsonout.c

pirutil$(O): src/pirutil.c src/pirutil.h
	$(CC) $(CFLAGS) -c src/pirutil.c


# This is a	listing	of all targets,	that are meant to be called	by users
help:
	@echo ""
	@echo "Following targets are available for the user:"
	@echo ""
	@echo "	 all:				pirc"
	@echo "						This is	the	default."
	@echo ""
	@echo "Documentation:"
	@echo "  docs:              Generate html documentation in doc directory"
	@echo ""
	@echo "Testing:"
	@echo "	 test:				Run	the	test suite."
	@echo "	 testclean:			Clean up test results."
	@echo ""
	@echo "Cleaning:"
	@echo "	 clean:				Basic cleaning up."
	@echo "	 realclean:			Removes	also files generated by	'Configure.pl'"
	@echo "	 distclean:			Removes	also anything built, in	theory"
	@echo ""
	@echo "Misc:"
	@echo "	 help:				Print this help	message."
	@echo ""


docs: src/pirlexer.c src/pirparser.c doc/design.pod
	pod2html --css=http://www.parrotcode.org/css/perl.css src/pirlexer.c > doc/pirlexer.html
	pod2html --css=http://www.parrotcode.org/css/perl.css src/pirparser.c > doc/pirparser.html
	pod2html --css=http://www.parrotcode.org/css/perl.css src/pirvtable.c > doc/pirvtable.html
	pod2html --css=http://www.parrotcode.org/css/perl.css src/pirout.c > doc/pirout.html
	pod2html --css=http://www.parrotcode.org/css/perl.css src/jsonout.c > doc/jsonout.html
	pod2html --css=http://www.parrotcode.org/css/perl.css src/pastout.c > doc/pastout.html
	pod2html --css=http://www.parrotcode.org/css/perl.css src/pirutil.c > doc/pirutil.html
	pod2html --css=http://www.parrotcode.org/css/perl.css doc/design.pod > doc/design.html
	pod2html --css=http://www.parrotcode.org/css/perl.css README.pod > doc/README.html

test: all
	cd t && prove && cd ..
	podchecker $(SOURCES) \
	doc/design.pod \
	README.pod


clean:
	$(RM_RF) *$(O)


realclean: clean
	$(RM_RF) \
	$(STICKY_FILES)	\
	pirc$(EXE) \
	doc/*.html

distclean: realclean
