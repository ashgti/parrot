# Copyright (C) 2003-2009, Parrot Foundation.
# $Id$

PERL          := @perl@
RM_F          := @rm_f@
CP            := @cp@
CHMOD         := @chmod@
LOAD_EXT      := @load_ext@
BUILD_DIR     := @build_dir@
RECONFIGURE   := $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
INSTALL_DIR   := $(BUILD_DIR)/runtime/parrot/dynext
O             := @o@
CC            := @cc@
LD            := @ld@
LDFLAGS       := @ldflags@ @ld_debug@ @rpath_blib@ @linkflags@
LD_LOAD_FLAGS := @ld_load_flags@
CFLAGS        := @ccflags@ @cc_shared@ @cc_debug@ @ccwarn@ @cc_hasjit@ @cg_flag@ @gc_flag@
LIBPARROT     := @libparrot_ldflags@

BUILD_TOOLS_DIR := $(BUILD_DIR)@slash@tools@slash@build
OPS2C           := $(PERL) -I$(BUILD_DIR)@slash@lib $(BUILD_TOOLS_DIR)@slash@ops2c.pl
INCLUDES        := -I$(BUILD_DIR)@slash@include -I@build_dir@@slash@src@slash@pmc
LINKARGS        := $(LDFLAGS) $(LD_LOAD_FLAGS) $(LIBPARROT) @icu_shared@ @libs@

OPS_TARGETS := \
#IF(cg_flag):  obscure_ops_cg$(LOAD_EXT) \
#IF(cg_flag):  obscure_ops_cgp$(LOAD_EXT) \
  obscure_ops$(LOAD_EXT) \
  obscure_ops_switch$(LOAD_EXT) \
#IF(cg_flag):  math_ops_cg$(LOAD_EXT) \
#IF(cg_flag):  math_ops_cgp$(LOAD_EXT) \
  math_ops$(LOAD_EXT) \
  math_ops_switch$(LOAD_EXT)

CLEANUPS := \
  "*.c" \
  "*.h" \
#IF(o):  "*@o@" \
#IF(win32):  "*.lib" \
#IF(win32):  "*.pdb" \
#IF(win32):  "*.ilk" \
#IF(win32):  "*.exp" \
#IF(win32):  "*.def" \
#IF(win32):  "*.manifest" \
#IF(load_ext):  "*@load_ext@"


all : $(OPS_TARGETS)
#IF(cygwin or hpux):	$(CHMOD) 0775 *$(LOAD_EXT)
	$(CP) *$(LOAD_EXT) $(INSTALL_DIR)
#IF(cygwin or hpux):	$(CHMOD) 0775 $(INSTALL_DIR)/*$(LOAD_EXT)

Makefile: ../../config/gen/makefiles/dynoplibs.in
	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::makefiles --target=src/dynoplibs/Makefile

obscure_ops$(LOAD_EXT): obscure_ops$(O)
	$(LD) @ld_out@obscure_ops$(LOAD_EXT) obscure_ops$(O) $(LINKARGS)
#IF(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;2

obscure_ops$(O): obscure_ops.c
	$(CC) -c @cc_o_out@obscure_ops$(O) $(INCLUDES) $(CFLAGS) obscure_ops.c

obscure_ops.c: obscure.ops
	$(OPS2C) C --dynamic obscure.ops

obscure_ops_switch$(LOAD_EXT): obscure_ops_switch$(O)
	$(LD) @ld_out@obscure_ops_switch$(LOAD_EXT) obscure_ops_switch$(O) $(LINKARGS)
#IF(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;2

obscure_ops_switch$(O): obscure_ops_switch.c
	$(CC) -c @cc_o_out@obscure_ops_switch$(O) $(INCLUDES) $(CFLAGS) obscure_ops_switch.c

obscure_ops_switch.c: obscure.ops
	$(OPS2C) CSwitch --dynamic obscure.ops

obscure_ops_cg$(LOAD_EXT): obscure_ops_cg$(O)
	$(LD) @ld_out@obscure_ops_cg$(LOAD_EXT) obscure_ops_cg$(O) $(LINKARGS)
#IF(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;2

obscure_ops_cg$(O): obscure_ops_cg.c
	$(CC) -c @cc_o_out@obscure_ops_cg$(O) $(INCLUDES) $(CFLAGS) obscure_ops_cg.c

obscure_ops_cg.c: obscure.ops
	$(OPS2C) CGoto --dynamic obscure.ops

obscure_ops_cgp$(LOAD_EXT): obscure_ops_cgp$(O)
	$(LD) @ld_out@obscure_ops_cgp$(LOAD_EXT) obscure_ops_cgp$(O) $(LINKARGS)
#IF(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;2

obscure_ops_cgp$(O): obscure_ops_cgp.c
	$(CC) -c @cc_o_out@obscure_ops_cgp$(O) $(INCLUDES) $(CFLAGS) obscure_ops_cgp.c

obscure_ops_cgp.c: obscure.ops
	$(OPS2C) CGP --dynamic obscure.ops

math_ops$(LOAD_EXT): math_ops$(O)
	$(LD) @ld_out@math_ops$(LOAD_EXT) math_ops$(O) $(LINKARGS)
#IF(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;2

math_ops$(O): math_ops.c
	$(CC) -c @cc_o_out@math_ops$(O) $(INCLUDES) $(CFLAGS) math_ops.c

math_ops.c: math.ops
	$(OPS2C) C --dynamic math.ops

math_ops_switch$(LOAD_EXT): math_ops_switch$(O)
	$(LD) @ld_out@math_ops_switch$(LOAD_EXT) math_ops_switch$(O) $(LINKARGS)
#IF(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;2

math_ops_switch$(O): math_ops_switch.c
	$(CC) -c @cc_o_out@math_ops_switch$(O) $(INCLUDES) $(CFLAGS) math_ops_switch.c

math_ops_switch.c: math.ops
	$(OPS2C) CSwitch --dynamic math.ops

math_ops_cg$(LOAD_EXT): math_ops_cg$(O)
	$(LD) @ld_out@math_ops_cg$(LOAD_EXT) math_ops_cg$(O) $(LINKARGS)
#IF(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;2

math_ops_cg$(O): math_ops_cg.c
	$(CC) -c @cc_o_out@math_ops_cg$(O) $(INCLUDES) $(CFLAGS) math_ops_cg.c

math_ops_cg.c: math.ops
	$(OPS2C) CGoto --dynamic math.ops

math_ops_cgp$(LOAD_EXT): math_ops_cgp$(O)
	$(LD) @ld_out@math_ops_cgp$(LOAD_EXT) math_ops_cgp$(O) $(LINKARGS)
#IF(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;2

math_ops_cgp$(O): math_ops_cgp.c
	$(CC) -c @cc_o_out@math_ops_cgp$(O) $(INCLUDES) $(CFLAGS) math_ops_cgp.c

math_ops_cgp.c: math.ops
	$(OPS2C) CGP --dynamic math.ops

test : all
	cd ../.. && $(PERL) -Ilib t/harness t/dynoplibs/*.t

testclean :
	$(RM_F) "../../t/dynoplibs/*.pir" "../../t/dynoplibs/*.pasm"

clean :
	$(RM_F) $(CLEANUPS)

realclean:
	$(RM_F) $(CLEANUPS) Makefile

distclean: realclean

# Local variables:
#   mode: makefile
# End:
# vim: ft=make:
