O = ${o}
RM_F = ${rm_f}
TOUCH  = $(PERL) -e ${PQ}$$n=time; utime $$n,$$n,@ARGV${PQ}

INC=../include/parrot

NONGEN_HEADERS = ${nongen_headers}


O_FILES = ${pmc_o}

#DO NOT ADD C COMPILER FLAGS HERE
#Add them in Configure.pl--look for the
#comment 'ADD C COMPILER FLAGS HERE'
CFLAGS = ${ccflags} ${cc_debug} ${ccwarn} -I../include

C_LIBS = ${libs}

CC = ${cc}
PERL = ${perl}
MAKE_F=${make}
PMC2C_old=$(PERL) pmc2c.pl

PMC2CD=$(PERL) pmc2c2.pl --dump
PMC2CC=$(PERL) pmc2c2.pl --c --no-lines

PMC2C=$(PMC2CC)

.SUFFIXES: .c .h .pmc .dump $(O)

.c$(O):
	$(CC) $(CFLAGS) ${cc_o_out}$@ -c $<

.pmc.dump:
	$(PMC2CD) *.pmc

all : dumps $(O_FILES) fin

dumps: ../vtable.dump $(DUMP_FILES)
	$(PMC2CD) *.pmc

# main depends on $(O_FILES)
# when 1 is recompiled each other is out of data, but not
# to the rules inside here, so we touch all O_FILES at the
# end and avoid getting called ever and ever
fin:
	$(TOUCH) $(O_FILES)

../vtable.dump: ../vtable.tbl
	$(PERL) pmc2c2.pl --vt

${pmc_build}

clean:	progclean
	$(RM_F) *.c *.h *.dump

progclean:
	$(RM_F) *$(O)

update:
	cvs -q update -dP

