/*
Copyright: 2001-2003 The Perl Foundation.  All Rights Reserved.
$Id$

=head1 NAME

classes/perlnum.pmc - Perl Floating-Point Number

=head1 DESCRIPTION

These are the vtable functions for the PerlNum base class

=head2 Methods

=over 4

=cut

*/

#include "parrot/parrot.h"

void Parrot_perlscalar_morph(Interp* , PMC* pmc, INTVAL type);
void Parrot_perlscalar_set_pmc(Interp* , PMC* pmc, PMC* value);

pmclass PerlNum extends Float {

/*

=item C<STRING *get_string()>

Returns the number as a Parrot string.

=cut

*/

    STRING* get_string () {
        double d = (double) PMC_num_val(SELF);
        const char *sign = "-";
	if (!signbit(PMC_num_val(SELF)))
            sign = "";
        d = fabs(d);
        return Parrot_sprintf_c(INTERP, "%s" FLOATVAL_FMT, sign, d);
    }

/*

=item C<void set_pmc(PMC *value)>

Sets the value of the number to the value in C<*value>.

=cut

*/

    void set_pmc (PMC* value) {
        perlscalar.SELF.set_pmc(value);
    }

/*

=item C<void set_integer_native(INTVAL value)>

=cut

*/

    void set_integer_native (INTVAL value) {
        DYNSELF.morph(enum_class_PerlInt);
        DYNSELF.set_integer_native(value);
    }

/*

=item C<void set_number_native(FLOATVAL value)>

Sets the value of the number to C<value>.

Note that if C<value> is an integer the number morphs to a C<PerlInt>.

=cut

*/

    void set_number_native (FLOATVAL value) {
        INTVAL vali = (INTVAL) value;

        PMC_num_val(SELF) = value;
        /* don't mess around with - 0 */
        if (value == vali && (vali || !Parrot_signbit(value)))
            DYNSELF.set_integer_native(vali);
    }

/*

=item C<void set_string_native(STRING *value)>

Sets the value of the number to the value of C<*value>.

Note that this method morphs the number into a C<PerlString>.

=cut

*/

    void set_string_native (STRING * value) {
        DYNSELF.morph(enum_class_PerlString);
        DYNSELF.set_string_native(value);
    }

/*

=item C<void morph(INTVAL type)>

Morphs the scalar to the specified type.

=cut

*/

    void morph (INTVAL type) {
        perlscalar.SELF.morph(type);
    }
}

/*

=back

=cut

*/

/*
 * Local variables:
 * c-indentation-style: bsd
 * c-basic-offset: 4
 * indent-tabs-mode: nil
 * End:
 *
 * vim: expandtab shiftwidth=4:
*/

