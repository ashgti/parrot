/* Eval.pmc
 *  Copyright: (When this is determined...it will go here)
 *  CVS Info
 *     $Id$
 *  Overview:
 *     These are the vtable functions for evaluating a code segment
 *  Data Structure and Algorithms:
 *  History:
 *     Initial version by leo 2003/01/16
 *  Notes:
 *  References:
 */

#include "parrot/parrot.h"
#include "parrot/runops_cores.h"
#include "parrot/interp_guts.h"
#include "parrot/packfile.h"

pmclass Eval extends Sub {

   STRING* name () {
	return whoami;
   }

   void* invoke (void* next) {
       PMC * pad = ((struct Parrot_Sub *)SELF->data)->lex_pad;
       struct PackFile_ByteCode *old_cs;
       struct PackFile_ByteCode *eval_cs = (struct PackFile_ByteCode *)
		((struct Parrot_Sub *)SELF->data)->init;

       if (pad) {
	   /* put the correct pad in place */
	   stack_push(INTERP, &INTERP->ctx.pad_stack, pad,
		   STACK_ENTRY_PMC, STACK_CLEANUP_NULL);
       }

       /* return address that the interpreter should jump to */
       stack_push(INTERP, &(INTERP->ctx.control_stack), next,
	       STACK_ENTRY_DESTINATION, STACK_CLEANUP_NULL);
       /* switch to code segment */
       old_cs = Parrot_switch_to_cs(interpreter, eval_cs);
       runops(interpreter, 0);
       (void)Parrot_switch_to_cs(interpreter, old_cs);
       return next;
   }
}
