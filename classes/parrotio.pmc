/* ParrotIO.pmc
 *  Copyright: 2001-2003 The Perl Foundation.  All Rights Reserved.
 *  CVS Info
 *     $Id$
 *  Overview:
 *     These are the vtable functions for Parrot IO
 *  Data Structure and Algorithms:
 *  History:
 *     Initial version by leo 2003/06/23
 *  Notes:
 *  References:
 */

#include "parrot/parrot.h"

pmclass ParrotIO {

    STRING* name () {
	return whoami;
    }

    void init () {
	PObj_active_destroy_SET(SELF);
	PObj_needs_early_DOD_SET(SELF);
	interpreter->has_early_DOD_PMCs = 1;
    }

    void destroy () {
	ParrotIO *io = PMC_data(SELF);
        if (io && !(io->flags & PIO_F_SHARED))
            PIO_close(interpreter, SELF);
    }

    void clone (PMC *dest) {
	VTABLE_init(INTERP, dest);
	/* For now both PMCs refer to the same ParrotIO object.
	 * If we have different IO layers, we might copy these structures
	 */
	PMC_data(dest) = PMC_data(SELF);
	dest->cache.struct_val = SELF->cache.struct_val;
    }

    INTVAL get_bool() {
	return !PIO_eof(INTERP, SELF);
    }
}
