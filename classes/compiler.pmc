/*
Copyright: 2001-2003 The Perl Foundation.  All Rights Reserved.
$Id$

=head1 NAME

classes/compiler.pmc - Compiler PMC

=head1 DESCRIPTION

C<Compiler> extends C<NCI> to provide an interface for implementing
assembler/compilers.

=head2 Methods

=over 4

=cut

*/

#include "parrot/parrot.h"
#include "parrot/method_util.h"
#include "parrot/interp_guts.h"

pmclass Compiler extends NCI need_ext {

/*

=item C<void *invoke(void *code_ptr)>

Compiles the source code starting at C<code_ptr> and returns a new
C<Eval> PMC with a new PackFile attached.

=cut

*/

    void* invoke (void * code_ptr) {
        Parrot_csub_t func = (Parrot_csub_t)D2FPTR(PMC_data(SELF));
        PMC *code_seg, *p5;
        struct PackFile *eval_pf;
        STRING *s5;

        /*
         * preserve regs
         */
        s5 = REG_STR(5);
        p5 = REG_PMC(5);
        REG_STR(5) = (String*) code_ptr;
        Parrot_push_i(interpreter, &REG_INT(0));

        func(INTERP, SELF);

        Parrot_pop_i(interpreter, &REG_INT(0));
        /* return value PMC is in P5 */
        code_seg = REG_PMC(5);
        REG_PMC(5) = p5;
    
        eval_pf = (struct PackFile *) PMC_data(code_seg);
        /* morph the Byte_cointer *pointer in code_seg to an invokable sub */
        code_seg->vtable = Parrot_base_vtables[enum_class_Eval];
        VTABLE_init(interpreter, code_seg);
        VTABLE_set_pointer(interpreter, code_seg, (void*) eval_pf);
        return code_seg;
    }
}

/*

=back

=head1 SEE ALSO

F<docs/pdds/pdd06_pasm.pod>.

=head1 HISTORY

Initial revision by leo 2003/01/16

=cut

*/

/*
 * Local variables:
 * c-indentation-style: bsd
 * c-basic-offset: 4
 * indent-tabs-mode: nil
 * End:
 *
 * vim: expandtab shiftwidth=4:
*/
