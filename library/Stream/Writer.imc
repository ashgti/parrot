=head1 TITLE

Stream::Writer - a PIR sub as target for a Stream

=head1 VERSION

version 0.1

=head1 SYNOPSIS
    
    # create the stream
    find_type I0, "Stream::Writer"
    new stream, I0
    
    # set the source sub
    newsub temp, .Sub, _reader
    stream."source"( temp )

    stream."write"( "hello, world" )
    
    ...
    
    .sub _reader method
	.local string str
	str = self."read"()
    .end
    
=head1 DESCRIPTION

=cut

.sub __stream_writer_onload @LOAD
    .local int i
    .local pmc base
    .local pmc sub
    
    find_type i, "Stream::Writer"
    if i > 1 goto END
    
    load_bytecode "library/Stream/Base.imc"
    
    getclass base, "Stream::Base" 
    subclass sub, base, "Stream::Writer"

    addattribute sub, "writer"
    addattribute sub, "status"
    
END:
    .pcc_begin_return
    .pcc_end_return
.end

.namespace ["Stream::Writer"]

=head1 METHODS

=over 4

=cut

.include "library/dumper.imc"

.sub _reader_stub method
    .local pmc source

    getprop source, "CALL", P0
    source()

    # close the source    
    source = find_global "Stream::Base", "close"
    P2 = self
    source()

    # mark it as closed
    classoffset I0, self, "Stream::Writer"
    inc I0
    .local pmc status
    getattribute status, self, I0
    status = 0
    
    .pcc_begin_return
    .pcc_end_return
.end

.sub __init method
    .local pmc status
    
    new status, .PerlInt
    set status, 0
#    setattribute self, "status", status    
    classoffset I0, self, "Stream::Writer"
    inc I0
    setattribute self, I0, status
.end

.sub __set_pmc method
    .param pmc source
    .local pmc stub
    .local pmc status
    
    
    newsub stub, .Sub, _reader_stub
    setprop stub, "CALL", source
    self."setSource"( stub )

    classoffset I0, self, "Stream::Writer"
    inc I0
    getattribute status, self, I0
    status = 1
.end

.sub close method
    .local pmc super
    .local string str

    null str
LOOP:
    I0 = self."connected"()
    unless I0 goto END
    self."write"( str )
    branch LOOP
END:
    .pcc_begin_return
    .pcc_end_return
.end

.sub connected method
    .local pmc status
    .local int ret
    
    classoffset I0, self, "Stream::Writer"
    inc I0
    getattribute status, self, I0
    ret = status
    .pcc_begin_return
    .return ret
    .pcc_end_return
.end

=item source."write"()

...

=cut

.sub write method
    .param string str
    .local pmc source
    .local pmc status

    classoffset I0, self, "Stream::Writer"
    P0 = clone P1
    setattribute self, I0, P0
    inc I0
    getattribute status, self, I0

    if status == 0 goto END
    
    if status == 2 goto WRITE
    status = 2
    self."write"( "" )
WRITE:

    classoffset I0, self, "Stream::Writer"
    setattribute self, I0, P1
    
    source = self."source"()
    isnull source, END
    typeof I0, source
    if I0 == .PerlUndef goto END

    source( str )
END:
    .pcc_begin_return
    .pcc_end_return
.end

=item source."rawRead"() (B<internal>)

...

=cut

.sub rawRead method
    .local string str
    .local pmc cont
    .local pmc writer
    
    cont = self."source"()
    isnull cont, END_OF_STREAM

    newsub cont, .Continuation, _CONT
    self."setSource"( cont )

    classoffset I0, self, "Stream::Writer"
    getattribute writer, self, I0

    .pcc_begin prototyped
    .pcc_call writer
_CONT:
    .result str
    .pcc_end

    .pcc_begin_return
    .return str
    .pcc_end_return
END_OF_STREAM:
    null writer
    classoffset I0, self, "Stream::Writer"
    setattribute self, I0, writer
    null str
    .pcc_begin_return
    .return str
    .pcc_end_return
.end

=back

=head1 AUTHOR

Jens Rieks E<lt>parrot at jensbeimsurfen dot deE<gt> is the author
and maintainer.
Please send patches and suggestions to the Perl 6 Internals mailing list.

=head1 COPYRIGHT

Copyright (c) 2004, the Perl Foundation.

=cut
