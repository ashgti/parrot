=head1 TITLE

anim_parrot_logo.imc - animate a Parrot logo with the SDL Parrot bindings

=head1 SYNOPSIS

To run this file, be in the Parrot directory and run the following command:

	$ parrot examples/sdl/anim_parrot_logo.imc
	Took 1.541296 seconds to draw 1080 frames (700.709011 fps)
	$

=cut

.sub _main
	_init()
	_MAIN()
	end
.end

.include "library/sdl_types.imc"

.pcc_sub _init prototyped
	.include "library/sdl.pasm"
	.pcc_begin_return
	.pcc_end_return
.end

.sub _MAIN
	.local pmc SDL_Init
	.local pmc SDL_Quit
	.local pmc SDL_FreeSurface
	.local pmc SDL_BlitSurface

	SDL_Init        = global "SDL::Init"
	SDL_Quit        = global "SDL::Quit"
	SDL_FreeSurface = global "SDL::FreeSurface"
	SDL_BlitSurface = global "SDL::BlitSurface"

	.pcc_begin prototyped
		.arg 65535
		.nci_call SDL_Init
	.pcc_end

	.local pmc screen_settings
	new screen_settings, .PerlHash
	set screen_settings['width'],  640
	set screen_settings['height'], 480
	set screen_settings['bpp'],      0
	set screen_settings['flags'],    0

	.local object screen
	screen = _new_SDL_Screen( screen_settings )

	.local pmc screen_rect
	new screen_rect, .PerlHash
	set screen_rect['width'],  640
	set screen_rect['height'], 480
	set screen_rect['x'],        0
	set screen_rect['y'],        0

	.local int bg_color
	bg_color = _new_SDL_Color( 0, 0, 0 )

	.local pmc parrot_rect_args
	new parrot_rect_args, .PerlHash
	set parrot_rect_args['width'],     100
	set parrot_rect_args['height'],     56
	set parrot_rect_args['x'],           0
	set parrot_rect_args['y'],         212        

	.local object parrot
	parrot = _new_SDL_Image( "examples/sdl/parrot_small.png" )

	.local float start_time
	time start_time

	_animate_on_x_axis(screen, parrot, parrot_rect_args, bg_color, 0,   540,  1)
	_animate_on_x_axis(screen, parrot, parrot_rect_args, bg_color, 540,   0, -1)

	.local float end_time
	time end_time

	.local float total_time
	total_time = end_time - start_time

	.local float fps
	fps = 1080/total_time

	print "Took "
	print total_time
	print " seconds to draw 1080 frames ("
	print fps
	print " fps)\n"

	.pcc_begin prototyped
		.nci_call SDL_Quit
	.pcc_end

	.pcc_begin prototyped
		.arg screen
		.nci_call SDL_FreeSurface
	.pcc_end

	.pcc_begin_return
	.pcc_end_return
.end

.pcc_sub _animate_on_x_axis
	.param object screen
	.param object parrot
	.param object parrot_rect_args
	.param int bg_color
	.param int start_x
	.param int end_x
	.param int step_size

	.local int x
	set x, start_x

loop_start:
	_blank_rect( screen, parrot_rect_args, bg_color )
	set parrot_rect_args['x'], x
	_draw_parrot( screen, parrot, parrot_rect_args, step_size )

	add x, step_size
	if x != end_x goto loop_start

	.pcc_begin_return
	.pcc_end_return
.end

.pcc_sub _blank_rect prototyped
	.param pmc screen
	.param pmc rect
	.param object color

	.local pmc SDL_FillRect
	SDL_FillRect   = global "SDL::FillRect"
	
	.pcc_begin prototyped
		.arg screen
		.arg rect
		.arg color
		.nci_call SDL_FillRect
	.pcc_end

	.pcc_begin_return
	.pcc_end_return
.end

.pcc_sub _draw_parrot prototyped
	.param pmc screen
	.param pmc parrot
	.param pmc args
	.param int modifier

	.local pmc SDL_BlitSurface
	SDL_BlitSurface = global "SDL::BlitSurface"

	.local pmc SDL_UpdateRect
	SDL_UpdateRect  = global "SDL::UpdateRect"

	.local object dest_rect
	dest_rect  = _new_SDL_Rect()

	.local int width
	width = args['width']

	.local int height
	height = args['height']

	.local int x
	x = args['x']

	.local int y
	y = args['y']

	set dest_rect['width'], width
	set dest_rect['height'], height
	set dest_rect['x'], x
	set dest_rect['y'], y

	.local object src_rect
	src_rect = _new_SDL_Rect()

	set src_rect['width'], width
	set src_rect['height'], height
	set src_rect['x'], 0
	set src_rect['y'], 0

	.pcc_begin prototyped
		.arg parrot
		.arg src_rect
		.arg screen
		.arg dest_rect
		.nci_call SDL_BlitSurface
	.pcc_end

	eq x, 0, no_inc
	sub x, modifier

no_inc:
	inc width

	.pcc_begin prototyped
		.arg screen
		.arg x
		.arg y
		.arg width
		.arg height
		.nci_call SDL_UpdateRect
	.pcc_end	

	.pcc_begin_return
	.pcc_end_return
.end

=head1 AUTHOR

chromatic, E<lt>chromatic at wgz dot orgE<gt>, with help from Allison Randal,
Leo TE<ouml>tsch, and John Bates.

=head1 COPYRIGHT

Copyright (c) 2004, The Perl Foundation.

=cut
