=head1 .imc file extension

http://xrl.us/jc4u

 IMC vs. PIR
 Two names enter
 One name leaves

 /me giggles
 -- Chip Salzenberg

=head1 Deprecated C APIs

Currently no C APIs are deprecated.

=head1 Deprecated methods

=over 4

=item PGE

PGE::P6Regex is now a registered compiler, and should be used like so:

 <@pmichaud> it's easy; instead of  $P0 = find_global "PGE", "p6rule"
   one now does  $P0 = compreg "PGE::P6Regex"

This syntax is also true for PGE::Glob and PGE::P5Regex

=back

=head1 Deprecated ops

From L<http://www.parrotcode.org/docs/ops/var.html>, the following ops are
deprecated:

=over 4

=item store_global

=item find_global

=item find_name

=item substr_r

See RT#41749.

=back

There are several variants of some of the above ops; all are deprecated,
and are replaced by the ops {set,get}_[hll,root]_global. See also
http://www.parrotcode.org/docs/ops/var.html.

From L<http://www.parrotcode.org/docs/ops/experimental.html>, the following ops
are deprecated:

=over 4

=item B<new>(out PMC, in INT, in STR)

=item B<instantiate>(out PMC)

=back

They will be removed in the 0.5.0 release.

=head1 Deprecated Class Features

=over 4

=item 1

Type IDs will go away in 0.5.0.

=item 2

The C<classname> op is deprecated and will be removed in the 0.5.0 release.
It's an exact duplicate of the string return variant of the C<typeof> op.

=item 3

The experimental C<instantiate> opcode is deprecated and will be removed in the
0.5.0 release.

(The C<instantiate> vtable function becomes core in 0.5.0, but is accessed via
the "new" opcode for the PMCs that use it.)

=item 4

  PMC* subclass(PMC *name)

The subclass vtable method is deprecated and will be removed in the 0.5.0
release.

=item 5

The PMC union struct is deprecated and will be removed once all core PMCs have
been updated.

=back

=head1 FUTURE changes

Not yet deprecated, but it's recommended to use the new syntax and
gradually change the old.

=over 4

=item PMC Class name IDs

Instead of:

  $P0 = new Integer

or

  $P0 = new .Integer # better, but ...

we are moving to use:

  $P0 = new 'Integer'

=item Assignment syntax with opcodes [#36283]

When the first argument of an opcode is C<OUT>, then the assignment syntax
will be allowed, as it is today.

In any other case (i.e. C<INOUT>, C<IN>), this will become
a syntax error. For example:

    $S0 = print
    $P0 = substr 1, 2, "x"

Will have to be:

    print $S0
    substr $P0, 1, 2, "x"

=back

=head1 Deprecated compiler tools

Currently no compiler tools are deprecated.
