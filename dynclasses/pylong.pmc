/*
Copyright: 2004 The Perl Foundation.  All Rights Reserved.
$Id$

=head1 NAME

classes/pylong.pmc - Python BigInt PMC class

=head1 DESCRIPTION

C<PyLong> provides arbitray precision integer mathematic functions.

=head2 Functions

=over 4

=item C<static void bigint_set_long(Interp*, PMC*, long value)>

=item C<static void bigint_set_double(Interp*, PMC*, double value)>

=cut

*/

#include "parrot/parrot.h"

pmclass PyLong extends BigInt dynpmc group python_group {

/*

=item C<STRING* get_string()>

Returns the string representation of the integer.

=item C<STRING* get_string_keyed_int(INTVAL base)>

Returns the string representation of the integer in base C<base>.

=item C<STRING* get_repr()>

Returns the string representation of the integer with the letter 'L'
appended.

=cut

*/

    STRING* get_string() {
        STRING *ps = SUPER();
        return string_append(INTERP, ps, const_string(INTERP, "L"), 0);
    }

    STRING* get_string_keyed_int(INTVAL base) {
        STRING *ps = SUPER(base);
        return string_append(INTERP, ps, const_string(INTERP, "L"), 0);
    }

    STRING* get_repr() {
        return SELF.get_string();
    }

/*

=item C<INTVAL hash()>

Returns a unique hash for this value

=cut

*/

    INTVAL hash () {
        return VTABLE_get_integer(INTERP, SELF);
    }

}

/*

=back

=cut

*/

/*
 * Local variables:
 * c-indentation-style: bsd
 * c-basic-offset: 4
 * indent-tabs-mode: nil
 * End:
 *
 * vim: expandtab shiftwidth=4:
*/
