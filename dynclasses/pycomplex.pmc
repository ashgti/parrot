/*
Copyright: 2004 The Perl Foundation.  All Rights Reserved.
$Id$

=head1 NAME

classes/pycomplex.pmc - Python Complex Numbers PMC Class

=head1 DESCRIPTION

C<Complex> provides a representation of complex numbers. It handles
string parsing/generating and basic mathematical operations.

=head2 Functions

=over 4

=cut

*/

#include "parrot/parrot.h"


pmclass PyComplex extends Complex dynpmc group python_group {

/*

=item C<STRING* get_string ()>

Returns the complex number as a string in the form C<a+bi>.

=cut

*/

    STRING* get_string () {
        STRING *s;
        FLOATVAL real = VTABLE_get_number_keyed_int(INTERP, SELF, 0);
        FLOATVAL imag = VTABLE_get_number_keyed_int(INTERP, SELF, 1);
        if (real == 0.0) {
            s = Parrot_sprintf_c(INTERP, "%.12vgj", imag);
        }
        else if (imag >= 0.0)
            s = Parrot_sprintf_c(INTERP,
                    "(%.12vg+%.12vgj)", real, imag);
        else
            s = Parrot_sprintf_c(INTERP,
                    "(%.12vg-%.12vgj)", real, -imag);
        return s;
    }

/*

=item C<STRING *get_repr()>

Returns the string representation of the integer.

=cut

*/

    STRING* get_repr () {
        return VTABLE_get_string(INTERP, SELF);
    }

/*

=item C<INTVAL hash()>

Returns a unique hash for this value

=cut

*/

    INTVAL hash () {
        return VTABLE_get_integer(INTERP, SELF);
    }

}

/*

=back

=cut

*/

/*
 * Local variables:
 * c-indentation-style: bsd
 * c-basic-offset: 4
 * indent-tabs-mode: nil
 * End:
 *
 * vim: expandtab shiftwidth=4:
*/
