# Copyright (C) 2009, Parrot Foundation.
# $Id$


grammar Ops::Grammar is PCT::Grammar;

token TOP {
    <ops>
    [ $ || <panic: 'Syntax error'> ]
    {*}
}

rule ops {
    <op>*
}

rule op {
    <op_type> 'op' <op_name=identifier> '(' <op_params>? ')' <op_flag>* 
    ::
    [ <op_body> || <panic: "Fail to parse op body"> ]
}

token op_type {
    [ 'inline' | 'function' ]
}

rule op_params {
    <op_param> [ ',' <op_param> ]*
}

rule op_param {
    <op_param_direction> <op_param_type>
}

rule op_param_direction {
    [ 'in' | 'out' | 'inout' | 'inconst' | 'invar' ]
}

rule op_param_type {
    [ 'INT' | 'NUM' | 'STR' | 'PMC' | 'KEY' | 'INTKEY' | 'LABEL' ]
}

rule op_flag {
    ':' <identifier>
}

# OpBody starts with '{' and ends with single '}' on line.
token op_body {
    '{' <op_body_chunk>* '}'
}

token op_body_chunk {
    | <-[{}]>
    | <op_body>
}

token identifier {
    <.ident>
}

# ws handles whitespace, pod and perl comments
token ws {
  [
  | \s+
  | '#' \N*
  | ^^ '=' .*? \n '=cut'
  ]*
}



# vim: expandtab shiftwidth=4 ft=perl6:
