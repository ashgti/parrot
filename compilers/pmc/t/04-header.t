#!parrot
# Check generating header for parsed PMC

.include 'compilers/pmc/t/common.pir'

.sub 'main' :main
.include 'test_more.pir'
load_bytecode 'compilers/pmc/pmc.pbc'
    .local int total

    plan(1)

    .local string filename
    filename = 'compilers/pmc/t/data/class00.pmc'
    $S0 = _slurp(filename)
    .local pmc compiler
    compiler = compreg 'PMC'
    $P0 = compiler.'compile'($S0, 'target'=>'past')

    .local pmc emitter
    $P1 = split '::', 'PMC::Emitter'
    emitter = new $P1
    emitter.'set_filename'(filename)
    $S0 = emitter.'generate_h_file'($P0)
    say $S0
    like($S0, "'DO NOT EDIT THIS FILE'", "Warning generated")

.end


# Don't forget to update plan!

# Local Variables:
#   mode: cperl
#   cperl-indent-level: 4
#   fill-column: 100
# End:
# vim: expandtab shiftwidth=4 ft=pir:
