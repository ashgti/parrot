#! perl
# Copyright (C) 2005, The Perl Foundation.
# $Id: pbc_merge.t 13020 2006-06-26 01:06:16Z jonathan $

=head1 NAME

t/tools/pmc2c.t - test the PMC to C generator

=head1 SYNOPSIS

    % prove t/tools/pmc2c.t

=head1 DESCRIPTION

Tests the C<pmc2c> utility by providing it with a number of source
pmc files, having it generate the resulting C file and verifying
the output.

We never actually check the *full* output of the conversion.
We simply check several smaller components to avoid a test file
that is far too unweildy.

=cut

use strict;
use warnings;
use lib qw( . lib ../lib ../../lib );

use Fatal qw{open close};
use Test::More;
use Parrot::Test tests => 1;
use Parrot::Config;

my $pmc2c = join $PConfig{slash}, qw(. tools build pmc2c.pl);

{
my $counter = 0;

sub pmc2c_output_like {
  my ($pmc)  = shift;
  my ($c)    = shift;
  my ($name) = shift;

  print "PMC is $pmc\n"; 
  my $c_file = pmc_to_c($pmc);

  open my $c_fh, '<', $c_file; 
  my $c_output = do { local undef $/; <$c_fh> };
  close $c_fh;

  if (! ref $c) {
    chop $c; # XXX Why doesn't chomp work here?
    $c = qr{ \Q $c \E };
  }

  like ($c_output,$c,$name);
}

sub pmc_to_c {
    my $pmc = shift;

    $counter++;

    my $pmc_file = "$0_$counter.pmc";
    open my $fh, '>', $pmc_file;
    print {$fh} $pmc;
    close $fh;

    system("$^X $pmc2c --dump $pmc_file");
    system("$^X $pmc2c -c $pmc_file");
    my $c_file = $pmc_file;
    $c_file =~ s/\.pmc$/\.c/;
    return $c_file;
}

}

pmc2c_output_like(<<'END_PMC',qr{DO NOT EDIT THIS FILE},'no edit warning');
pmclass a { }
END_PMC
