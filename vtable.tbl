# This is the main vtable data
# Lines have the following format:
# method type \tab return type name \tab type arg1 \tab type arg2
#
# Method type is either int, float, num, str, or unique if the method
# has a set of int entries, float entries, num entries, string
# entries, or is a unique method
#
# So, for instance, a function with two arguments where the second
# argument is a string PMC of some sort would look like this:
# string	void frob	INTVAL foo	STRING bar
#
# Note that we don't include the source "PMC* pmc" - that's done implicitly.
#
# "value" in non-unique methods (multimethods) is a magic name. Its type
# will be replaced appropriately.

unique	INTVAL type	
unique	STRING* name
unique	void init
unique	void clone		PMC* dest
unique	void morph		INTVAL type
unique	BOOLVAL move_to		void * destination
unique	INTVAL real_size	
unique	void destroy	
unique	INTVAL get_integer	 
unique	INTVAL get_integer_index	INTVAL index
unique	INTVAL get_integer_index_s	STRING* index
unique	FLOATVAL get_number	 
unique	FLOATVAL get_number_index	INTVAL index
unique	FLOATVAL get_number_index_s	STRING* index
unique	STRING* get_string	 
unique	STRING* get_string_index	INTVAL index
unique	STRING* get_string_index_s	STRING* index
unique	BOOLVAL get_bool	 
unique	void* get_value	
unique	BOOLVAL is_same		PMC* pmc2
int	void set_integer	INTVAL value
unique	void set_integer_index	INTVAL value	INTVAL index
unique	void set_integer_index_s	INTVAL value	STRING* index
float	void set_number		FLOATVAL value
unique	void set_number_index	FLOATVAL value	INTVAL index
unique	void set_number_index_s	FLOATVAL value	STRING* index
str	void set_string		STRING* value
unique	void set_string_index	STRING* value	INTVAL index
unique	void set_string_index_s	STRING* value	STRING* index
unique	void set_value		void* value
num	void add		PMC* value	 PMC* dest 
num	void subtract		PMC* value	 PMC* dest 
num	void multiply		PMC* value	 PMC* dest 
num	void divide		PMC* value	 PMC* dest 
num	void modulus		PMC* value	 PMC* dest 
str	void concatenate	PMC* value	 PMC* dest 
unique	BOOLVAL is_equal		PMC* value 
unique	void logical_or		PMC* value	 PMC* dest 
unique	void logical_and	PMC* value	 PMC* dest 
unique	void logical_not	PMC* value 
str	void match		PMC* value	 REGEX* re
str	void repeat		PMC* value	 PMC* dest 
