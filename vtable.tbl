# $Id$

void init()
void init_pmc(PMC* initializer)
void morph(INTVAL type)
void mark()
void destroy()

PMC* getprop(STRING* key)
void setprop(STRING* key, PMC* value)
void delprop(STRING* key)
PMC* getprops()

INTVAL type()
INTVAL type_keyed(PMC* key)
INTVAL type_keyed_int(INTVAL* key)

UINTVAL subtype(INTVAL type)
UINTVAL subtype_keyed(PMC* key, INTVAL type)
UINTVAL subtype_keyed_int(INTVAL* key, INTVAL type)

STRING* name()
STRING* name_keyed(PMC* key)
STRING* name_keyed_int(INTVAL* key)

void clone(PMC* dest)
void clone_keyed(PMC* key, PMC* dest)
void clone_keyed_int(INTVAL* key, PMC* dest)

PMC* find_method(STRING* method_name)
PMC* find_method_keyed(PMC* key, STRING* method_name)
PMC* find_method_keyed_int(INTVAL* key, STRING* method_name)

INTVAL get_integer()
INTVAL get_integer_keyed(PMC* key)
INTVAL get_integer_keyed_int(INTVAL* key)

FLOATVAL get_number()
FLOATVAL get_number_keyed(PMC* key)
FLOATVAL get_number_keyed_int(INTVAL* key)

BIGNUM* get_bignum()
BIGNUM* get_bignum_keyed(PMC* key)
BIGNUM* get_bignum_keyed_int(INTVAL* key)

STRING* get_string()
STRING* get_string_keyed(PMC* key)
STRING* get_string_keyed_int(INTVAL* key)

INTVAL get_bool()
INTVAL get_bool_keyed(PMC* key)
INTVAL get_bool_keyed_int(INTVAL* key)

INTVAL elements()
INTVAL elements_keyed(PMC* key)
INTVAL elements_keyed_int(INTVAL* key)

PMC* get_pmc()
PMC* get_pmc_keyed(PMC* key)
PMC* get_pmc_keyed_int(INTVAL* key)

INTVAL is_same(PMC* value)
INTVAL is_same_keyed(PMC* key, PMC* value, PMC* value_key)
INTVAL is_same_keyed_int(INTVAL* key, PMC* value, INTVAL* value_key)

void set_integer(PMC* value)
void set_integer_native(INTVAL value)
void set_integer_same(PMC* value)
void set_integer_keyed(PMC* key, INTVAL value)
void set_integer_keyed_int(INTVAL* key, INTVAL value)

void set_number(PMC* value)
void set_number_native(FLOATVAL value)
void set_number_same(PMC* value)
void set_number_keyed(PMC* key, FLOATVAL value)
void set_number_keyed_int(INTVAL* key, FLOATVAL value)

void set_bignum(PMC* value)
void set_bignum_native(BIGNUM* value)
void set_bignum_same(PMC* value)
void set_bignum_keyed(PMC* key, BIGNUM* value)
void set_bignum_keyed_int(INTVAL* key, BIGNUM* value)

void set_string(PMC* value)
void set_string_native(STRING* value)
void set_string_same(PMC* value)
void set_string_keyed(PMC* key, STRING* value)
void set_string_keyed_int(INTVAL* key, STRING* value)

void set_pmc(PMC* value)
void set_pmc_keyed(PMC* key, PMC* value, PMC* value_key)
void set_pmc_keyed_int(INTVAL* key, PMC* value, INTVAL* value_key)

void set_same(PMC* value)
void set_same_keyed(PMC* key, PMC* value, PMC* value_key)
void set_same_keyed_int(INTVAL* key, PMC* value, INTVAL* value_key)

INTVAL pop_integer()
INTVAL pop_integer_keyed(PMC* key)
INTVAL pop_integer_keyed_int(INTVAL* key)

FLOATVAL pop_float()
FLOATVAL pop_float_keyed(PMC* key)
FLOATVAL pop_float_keyed_int(INTVAL* key)

BIGNUM* pop_bignum()
BIGNUM* pop_bignum_keyed(PMC* key)
BIGNUM* pop_bignum_keyed_int(INTVAL* key)

STRING* pop_string()
STRING* pop_string_keyed(PMC* key)
STRING* pop_string_keyed_int(INTVAL* key)

PMC* pop_pmc()
PMC* pop_pmc_keyed(PMC* key)
PMC* pop_pmc_keyed_int(INTVAL* key)

void push_integer(INTVAL value)
void push_integer_keyed(PMC* key, INTVAL value)
void push_integer_keyed_int(INTVAL* key, INTVAL value)

void push_float(FLOATVAL value)
void push_float_keyed(PMC* key, FLOATVAL value)
void push_float_keyed_int(INTVAL* key, FLOATVAL value)

void push_bignum(BIGNUM* value)
void push_bignum_keyed(PMC* key, BIGNUM* value)
void push_bignum_keyed_int(INTVAL* key, BIGNUM* value)

void push_string(STRING* value)
void push_string_keyed(PMC* key, STRING* value)
void push_string_keyed_int(INTVAL* key, STRING* value)

void push_pmc(PMC* value)
void push_pmc_keyed(PMC* key, PMC* value, PMC* value_key)
void push_pmc_keyed_int(INTVAL* key, PMC* value, INTVAL* value_key)

INTVAL shift_integer()
INTVAL shift_integer_keyed(PMC* key)
INTVAL shift_integer_keyed_int(INTVAL* key)

FLOATVAL shift_float()
FLOATVAL shift_float_keyed(PMC* key)
FLOATVAL shift_float_keyed_int(INTVAL* key)

BIGNUM* shift_bignum()
BIGNUM* shift_bignum_keyed(PMC* key)
BIGNUM* shift_bignum_keyed_int(INTVAL* key)

STRING* shift_string()
STRING* shift_string_keyed(PMC* key)
STRING* shift_string_keyed_int(INTVAL* key)

PMC* shift_pmc()
PMC* shift_pmc_keyed(PMC* key)
PMC* shift_pmc_keyed_int(INTVAL* key)

void unshift_integer(INTVAL value)
void unshift_integer_keyed(PMC* key, INTVAL value)
void unshift_integer_keyed_int(INTVAL* key, INTVAL value)

void unshift_float(FLOATVAL value)
void unshift_float_keyed(PMC* key, FLOATVAL value)
void unshift_float_keyed_int(INTVAL* key, FLOATVAL value)

void unshift_bignum(BIGNUM* value)
void unshift_bignum_keyed(PMC* key, BIGNUM* value)
void unshift_bignum_keyed_int(INTVAL* key, BIGNUM* value)

void unshift_string(STRING* value)
void unshift_string_keyed(PMC* key, STRING* value)
void unshift_string_keyed_int(INTVAL* key, STRING* value)

void unshift_pmc(PMC* value)
void unshift_pmc_keyed(PMC* key, PMC* value, PMC* value_key)
void unshift_pmc_keyed_int(INTVAL* key, PMC* value, INTVAL* value_key)

## void splice ???

void splice(PMC* value, INTVAL offset, INTVAL count)

void add(PMC* value, PMC* dest)
void add_int(INTVAL value, PMC* dest)
void add_bignum(BIGNUM* value, PMC* dest)
void add_float(FLOATVAL value, PMC* dest)
void add_same(PMC* value, PMC* dest)
void add_keyed(PMC* key, PMC* value, PMC* value_key, PMC* dest, PMC* dest_key)
void add_keyed_int(INTVAL* key, PMC* value, INTVAL* value_key, PMC* dest, INTVAL* dest_key)

void subtract(PMC* value, PMC* dest)
void subtract_int(INTVAL value, PMC* dest)
void subtract_bignum(BIGNUM* value, PMC* dest)
void subtract_float(FLOATVAL value, PMC* dest)
void subtract_same(PMC* value, PMC* dest)
void subtract_keyed(PMC* key, PMC* value, PMC* value_key, PMC* dest, PMC* dest_key)
void subtract_keyed_int(INTVAL* key, PMC* value, INTVAL* value_key, PMC* dest, INTVAL* dest_key)

void multiply(PMC* value, PMC* dest)
void multiply_int(INTVAL value, PMC* dest)
void multiply_bignum(BIGNUM* value, PMC* dest)
void multiply_float(FLOATVAL value, PMC* dest)
void multiply_same(PMC* value, PMC* dest)
void multiply_keyed(PMC* key, PMC* value, PMC* value_key, PMC* dest, PMC* dest_key)
void multiply_keyed_int(INTVAL* key, PMC* value, INTVAL* value_key, PMC* dest, INTVAL* dest_key)

void divide(PMC* value, PMC* dest)
void divide_int(INTVAL value, PMC* dest)
void divide_bignum(BIGNUM* value, PMC* dest)
void divide_float(FLOATVAL value, PMC* dest)
void divide_same(PMC* value, PMC* dest)
void divide_keyed(PMC* key, PMC* value, PMC* value_key, PMC* dest, PMC* dest_key)
void divide_keyed_int(INTVAL* key, PMC* value, INTVAL* value_key, PMC* dest, INTVAL* dest_key)

void modulus(PMC* value, PMC* dest)
void modulus_int(INTVAL value, PMC* dest)
void modulus_bignum(BIGNUM* value, PMC* dest)
void modulus_float(FLOATVAL value, PMC* dest)
void modulus_same(PMC* value, PMC* dest)
void modulus_keyed(PMC* key, PMC* value, PMC* value_key, PMC* dest, PMC* dest_key)
void modulus_keyed_int(INTVAL* key, PMC* value, INTVAL* value_key, PMC* dest, INTVAL* dest_key)

void neg(PMC* dest)
void neg_keyed(PMC* key, PMC* dest, PMC* dest_key)
void neg_keyed_int(INTVAL* key, PMC* dest, INTVAL* dest_key)

void bitwise_or(PMC* value, PMC* dest)
void bitwise_or_int(INTVAL value, PMC* dest)
void bitwise_or_same(PMC* value, PMC* dest)
void bitwise_or_keyed(PMC* key, PMC* value, PMC* value_key, PMC* dest, PMC* dest_key)
void bitwise_or_keyed_int(INTVAL* key, PMC* value, INTVAL* value_key, PMC* dest, INTVAL* dest_key)

void bitwise_and(PMC* value, PMC* dest)
void bitwise_and_int(INTVAL value, PMC* dest)
void bitwise_and_same(PMC* value, PMC* dest)
void bitwise_and_keyed(PMC* key, PMC* value, PMC* value_key, PMC* dest, PMC* dest_key)
void bitwise_and_keyed_int(INTVAL* key, PMC* value, INTVAL* value_key, PMC* dest, INTVAL* dest_key)

void bitwise_xor(PMC* value, PMC* dest)
void bitwise_xor_int(INTVAL value, PMC* dest)
void bitwise_xor_same(PMC* value, PMC* dest)
void bitwise_xor_keyed(PMC* key, PMC* value, PMC* value_key, PMC* dest, PMC* dest_key)
void bitwise_xor_keyed_int(INTVAL* key, PMC* value, INTVAL* value_key, PMC* dest, INTVAL* dest_key)

void bitwise_not(PMC* dest)
void bitwise_not_keyed(PMC* key, PMC* dest, PMC* dest_key)
void bitwise_not_keyed_int(INTVAL* key, PMC* dest, INTVAL* dest_key)

void bitwise_shl(PMC* value, PMC* dest)
void bitwise_shl_int(INTVAL value, PMC* dest)
void bitwise_shl_same(PMC* value, PMC* dest)
void bitwise_shl_keyed(PMC* key, PMC* value, PMC* value_key, PMC* dest, PMC* dest_key)
void bitwise_shl_keyed_int(INTVAL* key, PMC* value, INTVAL* value_key, PMC* dest, INTVAL* dest_key)

void bitwise_shr(PMC* value, PMC* dest)
void bitwise_shr_int(INTVAL value, PMC* dest)
void bitwise_shr_same(PMC* value, PMC* dest)
void bitwise_shr_keyed(PMC* key, PMC* value, PMC* value_key, PMC* dest, PMC* dest_key)
void bitwise_shr_keyed_int(INTVAL* key, PMC* value, INTVAL* value_key, PMC* dest, INTVAL* dest_key)

void concatenate(PMC* value, PMC* dest)
void concatenate_native(STRING* value, PMC* dest)
void concatenate_same(PMC* value, PMC* dest)
void concatenate_keyed(PMC* key, PMC* value, PMC* value_key, PMC* dest, PMC* dest_key)
void concatenate_keyed_int(INTVAL* key, PMC* value, INTVAL* value_key, PMC* dest, INTVAL* dest_key)

INTVAL is_equal(PMC* value)
INTVAL is_equal_keyed(PMC* key, PMC* value, PMC* value_key)
INTVAL is_equal_keyed_int(INTVAL* key, PMC* value, INTVAL* value_key)

INTVAL cmp(PMC* value)
INTVAL cmp_keyed(PMC* key, PMC* value, PMC* value_key)
INTVAL cmp_keyed_int(INTVAL* key, PMC* value, INTVAL* value_key)
INTVAL cmp_num(PMC* value)
INTVAL cmp_num_keyed(PMC* key, PMC* value, PMC* value_key)
INTVAL cmp_num_keyed_int(INTVAL* key, PMC* value, INTVAL* value_key)
INTVAL cmp_string(PMC* value)
INTVAL cmp_string_keyed(PMC* key, PMC* value, PMC* value_key)
INTVAL cmp_string_keyed_int(INTVAL* key, PMC* value, INTVAL* value_key)

void logical_or(PMC* value, PMC* dest)
void logical_or_keyed(PMC* key, PMC* value, PMC* value_key, PMC* dest, PMC* dest_key)
void logical_or_keyed_int(INTVAL* key, PMC* value, INTVAL* value_key, PMC* dest, INTVAL* dest_key)

void logical_and(PMC* value, PMC* dest)
void logical_and_keyed(PMC* key, PMC* value, PMC* value_key, PMC* dest, PMC* dest_key)
void logical_and_keyed_int(INTVAL* key, PMC* value, INTVAL* value_key, PMC* dest, INTVAL* dest_key)

void logical_xor(PMC* value, PMC* dest)
void logical_xor_keyed(PMC* key, PMC* value, PMC* value_key, PMC* dest, PMC* dest_key)
void logical_xor_keyed_int(INTVAL* key, PMC* value, INTVAL* value_key, PMC* dest, INTVAL* dest_key)

void logical_not(PMC* dest)
void logical_not_keyed(PMC* key, PMC* dest, PMC* dest_key)
void logical_not_keyed_int(INTVAL* key, PMC* dest, INTVAL* dest_key)

void repeat(PMC* value, PMC* dest)
void repeat_int(INTVAL value, PMC* dest)
void repeat_keyed(PMC* key, PMC* value, PMC* value_key, PMC* dest, PMC* dest_key)
void repeat_keyed_int(INTVAL* key, PMC* value, INTVAL* value_key, PMC* dest, INTVAL* dest_key)
void repeat_int_keyed(PMC* key, INTVAL value, PMC* dest, PMC* dest_key)
void repeat_int_keyed_int(INTVAL* key, INTVAL value, PMC* dest, INTVAL* dest_key)

void increment()
void increment_keyed(PMC* key)
void increment_keyed_int(INTVAL* key)

void decrement()
void decrement_keyed(PMC* key)
void decrement_keyed_int(INTVAL* key)

INTVAL exists_keyed(PMC* key)
INTVAL exists_keyed_int(INTVAL* key)

INTVAL defined()
INTVAL defined_keyed(PMC* key)
INTVAL defined_keyed_int(INTVAL* key)

void delete_keyed(PMC* key)
void delete_keyed_int(INTVAL* key)

PMC* nextkey_keyed(PMC* key)
PMC* nextkey_keyed_int(INTVAL* key)

void substr(INTVAL offset, INTVAL length, PMC* dest)
void substr_keyed(PMC* key, INTVAL offset, INTVAL length, PMC* dest, PMC* dest_key)
void substr_keyed_int(INTVAL* key, INTVAL offset, INTVAL length, PMC* dest, INTVAL* dest_key)

STRING* substr_str(INTVAL offset, INTVAL length)
STRING* substr_str_keyed(PMC* key, INTVAL offset, INTVAL length)
STRING* substr_str_keyed_int(INTVAL* key, INTVAL offset, INTVAL length)

void* invoke(void* next)
void* invoke_pmc(PMC* sub, void* next)

INTVAL can(STRING* method)
INTVAL can_keyed(PMC* key, STRING* method)
INTVAL can_keyed_int(INTVAL* key, STRING* method)

INTVAL does(STRING* method)
INTVAL does_keyed(PMC* key, STRING* method)
INTVAL does_keyed_int(INTVAL* key, STRING* method)
