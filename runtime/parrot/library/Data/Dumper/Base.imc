=head1 TITLE

Data::Dumper::Base - style baseclass

=head1 VERSION

version 0.11

=head1 SYNOPSIS

TDB

=head1 DESCRIPTION

This module provides the default output style of C<Data::Dumper>.

=head1 METHODS

A Data::Dumper::Base object has the following methods:

=over 4

=cut

.const int attrDumper = 0
.const int attrLevel = 1
.const int attrIndention = 2
.const int attrCache = 3

.sub __library_data_dumper_base_onload @LOAD
    find_type I0, "Data::Dumper::Base"
    if I0 > 1 goto END
    newclass P0, "Data::Dumper::Base"
    addattribute P0, "dumper"
    addattribute P0, "level"
    addattribute P0, "indention"
    addattribute P0, "cache"
END:
    .pcc_begin_return
    .pcc_end_return
.end

.namespace ["Data::Dumper::Base"]

=item style."prepare"( dumper, indent )

=cut

.sub prepare method
    .param pmc dumper
    .param string indent
    .local string stemp
    .local pmc temp

    classoffset I0, self, "Data::Dumper::Base"
    add I0, attrDumper
    setattribute self, I0, dumper

    new temp, .PerlInt
    set temp, 0
    classoffset I0, self, "Data::Dumper::Base"
    add I0, attrLevel
    setattribute self, I0, temp
    
    new temp, .PerlString
    clone stemp, indent
    set temp, stemp
    classoffset I0, self, "Data::Dumper::Base"
    add I0, attrIndention
    setattribute self, I0, temp

    new temp, .PerlArray
    classoffset I0, self, "Data::Dumper::Base"
    add I0, attrCache
    setattribute self, I0, temp

    .pcc_begin_return
    .pcc_end_return
.end

=item (pos, name) = style."cache"( find, defname ) B<(internal)>

=cut

.sub cache method
    .param pmc find
    .param string defname
    .local pmc cache
    .local int i
    .local pmc entry
    .local string name
    .local pmc pname

    classoffset I0, self, "Data::Dumper::Base"
    add I0, attrCache
    getattribute cache, self, I0

    set i, cache
LOOP:
    dec i
    dec i
    if i < 0 goto NOTFOUND
    entry = cache[i]
    ne_addr entry, find, LOOP

    # found entry => get its name
    inc i
    name = cache[i]
    dec i
    .pcc_begin_return
    .return i
    .return name
    .pcc_end_return

NOTFOUND:
    set name, defname
    push cache, find
    push cache, name
    .pcc_begin_return
    .return -1
    .return name
    .pcc_end_return
.end

=item indent = style."createIndent"() B<(internal)>

=cut

.sub createIndent method
    .param int level
    .local pmc temp
    .local string indent

    classoffset I0, self, "Data::Dumper::Base"
    add I0, attrIndention
    getattribute temp, self, I0
    set indent, temp
    clone indent, indent
    repeat indent, indent, level
    
    .pcc_begin_return
    .return indent
    .pcc_end_return
.end

=item indent = style."indent"()

=cut

.sub indent method
    .local pmc temp
    .local string indent
    .local int level
        
    classoffset I0, self, "Data::Dumper::Base"
    add I0, attrLevel
    getattribute temp, self, I0
    set level, temp

    indent = self."createIndent"( level )

    .pcc_begin_return
    .return indent
    .pcc_end_return
.end

=item (subindent,indent) = style."newIndent"()

=cut

.sub newIndent method
    .local pmc temp
    .local string indent1
    .local string indent2
    .local int level
        
    classoffset I0, self, "Data::Dumper::Base"
    add I0, attrLevel
    getattribute temp, self, I0
    set level, temp
    inc temp

    indent1 = self."createIndent"( level )
    inc level
    indent2 = self."createIndent"( level )

    .pcc_begin_return
    .return indent2
    .return indent1
    .pcc_end_return
.end

=item indent = style."deleteIndent"()

=cut

.sub deleteIndent method
    .local pmc temp
    .local string indent
    .local int level
        
    classoffset I0, self, "Data::Dumper::Base"
    add I0, attrLevel
    getattribute temp, self, I0
    dec temp
    set level, temp

    indent = self."createIndent"( level )

    .pcc_begin_return
    .return indent
    .pcc_end_return
.end

=item style."dump"( name, dump )

=cut

.sub dump method
    .param string paramName
    .param pmc dump
    .local int type
    .local int ret
    .local string temp
    .local string func
    .local string name

    (type, name) = self."cache"( paramName, dump )

    if type == -1 goto NOT_IN_CACHE
    # name found in cache:
    self."dumpCached"( name, dump )
    branch END

NOT_IN_CACHE:
    # is dump null?
    # lookup the type id otherwise
    set func, "pmcNull"
    isnull dump, DUMP

    # does a helper method exists?
    typeof temp, dump
    set func, "pmc"
    concat func, temp
    can ret, self, func
    if ret goto DUMP
    # no, dump as a unknown PMC
    set func, "pmcDefault"
DUMP:
    ret = self.func( name, dump )
    unless ret goto END

    self."dumpProperties"( name, dump )

END:
    .pcc_begin_return
    .return 1
    .pcc_end_return
.end

=back

=head1 AUTHOR

Jens Rieks E<lt>parrot at jensbeimsurfen dot deE<gt> is the author
and maintainer.
Please send patches and suggestions to the Perl 6 Internals mailing list.

=head1 COPYRIGHT

Copyright (c) 2004, the Perl Foundation.

=cut
